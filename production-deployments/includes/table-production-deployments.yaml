# table structure. all content symbolic.
section: layout
header:
 - 0: [ meta.archiving, meta.blank ]
rows:
 - 0: [ content.cl_image, content.cl_text ]
 - 1: [ content.entry1_0, content.entry1_1 ]
 - 2: [ content.entry2_0, content.entry2_1 ]
 - 3: [ content.Firebase_0, content.Firebase_1 ]
 - 4: [ content.MongoHQ_0, content.MongoHQ_1 ]
 - 5: [ content.entry5_0, content.entry5_1 ]
 - 6: [ content.10gen_blog_0, content.10gen_blog_1 ]
 - 7: [ content.entry7_0, content.entry7_1 ]
 - 8: [ content.SourceForge_0, content.SourceForge_1 ]
 - 9: [ content.entry9_0, content.entry9_1 ]
 - 10: [ content.Harmony_0, content.Harmony_1 ]
 - 11: [ content.eHow_0, content.eHow_1 ]
 - 12: [ content.MeteKamil_0, content.MeteKamil_1 ]
 - 13: [ content.Omnidimensional_0, content.Omnidimensional_1 ]
 - 14: [ content.Watchlater_0, content.Watchlater_1 ]
 - 15: [ content.Web_Genius_0, content.Web_Genius_1 ]
 - 16: [ content.meinpraktikum_de_0, content.meinpraktikum_de_1 ]
 - 17: [ content.Tus_Media_0, content.Tus_Media_1 ]
 - 18: [ content.entry18_0, content.entry18_1 ]
 - 19: [ content.Production_Minds_0, content.Production_Minds_1 ]
 - 20: [ content.entry20_0, content.entry20_1 ]
 - 21: [ content.CustomInk_0, content.CustomInk_1 ]
 - 22: [ content.OpenSky_0, content.OpenSky_1 ]
 - 23: [ content.Gilt_Groupe_0, content.Gilt_Groupe_1 ]
 - 24: [ content.edelight_0, content.edelight_1 ]
 - 25: [ content.Totsy_0, content.Totsy_1 ]
 - 26: [ content.PlumWillow_0, content.PlumWillow_1 ]
 - 27: [ content.Shopwiki_0, content.Shopwiki_1 ]
 - 28: [ content.Yabblr_0, content.Yabblr_1 ]
 - 29: [ content.Ordoro_0, content.Ordoro_1 ]
 - 30: [ content.SavingStar_0, content.SavingStar_1 ]
 - 31: [ content.Wedding_Paper_Divas_0, content.Wedding_Paper_Divas_1 ]
 - 32: [ content.Storeden_0, content.Storeden_1 ]
 - 33: [ content.Gittigidiyor_com_0, content.Gittigidiyor_com_1 ]
 - 34: [ content.iPara_0, content.iPara_1 ]
 - 35: [ content.Coinbase_0, content.Coinbase_1 ]
 - 36: [ content.local_ch_0, content.local_ch_1 ]
 - 37: [ content.Turkishexporter_net_0, content.Turkishexporter_net_1 ]
 - 38: [ content.Bestcovery_com_0, content.Bestcovery_com_1 ]
 - 39: [ content.Bestekortingscode_nl_0, content.Bestekortingscode_nl_1 ]
 - 40: [ content.Wish_0, content.Wish_1 ]
 - 41: [ content.entry41_0, content.entry41_1 ]
 - 42: [ content.Codecademy_0, content.Codecademy_1 ]
 - 43: [ content.gradebook_0, content.gradebook_1 ]
 - 44: [ content.Courseoff_0, content.Courseoff_1 ]
 - 45: [ content.Boundless_Learning_0, content.Boundless_Learning_1 ]
 - 46: [ content.Foothill_De_Anza_Community_College_District_0, content.Foothill_De_Anza_Community_College_District_1 ]
 - 47: [ content.entry47_0, content.entry47_1 ]
 - 48: [ content.Sailthru_0, content.Sailthru_1 ]
 - 49: [ content.fiesta_cc_0, content.fiesta_cc_1 ]
 - 50: [ content.entry50_0, content.entry50_1 ]
 - 51: [ content.SecondMarket_0, content.SecondMarket_1 ]
 - 52: [ content.Athena_Capital_Research_0, content.Athena_Capital_Research_1 ]
 - 53: [ content.Equilar_0, content.Equilar_1 ]
 - 54: [ content.Auriga_USA_0, content.Auriga_USA_1 ]
 - 55: [ content.entry55_0, content.entry55_1 ]
 - 56: [ content.entry56_0, content.entry56_1 ]
 - 57: [ content.IGN_Entertainment_0, content.IGN_Entertainment_1 ]
 - 58: [ content.WordSquared_0, content.WordSquared_1 ]
 - 59: [ content.ea_com_0, content.ea_com_1 ]
 - 60: [ content.Kano_Games_0, content.Kano_Games_1 ]
 - 61: [ content.Shadelight_0, content.Shadelight_1 ]
 - 62: [ content.Freerice_0, content.Freerice_1 ]
 - 63: [ content.lichess_org_0, content.lichess_org_1 ]
 - 64: [ content.Moshen_Limited_s_0, content.Moshen_Limited_s_1 ]
 - 65: [ content.PictureTHIS_0, content.PictureTHIS_1 ]
 - 66: [ content.Gamera_Labs_0, content.Gamera_Labs_1 ]
 - 67: [ content.Doodle_or_Die_0, content.Doodle_or_Die_1 ]
 - 68: [ content.entry68_0, content.entry68_1 ]
 - 69: [ content.The_National_Archives_(UK)_0, content.The_National_Archives_(UK)_1 ]
 - 70: [ content.Colophon_for_the_GOV_UK_beta_0, content.Colophon_for_the_GOV_UK_beta_1 ]
 - 71: [ content.Sunlight_Labs_0, content.Sunlight_Labs_1 ]
 - 72: [ content.entry72_0, content.entry72_1 ]
 - 73: [ content.Santosoft_0, content.Santosoft_1 ]
 - 74: [ content.HolaDoctor_com_0, content.HolaDoctor_com_1 ]
 - 75: [ content.Vitals_com_0, content.Vitals_com_1 ]
 - 76: [ content.TalkAboutHealth_0, content.TalkAboutHealth_1 ]
 - 77: [ content.Earlydoc_0, content.Earlydoc_1 ]
 - 78: [ content.D_Sharp_0, content.D_Sharp_1 ]
 - 79: [ content.Vigilant_Medical_0, content.Vigilant_Medical_1 ]
 - 80: [ content.Mini_Medical_Record_0, content.Mini_Medical_Record_1 ]
 - 81: [ content.entry81_0, content.entry81_1 ]
 - 82: [ content.LexisNexis_Risk_Solutions_0, content.LexisNexis_Risk_Solutions_1 ]
 - 83: [ content.entry83_0, content.entry83_1 ]
 - 84: [ content.SPARC_0, content.SPARC_1 ]
 - 85: [ content.entry85_0, undefined ]
 - 86: [ content.entry86_0, content.entry86_1 ]
 - 87: [ content.entry87_0, content.entry87_1 ]
 - 88: [ content.Lulu_s_0, content.Lulu_s_1 ]
 - 89: [ content.3DRepo_org_0, content.3DRepo_org_1 ]
 - 90: [ content.entry90_0, content.entry90_1 ]
 - 91: [ content.MoPub_0, content.MoPub_1 ]
 - 92: [ content.Countly_0, content.Countly_1 ]
 - 93: [ content.Localytics_0, content.Localytics_1 ]
 - 94: [ content.Mobile_Helix_0, content.Mobile_Helix_1 ]
 - 95: [ content.Nearley_0, content.Nearley_1 ]
 - 96: [ content.entry96_0, content.entry96_1 ]
 - 97: [ content.entry97_0, content.entry97_1 ]
 - 98: [ content.Evolving_from_relational_to_document_store_0, content.Evolving_from_relational_to_document_store_1 ]
 - 99: [ content.Examiner_com_0, content.Examiner_com_1 ]
 - 100: [ content.Business_Insider_0, content.Business_Insider_1 ]
 - 101: [ content.Forbes_0, content.Forbes_1 ]
 - 102: [ content.The_New_York_Times_0, content.The_New_York_Times_1 ]
 - 103: [ content.Illinois_School_Report_Cards_application_0, content.Illinois_School_Report_Cards_application_1 ]
 - 104: [ content.CNN_Turk_0, content.CNN_Turk_1 ]
 - 105: [ content.entry105_0, content.entry105_1 ]
 - 106: [ content.Tracking_&_Analytics_with_MongoDB_at_Signpost;_MongoDB_for_Online_Advertising_0, content.Tracking_&_Analytics_with_MongoDB_at_Signpost;_MongoDB_for_Online_Advertising_1 ]
 - 107: [ content.Aggregate_Knowledge_0, content.Aggregate_Knowledge_1 ]
 - 108: [ content.MediaMath_0, content.MediaMath_1 ]
 - 109: [ content.Konverta_ru_0, content.Konverta_ru_1 ]
 - 110: [ content.G5_0, content.G5_1 ]
 - 111: [ content.Yodle_0, content.Yodle_1 ]
 - 112: [ content.The_Localstars_0, content.The_Localstars_1 ]
 - 113: [ content.EveryScreen_0, content.EveryScreen_1 ]
 - 114: [ content.Rafflecopter_0, content.Rafflecopter_1 ]
 - 115: [ content.LocalEver_0, content.LocalEver_1 ]
 - 116: [ content.entry116_0, content.entry116_1 ]
 - 117: [ content.Trello_0, content.Trello_1 ]
 - 118: [ content.Flowdock_0, content.Flowdock_1 ]
 - 119: [ content.Sherl_tv_0, content.Sherl_tv_1 ]
 - 120: [ content.entry120_0, content.entry120_1 ]
 - 121: [ content.entry121_0, content.entry121_1 ]
 - 122: [ content.entry122_0, content.entry122_1 ]
 - 123: [ content.bit_ly_0, content.bit_ly_1 ]
 - 124: [ content.10gen_0, content.10gen_1 ]
 - 125: [ content.Chartbeat_0, content.Chartbeat_1 ]
 - 126: [ content.server_monitoring_0, content.server_monitoring_1 ]
 - 127: [ content.Why_We_Like_MongoDB_at_Zuberance_0, content.Why_We_Like_MongoDB_at_Zuberance_1 ]
 - 128: [ content.ShareThis_0, content.ShareThis_1 ]
 - 129: [ content.GitHub_0, content.GitHub_1 ]
 - 130: [ content.Eventbrite_0, content.Eventbrite_1 ]
 - 131: [ content.MongoDB_Delivers_Results_for_Facebook_Advertisers_0, content.MongoDB_Delivers_Results_for_Facebook_Advertisers_1 ]
 - 132: [ content.Yottaa_0, content.Yottaa_1 ]
 - 133: [ content.BuzzFeed_0, content.BuzzFeed_1 ]
 - 134: [ content.uberVU_0, content.uberVU_1 ]
 - 135: [ content.CopperEgg_0, content.CopperEgg_1 ]
 - 136: [ content.Loggly_0, content.Loggly_1 ]
 - 137: [ content.Pattern_Builders_0, content.Pattern_Builders_1 ]
 - 138: [ content.Go_Graph_0, content.Go_Graph_1 ]
 - 139: [ content.VinTank_0, content.VinTank_1 ]
 - 140: [ content.Trunk_Club_0, content.Trunk_Club_1 ]
 - 141: [ content.entry141_0, content.entry141_1 ]
 - 142: [ undefined, undefined ]
 - 143: [ content.MinFil_se_0, content.MinFil_se_1 ]
 - 144: [ content.Appboy_0, content.Appboy_1 ]
 - 145: [ content.Ukrainian_Navigation_Systems_0, content.Ukrainian_Navigation_Systems_1 ]
 - 146: [ content.ChannelMeter_0, content.ChannelMeter_1 ]
 - 147: [ content.GoPollGo_0, content.GoPollGo_1 ]
 - 148: [ content.MineWhat_0, content.MineWhat_1 ]
 - 149: [ content.entry149_0, content.entry149_1 ]
 - 150: [ content.MongoDB_at_the_Energy_Frontier_0, content.MongoDB_at_the_Energy_Frontier_1 ]
 - 151: [ content.entry151_0, content.entry151_1 ]
 - 152: [ content.Realtime_springer_com_0, content.Realtime_springer_com_1 ]
 - 153: [ content.entry153_0, content.entry153_1 ]
 - 154: [ content.entry154_0, content.entry154_1 ]
 - 155: [ content.musweet_0, content.musweet_1 ]
 - 156: [ content.Behance_0, content.Behance_1 ]
 - 157: [ content.Guildwork_0, content.Guildwork_1 ]
 - 158: [ content.Silentale_0, content.Silentale_1 ]
 - 159: [ content.Squarespace_0, content.Squarespace_1 ]
 - 160: [ content.Shelby_tv_0, content.Shelby_tv_1 ]
 - 161: [ content.Jorjun_Technical_Services_0, content.Jorjun_Technical_Services_1 ]
 - 162: [ content.Tripl_0, content.Tripl_1 ]
 - 163: [ content.myList_s_0, content.myList_s_1 ]
 - 164: [ content.Bawaal_Labs_0, content.Bawaal_Labs_1 ]
 - 165: [ content.eZuce_0, content.eZuce_1 ]
 - 166: [ content.BranchOut_0, content.BranchOut_1 ]
 - 167: [ content.Parkuik_0, content.Parkuik_1 ]
 - 168: [ content.Meshfire_0, content.Meshfire_1 ]
 - 169: [ content.entry169_0, content.entry169_1 ]
 - 170: [ content.Viber_Media_0, content.Viber_Media_1 ]
 - 171: [ content.entry171_0, content.entry171_1 ]
 - 172: [ content.entry172_0, content.entry172_1 ]
 - 173: [ content.entry173_0, content.entry173_1 ]
 - 174: [ content.entry174_0, content.entry174_1 ]
 - 175: [ content.Sugar_CRM_0, content.Sugar_CRM_1 ]
 - 176: [ content.WuuhuuOnline_com_0, content.WuuhuuOnline_com_1 ]
 - 177: [ content.catch_com_0, content.catch_com_1 ]
 - 178: [ content.CollegeHumor_0, content.CollegeHumor_1 ]
 - 179: [ content.Thrillist_0, content.Thrillist_1 ]
 - 180: [ content.entry180_0, content.entry180_1 ]
 - 181: [ content.Evite_0, content.Evite_1 ]
 - 182: [ content.Justin_tv_0, content.Justin_tv_1 ]
 - 183: [ content.PhoneTag_0, content.PhoneTag_1 ]
 - 184: [ content.PiCloud_0, content.PiCloud_1 ]
 - 185: [ content.Hashrocket_0, content.Hashrocket_1 ]
 - 186: [ content.Ubiquity_Herd_0, content.Ubiquity_Herd_1 ]
 - 187: [ content.Preferred_Infrastructure__Inc_0, content.Preferred_Infrastructure__Inc_1 ]
 - 188: [ content.The_awesomeness_that_is_MongoDB_and_NoSQL__is_taking_over_Codaset_0, content.The_awesomeness_that_is_MongoDB_and_NoSQL__is_taking_over_Codaset_1 ]
 - 189: [ content.Punchbowl_com_0, content.Punchbowl_com_1 ]
 - 190: [ content.photostre_am_0, content.photostre_am_1 ]
 - 191: [ content.Fotopedia_0, content.Fotopedia_1 ]
 - 192: [ content.Grooveshark_0, content.Grooveshark_1 ]
 - 193: [ content.Struq_0, content.Struq_1 ]
 - 194: [ content.Pitchfork_0, content.Pitchfork_1 ]
 - 195: [ content.Floxee_0, content.Floxee_1 ]
 - 196: [ content.TeachStreet_0, content.TeachStreet_1 ]
 - 197: [ content.Visibiz_0, content.Visibiz_1 ]
 - 198: [ content.Defensio_0, content.Defensio_1 ]
 - 199: [ content.TweetSaver_0, content.TweetSaver_1 ]
 - 200: [ content.Bloom_Digital_0, content.Bloom_Digital_1 ]
 - 201: [ content.KLATU_Networks_0, content.KLATU_Networks_1 ]
 - 202: [ content.This_or_That!_0, content.This_or_That!_1 ]
 - 203: [ content.songkick_0, content.songkick_1 ]
 - 204: [ content.Crowdtap_0, content.Crowdtap_1 ]
 - 205: [ content.Detexify_0, content.Detexify_1 ]
 - 206: [ content.http___sluggy_com__0, content.http___sluggy_com__1 ]
 - 207: [ content.EDITD_0, content.EDITD_1 ]
 - 208: [ content.entry208_0, content.entry208_1 ]
 - 209: [ content.eFlyover_0, content.eFlyover_1 ]
 - 210: [ content.Shapado_0, content.Shapado_1 ]
 - 211: [ content.Sifino_0, content.Sifino_1 ]
 - 212: [ content.GameChanger_0, content.GameChanger_1 ]
 - 213: [ content.soliMAP_0, content.soliMAP_1 ]
 - 214: [ content.MyBankTracker_iPhone_App_0, content.MyBankTracker_iPhone_App_1 ]
 - 215: [ content.BillMonitor_0, content.BillMonitor_1 ]
 - 216: [ content.Tubricator_0, content.Tubricator_1 ]
 - 217: [ content.Mu_ly_0, content.Mu_ly_1 ]
 - 218: [ content.Avinu_0, content.Avinu_1 ]
 - 219: [ content.Topsy_0, content.Topsy_1 ]
 - 220: [ content.Cold_Hard_Code_0, content.Cold_Hard_Code_1 ]
 - 221: [ content.Similaria_pl_0, content.Similaria_pl_1 ]
 - 222: [ content.ToTuTam_0, content.ToTuTam_1 ]
 - 223: [ content.themoviedb_org_0, content.themoviedb_org_1 ]
 - 224: [ content.OCW_Search_0, content.OCW_Search_1 ]
 - 225: [ content.Mixero_0, content.Mixero_1 ]
 - 226: [ content.Biggo_0, content.Biggo_1 ]
 - 227: [ content.Kabisa_0, content.Kabisa_1 ]
 - 228: [ content.DokDok_0, content.DokDok_1 ]
 - 229: [ content.Enbil_0, content.Enbil_1 ]
 - 230: [ content.markitfor_me_0, content.markitfor_me_1 ]
 - 231: [ content.Backpage_Pics_0, content.Backpage_Pics_1 ]
 - 232: [ content.Joomla_Ads_0, content.Joomla_Ads_1 ]
 - 233: [ content.Eiwa_System_Management__Inc__0, content.Eiwa_System_Management__Inc__1 ]
 - 234: [ content.Morango_0, content.Morango_1 ]
 - 235: [ content.PeerPong_0, content.PeerPong_1 ]
 - 236: [ content.ibibo_0, content.ibibo_1 ]
 - 237: [ content.Zoofs_0, content.Zoofs_1 ]
 - 238: [ content.Oodle_0, content.Oodle_1 ]
 - 239: [ content.Funadvice_0, content.Funadvice_1 ]
 - 240: [ content.Ya_Sabe_0, content.Ya_Sabe_1 ]
 - 241: [ content.LoteriaFutbol_com_0, content.LoteriaFutbol_com_1 ]
 - 242: [ content.Kehalim_0, content.Kehalim_1 ]
 - 243: [ content.Givemebeats_net_0, content.Givemebeats_net_1 ]
 - 244: [ content.Planetaki_0, content.Planetaki_1 ]
 - 245: [ content.entry245_0, content.entry245_1 ]
 - 246: [ content.RowFeeder_0, content.RowFeeder_1 ]
 - 247: [ content.Open_Dining_Network_0, content.Open_Dining_Network_1 ]
 - 248: [ content.URLi_st_0, content.URLi_st_1 ]
 - 249: [ content.Kidiso_0, content.Kidiso_1 ]
 - 250: [ content.Carbon_Calculated_0, content.Carbon_Calculated_1 ]
 - 251: [ content.Vowch_0, content.Vowch_1 ]
 - 252: [ content.Ros_Spending_0, content.Ros_Spending_1 ]
 - 253: [ content.BlueSpark_0, content.BlueSpark_1 ]
 - 254: [ content.Click_here_0, content.Click_here_1 ]
 - 255: [ content.Man_of_the_House_0, content.Man_of_the_House_1 ]
 - 256: [ content.PeerIndex_0, content.PeerIndex_1 ]
 - 257: [ content.sahibinden_com_0, content.sahibinden_com_1 ]
 - 258: [ content.Ylastic_0, content.Ylastic_1 ]
 - 259: [ content.BRAINREPUBLIC_0, content.BRAINREPUBLIC_1 ]
 - 260: [ content.Friendmaps_0, content.Friendmaps_1 ]
 - 261: [ content.Jounce_0, content.Jounce_1 ]
 - 262: [ content.Virb_0, content.Virb_1 ]
 - 263: [ content.Deal_Machine_0, content.Deal_Machine_1 ]
 - 264: [ content.arrivalguides_com_0, content.arrivalguides_com_1 ]
 - 265: [ content.The_Hype_Machine_0, content.The_Hype_Machine_1 ]
 - 266: [ content.ChatPast_0, content.ChatPast_1 ]
 - 267: [ content.Stockopedia_0, content.Stockopedia_1 ]
 - 268: [ content.TravelPost_0, content.TravelPost_1 ]
 - 269: [ content.SoulGoal_0, content.SoulGoal_1 ]
 - 270: [ content.Top_Twitter_Trends_0, content.Top_Twitter_Trends_1 ]
 - 271: [ content.bongi_mobi_0, content.bongi_mobi_1 ]
 - 272: [ content.CoStore_0, content.CoStore_1 ]
 - 273: [ content.SnapDish_0, content.SnapDish_1 ]
 - 274: [ content.Bakodo_0, content.Bakodo_1 ]
 - 275: [ content.noclouds_org_0, content.noclouds_org_1 ]
 - 276: [ content.CafeClimb_com_0, content.CafeClimb_com_1 ]
 - 277: [ content.Keekme_0, content.Keekme_1 ]
 - 278: [ content.P2P_Financial_0, content.P2P_Financial_1 ]
 - 279: [ content.Qwerly_0, content.Qwerly_1 ]
 - 280: [ content.phpMyEngine_0, content.phpMyEngine_1 ]
 - 281: [ content.vsChart_0, content.vsChart_1 ]
 - 282: [ content.yap_TV_0, content.yap_TV_1 ]
 - 283: [ content.BusyConf_0, content.BusyConf_1 ]
 - 284: [ content.Sentimnt_0, content.Sentimnt_1 ]
 - 285: [ content.Workbreeze_0, content.Workbreeze_1 ]
 - 286: [ content.Kompasiana_0, content.Kompasiana_1 ]
 - 287: [ content.Milaap_0, content.Milaap_1 ]
 - 288: [ content.Agent_Storm_0, content.Agent_Storm_1 ]
 - 289: [ content.Mashape_0, content.Mashape_1 ]
 - 290: [ content.The_UK_Jobsite_0, content.The_UK_Jobsite_1 ]
 - 291: [ content.Tastebuds_0, content.Tastebuds_1 ]
 - 292: [ content.Skimlinks_0, content.Skimlinks_1 ]
 - 293: [ content.www_vanilladesk_com_0, content.www_vanilladesk_com_1 ]
 - 294: [ content.Summify_0, content.Summify_1 ]
 - 295: [ content.dakwak_0, content.dakwak_1 ]
 - 296: [ content.Kapost_0, content.Kapost_1 ]
 - 297: [ content.ContactMe_0, content.ContactMe_1 ]
 - 298: [ content.Moontoast_Impulse_0, content.Moontoast_Impulse_1 ]
 - 299: [ content.Shopperhive_0, content.Shopperhive_1 ]
 - 300: [ content.tracknose_0, content.tracknose_1 ]
 - 301: [ content.Wusoup_0, content.Wusoup_1 ]
 - 302: [ content.Fave_0, content.Fave_1 ]
 - 303: [ content.Doodle_0, content.Doodle_1 ]
 - 304: [ content.FindTheBest_0, content.FindTheBest_1 ]
 - 305: [ content.Fuseware_0, content.Fuseware_1 ]
 - 306: [ content.Wherevent_0, content.Wherevent_1 ]
 - 307: [ content.Skyline_Innovations_0, content.Skyline_Innovations_1 ]
 - 308: [ content.Memrise_0, content.Memrise_1 ]
 - 309: [ content.Dather_0, content.Dather_1 ]
 - 310: [ content.Fundastic_info_0, content.Fundastic_info_1 ]
 - 311: [ content.Foofind_Labs_0, content.Foofind_Labs_1 ]
 - 312: [ content.Beaconpush_0, content.Beaconpush_1 ]
 - 313: [ content.Easy_Bill_0, content.Easy_Bill_1 ]
 - 314: [ content.DeskMetrics_0, content.DeskMetrics_1 ]
 - 315: [ content.Interstate_0, content.Interstate_1 ]
 - 316: [ content.Proxlet_0, content.Proxlet_1 ]
 - 317: [ content.Dayload_0, content.Dayload_1 ]
 - 318: [ content.Avivo_0, content.Avivo_1 ]
 - 319: [ content.Abusix_0, content.Abusix_1 ]
 - 320: [ content.Idea2_0, content.Idea2_1 ]
 - 321: [ content.FamilyTies_0, content.FamilyTies_1 ]
 - 322: [ content.Pracanowo_pl_0, content.Pracanowo_pl_1 ]
 - 323: [ content.Republika_Online_0, content.Republika_Online_1 ]
 - 324: [ content.Grepler_com_0, content.Grepler_com_1 ]
 - 325: [ content.Thuisvergelijken_nl_0, content.Thuisvergelijken_nl_1 ]
 - 326: [ content.salsadb_com_0, content.salsadb_com_1 ]
 - 327: [ content.CHECK24_0, content.CHECK24_1 ]
 - 328: [ content.Wheelhouse_CMS_0, content.Wheelhouse_CMS_1 ]
 - 329: [ content.Qwk_io_0, content.Qwk_io_1 ]
 - 330: [ content.entry330_0, content.entry330_1 ]
 - 331: [ content.HeiaHeia_com_0, content.HeiaHeia_com_1 ]
 - 332: [ content.NewsCurve_0, content.NewsCurve_1 ]
 - 333: [ content.Accounting_SaaS_Japan_0, content.Accounting_SaaS_Japan_1 ]
 - 334: [ content.Fabric_Structures_Community_0, content.Fabric_Structures_Community_1 ]
 - 335: [ content.Brenden_Digital_0, content.Brenden_Digital_1 ]
 - 336: [ content.Attachments_me_0, content.Attachments_me_1 ]
 - 337: [ content.Thumbtack_0, content.Thumbtack_1 ]
 - 338: [ content.ChirpAt_Me_0, content.ChirpAt_Me_1 ]
 - 339: [ content.DianPing_com_0, content.DianPing_com_1 ]
 - 340: [ content.Venmo_0, content.Venmo_1 ]
 - 341: [ content.Intelie_0, content.Intelie_1 ]
 - 342: [ content.http___johnpwood_net_2011_05_31_fast_queries_on_large_datasets_using_mongodb_and_summary_documents__0, content.http___johnpwood_net_2011_05_31_fast_queries_on_large_datasets_using_mongodb_and_summary_documents__1 ]
 - 343: [ content.Directdialogs_com_0, content.Directdialogs_com_1 ]
 - 344: [ content.DC_Storm_0, content.DC_Storm_1 ]
 - 345: [ content.Bouncely_0, content.Bouncely_1 ]
 - 346: [ content.PClicks_0, content.PClicks_1 ]
 - 347: [ content.Magnetic_0, content.Magnetic_1 ]
 - 348: [ content.Okezone_com_0, content.Okezone_com_1 ]
 - 349: [ content.OpenChime_0, content.OpenChime_1 ]
 - 350: [ content.Monoloop_0, content.Monoloop_1 ]
 - 351: [ content.Yeay_me_0, content.Yeay_me_1 ]
 - 352: [ content.Activesphere_0, content.Activesphere_1 ]
 - 353: [ content.SocialCityDeals_0, content.SocialCityDeals_1 ]
 - 354: [ content.Thin_PHP_Framework_(TPF)_0, content.Thin_PHP_Framework_(TPF)_1 ]
 - 355: [ content.Newsman_App_0, content.Newsman_App_1 ]
 - 356: [ content.Sizzix_0, content.Sizzix_1 ]
 - 357: [ content.Gazaro_0, content.Gazaro_1 ]
 - 358: [ content.Dropzone_by_0, content.Dropzone_by_1 ]
 - 359: [ content.Cairenhui_0, content.Cairenhui_1 ]
 - 360: [ content.Ez_Texting_0, content.Ez_Texting_1 ]
 - 361: [ content.iKeepm_0, content.iKeepm_1 ]
 - 362: [ content.Maansu_com_0, content.Maansu_com_1 ]
 - 363: [ content.www_motores24h_pt_0, content.www_motores24h_pt_1 ]
 - 364: [ content.Techunits_0, content.Techunits_1 ]
 - 365: [ content.Buzzers_co_za_0, content.Buzzers_co_za_1 ]
 - 366: [ content.Paraimpu_0, content.Paraimpu_1 ]
 - 367: [ content.Trivian_0, content.Trivian_1 ]
 - 368: [ content.Business_com_0, content.Business_com_1 ]
 - 369: [ content.General_Flows_0, content.General_Flows_1 ]
 - 370: [ content.Art_sy_0, content.Art_sy_1 ]
 - 371: [ content.Spoondate_0, content.Spoondate_1 ]
 - 372: [ content.uQuery_Inc__0, content.uQuery_Inc__1 ]
 - 373: [ content.46elks_0, content.46elks_1 ]
 - 374: [ content.Chalkboard_0, content.Chalkboard_1 ]
 - 375: [ content.tisProperty_0, content.tisProperty_1 ]
 - 376: [ content.Digital_Media_Exchange_0, content.Digital_Media_Exchange_1 ]
 - 377: [ content.Daily_Gourmet_0, content.Daily_Gourmet_1 ]
 - 378: [ content.Singly_0, content.Singly_1 ]
 - 379: [ content.Loc__cit__0, content.Loc__cit__1 ]
 - 380: [ content.Naver_Japan_0, content.Naver_Japan_1 ]
 - 381: [ content.My_eStore_App_0, content.My_eStore_App_1 ]
 - 382: [ content.Fotosearch_Stock_Photography_0, content.Fotosearch_Stock_Photography_1 ]
 - 383: [ content.CloudAmp_0, content.CloudAmp_1 ]
 - 384: [ content.Piyavate_International_Hospital_0, content.Piyavate_International_Hospital_1 ]
 - 385: [ content.Mindvalley_0, content.Mindvalley_1 ]
 - 386: [ content.Cookfollower_0, content.Cookfollower_1 ]
 - 387: [ content.Weconext_0, content.Weconext_1 ]
 - 388: [ content.Visual_ly_0, content.Visual_ly_1 ]
 - 389: [ content.Trendrr_0, content.Trendrr_1 ]
 - 390: [ content.Wireclub_0, content.Wireclub_1 ]
 - 391: [ content.KANO_APPS_0, content.KANO_APPS_1 ]
 - 392: [ content.OnePageCRM_0, content.OnePageCRM_1 ]
 - 393: [ content.Blabbermouth_Social_0, content.Blabbermouth_Social_1 ]
 - 394: [ content.Persik_me_0, content.Persik_me_1 ]
 - 395: [ content.Kungfuters_LLC_0, content.Kungfuters_LLC_1 ]
 - 396: [ content.PunchTab_0, content.PunchTab_1 ]
 - 397: [ content.Nexon_Corp__0, content.Nexon_Corp__1 ]
 - 398: [ content.Heyzap_0, content.Heyzap_1 ]
 - 399: [ content.Fishidy_com_0, content.Fishidy_com_1 ]
 - 400: [ content.Wokeey_com_0, content.Wokeey_com_1 ]
 - 401: [ content.ThinktankSocial_0, content.ThinktankSocial_1 ]
 - 402: [ content.Data_Publica_0, content.Data_Publica_1 ]
 - 403: [ content.Hipster_0, content.Hipster_1 ]
 - 404: [ content.Noktacom_Medya_0, content.Noktacom_Medya_1 ]
 - 405: [ content.Searce_0, content.Searce_1 ]
 - 406: [ content.deegr_0, content.deegr_1 ]
 - 407: [ content.AppHarbor_0, content.AppHarbor_1 ]
 - 408: [ content.Pictomist_0, content.Pictomist_1 ]
 - 409: [ content.Xperantum_Xemantics_0, content.Xperantum_Xemantics_1 ]
 - 410: [ content.4Apps_0, content.4Apps_1 ]
 - 411: [ content.GLO_AB_0, content.GLO_AB_1 ]
 - 412: [ content.CMI_Soft_0, content.CMI_Soft_1 ]
 - 413: [ content.Fyndlr_0, content.Fyndlr_1 ]
 - 414: [ content.Exceptiontail_0, content.Exceptiontail_1 ]
 - 415: [ content.AdHui_com_0, content.AdHui_com_1 ]
 - 416: [ content.Travelmap_0, content.Travelmap_1 ]
 - 417: [ content.Global_Advertisers_0, content.Global_Advertisers_1 ]
 - 418: [ content.Melt_DSP_0, content.Melt_DSP_1 ]
 - 419: [ content.Startup_Threads_Monthly_0, content.Startup_Threads_Monthly_1 ]
 - 420: [ content.Songza_0, content.Songza_1 ]
 - 421: [ content.Ciris_0, content.Ciris_1 ]
 - 422: [ content.Socialbakers_Inc__0, content.Socialbakers_Inc__1 ]
 - 423: [ content.Neon_Grid_0, content.Neon_Grid_1 ]
 - 424: [ content.Ex_Machina_0, content.Ex_Machina_1 ]
 - 425: [ content.BellyBallot_0, content.BellyBallot_1 ]
 - 426: [ content.AdMaster_0, content.AdMaster_1 ]
 - 427: [ content.GetVega_0, content.GetVega_1 ]
 - 428: [ content.5Searches_0, content.5Searches_1 ]
 - 429: [ content.barbull_co_uk_0, content.barbull_co_uk_1 ]
 - 430: [ content.Power_lan_0, content.Power_lan_1 ]
 - 431: [ content.Sidebuy_0, content.Sidebuy_1 ]
 - 432: [ content.OviPets_0, content.OviPets_1 ]
 - 433: [ content.Tip_or_Skip_0, content.Tip_or_Skip_1 ]
 - 434: [ content.Nodegrid_0, content.Nodegrid_1 ]
 - 435: [ content.Courseoff_0, content.Courseoff_1 ]
 - 436: [ content.ClaimAble_0, content.ClaimAble_1 ]
 - 437: [ content.Ponder_Design_0, content.Ponder_Design_1 ]
 - 438: [ content.Stamped_0, content.Stamped_1 ]
 - 439: [ content.Hopper_0, content.Hopper_1 ]
 - 440: [ content.Recommendly_INC_0, content.Recommendly_INC_1 ]
 - 441: [ content.AlisverisRobotu_com_0, content.AlisverisRobotu_com_1 ]
 - 442: [ content.ITERNOVA_SL_0, content.ITERNOVA_SL_1 ]
 - 443: [ content.tvb_com_0, content.tvb_com_1 ]
 - 444: [ content.Ob1b_com_0, content.Ob1b_com_1 ]
 - 445: [ content.Talis_0, content.Talis_1 ]
 - 446: [ content.Digital_Flow_0, content.Digital_Flow_1 ]
 - 447: [ content.Transmachin_0, content.Transmachin_1 ]
 - 448: [ content.About_me_0, content.About_me_1 ]
 - 449: [ content.Dealer_com_0, content.Dealer_com_1 ]
 - 450: [ content.Famigo_0, content.Famigo_1 ]
 - 451: [ content.The_Materials_Project_0, content.The_Materials_Project_1 ]
 - 452: [ content.MapMyFitness_0, content.MapMyFitness_1 ]
 - 453: [ content.SimpleReach_0, content.SimpleReach_1 ]
 - 454: [ undefined, undefined ]
 - 455: [ content.Stripe_s_0, content.Stripe_s_1 ]
 - 456: [ content.Tuttur_com_0, content.Tuttur_com_1 ]
 - 457: [ content.WireLoad_0, content.WireLoad_1 ]
 - 458: [ content.Illicotravel_0, content.Illicotravel_1 ]
 - 459: [ content.Drawabble__0, content.Drawabble__1 ]
 - 460: [ content.Spideo_0, content.Spideo_1 ]
 - 461: [ content.radi8_co_uk_0, content.radi8_co_uk_1 ]
 - 462: [ content.PRIJSZOEKEN_nl_0, content.PRIJSZOEKEN_nl_1 ]
 - 463: [ content.JustReco_0, content.JustReco_1 ]
 - 464: [ content.Gimme_Bar_0, content.Gimme_Bar_1 ]
 - 465: [ content.Nodex_0, content.Nodex_1 ]
 - 466: [ content.FramtidsPost_AB_0, content.FramtidsPost_AB_1 ]
 - 467: [ content.Beanstalk_Data_0, content.Beanstalk_Data_1 ]
 - 468: [ content.wline_0, content.wline_1 ]
 - 469: [ content.TalkOver_0, content.TalkOver_1 ]
 - 470: [ content.StoreHR_0, content.StoreHR_1 ]
 - 471: [ content.Trillsy_0, content.Trillsy_1 ]
 - 472: [ content.Bottomless_Endless_0, content.Bottomless_Endless_1 ]
 - 473: [ content.Review19_0, content.Review19_1 ]
 - 474: [ content.iQmetrix_0, content.iQmetrix_1 ]
 - 475: [ content.Doocuments_Software_S_L__0, content.Doocuments_Software_S_L__1 ]
 - 476: [ content.JackThreads_0, content.JackThreads_1 ]
 - 477: [ content.Shelf9_0, content.Shelf9_1 ]
 - 478: [ content.Luminis_Technologies_0, content.Luminis_Technologies_1 ]
 - 479: [ content.Betterez_0, content.Betterez_1 ]
 - 480: [ content.DUVRI_81_08_0, content.DUVRI_81_08_1 ]
 - 481: [ content.Zomby_0, content.Zomby_1 ]
 - 482: [ content.Gusanito_com_0, content.Gusanito_com_1 ]
 - 483: [ content.Aion_Innovations_0, content.Aion_Innovations_1 ]
 - 484: [ content.Support_com__Inc_0, content.Support_com__Inc_1 ]
 - 485: [ content.Footballrrating_0, content.Footballrrating_1 ]
 - 486: [ content.Factile_0, content.Factile_1 ]
 - 487: [ content.Dir_0, content.Dir_1 ]
 - 488: [ content.Socialbakers_0, content.Socialbakers_1 ]
 - 489: [ content.YMIRLINK_0, content.YMIRLINK_1 ]
 - 490: [ content.jScore_0, content.jScore_1 ]
 - 491: [ content.Mailgun_0, content.Mailgun_1 ]
 - 492: [ content.National_Register_of_Haunted_Places_0, content.National_Register_of_Haunted_Places_1 ]
 - 493: [ content.4thex_Solutions_0, content.4thex_Solutions_1 ]
 - 494: [ content.PrivyTV_0, content.PrivyTV_1 ]
 - 495: [ content.Kookoja_0, content.Kookoja_1 ]
 - 496: [ content.J_Media_0, content.J_Media_1 ]
---
section: meta
blank: ""
archiving: "Archiving"
---
# table content, as content.<key>
section: content
cl_image: ".. image:: pd-images/craigslist.png"
cl_text: | 
           `Craigslist <http://www.10gen.com/customers/craigslist>`_ uses MongoDB to archive billions of records.

           - `Lessons Learned from Migrating 2+ Billion Documents at Craigslist<http://www.10gen.com/video/mongosf2011/craigslist>`_ - MongoSF (May 2011) 
           - `MongoDB Live at Craigslist<http://blog.mongodb.org/post/5545198613/mongodb-live-at-craigslist>`_ - MongoDB blog (May 2011) 
           - `MongoDB and Craigslist's Data Storage Evolution<http://www.10gen.com/video/mongosv2010/craigslist>`_ - MongoSV (December 2010)

## break here

entry2_0: Cloud Infrastructure Providers
entry2_1: 
Firebase_0: ".. image:: pd-images/firebase.png"
Firebase_1: "`Firebase<http://www.firebase.com/>`_ is a cloud service that automatically synchronizes data between clients and cloud servers. Apps built with Firebase can be written entirely with client-side JavaScript, update in real-time out-of-the-box, are inherently scalable, and interoperate well with existing services. Firebase offers developers a massively scaleable real-time backend for web applications. Firebase stores all its data in MongoDB which offers the built-in capability for apps to scale automatically and gives each piece of data its own unique URL stored in JSON documents."
MongoHQ_0: ".. image:: pd-images/mongohq.png"
MongoHQ_1: `MongoHQ<http://www.mongohq.com/>`_ provides a hosting platform for MongoDB and also uses MongoDB as the back-end for its service. Our `hosting centers<http://www.mongodb.org/display/DOCS/Hosting+Center>`_ page provides more information about MongoHQ and other MongoDB hosting options.
entry5_0: Content Managemententry5_1: 
10gen_blog_0: ".. image:: pd-images/sap_logo.gif"
10gen_blog_1: SAP uses MongoDB as a core component of SAP's platform-as-a-service (PaaS) offering. MongoDB was selected for the enterprise content management (ECM) section of the platform, as its flexibility and scalability will enable SAP to scale its content management service on its PaaS offering to meet customers' requirements while managing data from different applications. More information available on the `10gen blog<http://blog.10gen.com/post/10239727744/mongodb-selected-as-the-core-content-management>`_.
 
- `Introduction to SAP's Java Platform as a Service<http://www.10gen.com/presentations/mongouk-2011/introduction-to-saps-java-platform-as-a-service>`_ - Dieter Guendisch's Presentation at MongoUK (September 2011)

entry7_0: ".. image:: pd-images/mtv-networks-small.jpg"
entry7_1: MongoDB is the repository that powers `MTV Networks'<http://www.10gen.com/customers/mtv-networks>`_ next-generation CMS, which will eventually be used to manage and distribute content for all of MTV Networks' major websites. Current deployments include `SpikeTV.com<http://www.spike.com/>`_ and `Comedy Central Indecision<http://www.indecisionforever.com/>`_, and MTV Networks will be rolling out MongoDB on many other major sites within the next year, most likely including `gametrailers.com<http://www.gametrailers.com/>`_, `thedailyshow.com<http://www.thedailyshow.com/>`_, `comedycentral.com<http://www.comedycentral.com/>`_, `nick.com<http://www.nick.com/>`_, and numerous international properties. Read more on the `MongoDB blog<http://blog.mongodb.org/post/5360007734/mongodb-powering-mtvs-web-properties>`_.
 
- `How MTV Leverages MongDB for CMS<http://www.10gen.com/presentations/mongoboston-2011/how-mtv-leverages-mongodb-for-cms>`_ - Jeff Yemin's Presentation for MongoBoston 2011 (October 2011)

SourceForge_0: ".. image:: pd-images/logo-sourceforge.png"
SourceForge_1: MongoDB is used for back-end storage on the `SourceForge<http://sourceforge.net/>`_ front pages, project pages, and download pages for all projects.
 
- `Realtime Analytics using MongoDB, Python, Gevent, and ZeroMQ<http://www.10gen.com/presentations/mongosv-2011/realtime-analytics-using-mongodb-python-gevent-and-zeromq>`_ - Rick Copeland's Presentation at MongoSV (December 2011) 
- `Achieving 2+ Years of Mongo Stability and Performance on SF.net<http://www.10gen.com/presentations/mongodallas-2011/achieving-2-plus-years-of-mongo-stability-and-performance-on-sf-net>`_ - Mark Ramm's Presentation at MongoDallas (November 2011) 
- `Rapid and Scalable Development with MongoDB, PyMongo and Ming<http://www.10gen.com/presentations/mongodallas-2011/rapid-and-scalable-development-with-mongodb-pymongo-and-ming>`_ - Mark Ramm's Presentation at MongoDallas (November 2011) 
- `Allura - An Open-Source, MongoDB-based Document Oriented SourceForge<http://www.10gen.com/presentations/mongosf-2011/allura-open-source-mongodb-based-document-oriented-sourceforge>`_ - Rick Copeland's Presentation at MongoSF (May 2011) 
- `How SourceForge Uses MongoDB<http://www.10gen.com/presentations/mongoatlanta2011/sourceforge>`_ - Rick Copeland's Presentation at MongoAtlanta (February 2011) 
- `Scaling SourceForge with MongoDB<http://www.oscon.com/oscon2010/public/schedule/detail/13669>`_ - OSCON Presentation (July 2010) 
- `MongoDB at SourceForge<http://www.infoq.com/presentations/MongoDB-at-SourceForge>`_ - QCon London Presentation (March 2010) 
- `How Python, TurboGears, and MongoDB are Transforming SourceForge.net<http://us.pycon.org/2010/conference/schedule/event/110/>`_ - PyCon (February 2010) 
- `SourceForge.net releases Ming<http://sourceforge.net/blog/sourceforge-releases-ming/>`_ - SourceForge blog (December 2009) 
- `TurboGears on Sourceforge<http://compoundthinking.com/blog/index.php/2009/07/16/turbogears-on-sourceforge/>`_ - Compound Thinking (July 2009)

entry9_0: ".. image:: pd-images/wordnik.png"
entry9_1: `Wordnik<http://www.10gen.com/customers/wordnik>`_ stores its entire text corpus in MongoDB - 3.5T of data in 20 billion records. The speed to query the corpus was cut to 1/4 the time it took prior to migrating to MongoDB. More about MongoDB at Wordnik:
 
- `From the Cloud and Back<http://www.10gen.com/presentations/mongosv-2011/from-the-cloud-and-back>`_ - Presentation at MongoSV (December 2011) 
- `What drove Wordnik non-relational?<http://www.slideshare.net/fehguy/why-wordnik-went-nonrelational>`_ (August 2011) 
- `Building a Directed Graph with MongoDB<http://www.10gen.com/presentations/mongosf2011/wordnik>`_ - Tony Tam's Presentation at MongoSF (May 2011) 
- `Managing a MongoDB Deployment<http://www.slideshare.net/fehguy/managing-a-mongodb-deployment>`_ - Presentation at Large Scale Production Engineering Meetup (February 2011) 
- `Wordnik: 10 million API requests a day on MongoDB<http://highscalability.com/blog/2011/2/15/wordnik-10-million-api-requests-a-day-on-mongodb-and-scala.html>`_ - High Scalability Blog (February 2011) 
- `Keeping the Lights on with MongoDB<http://www.10gen.com/presentations/mongosv2010/wordnik>`_ - Tony Tam's Presentation at MongoSV 2010 (December 2010) 
- `12 Months with MongoDB<http://blog.wordnik.com/12-months-with-mongodb>`_ - Wordnik Blog (October 2010) 
- `B is for Billion<http://blog.wordnik.com/b-is-for-billion>`_ - Wordnik Blog (July 2010) 
- `MongoDB: Migration from Mysql at Wordnik<http://www.royans.net/arch/mongodb-migration-from-mysql-at-wordnik/>`_ - Scalable Web Architectures (May 2010) 
- `Tony Tam's Presentation at MongoSF<http://www.10gen.com/event_mongosf_10apr30#wordnik>`_ (April 2010) 
- `What has technology done for words lately?<http://blog.wordnik.com/what-has-technology-done-for-words-lately>`_ - Wordnik blog (February 2010)

Harmony_0: ".. image:: pd-images/harmonyapp.png"
Harmony_1: `Harmony<http://get.harmonyapp.com/>`_ is a powerful web-based platform for creating and managing websites. It helps developers with content editors work together with unprecedented flexibility and simplicity. From stylesheets, images and templates, to pages, blogs, and comments, every piece of Harmony data is stored in MongoDB. Switching to MongoDB from MySQL drastically simplified Harmony's data model and increased the speed at which we can deliver features.
 
- `Real World Data Modeling with MongoDB at Harmony<http://www.10gen.com/presentations/mongoboston2010/harmony>`_ - Steve Smith's Presentation at MongoBoston (September 2010) 
- `Steve Smith's presentation about Harmony at MongoSF<http://www.10gen.com/event_mongosf_10apr30#harmonyapp>`_ (April 2010)

eHow_0: ".. image:: pd-images/demand_media-logo.png"
eHow_1: `eHow<http://www.ehow.com/>`_, a web property of `Demand Media<http://www.demandmedia.com/>`_, receives 100MM+ unique users on a large content database. MongoDB is perfectly suited for eHow's content management, as the document model exactly matches the delivery model of documents and pages. The Demand Media team rewrote the legacy inherited .NET/SQL system to PHP/Python/MongoDB in a cachless, tierless design, all on one machine with replication.
MeteKamil_0: ".. image:: pd-images/yougameplay.png"
MeteKamil_1: `MeteKamil<http://yougameplay.com/>`_ uses MongoDB for browsing hundreds of thousands of videos on the websites: YouUnbox.com YouGamePlay.com YouOverClock.com DroidFather.com YouTouchDown.com
Omnidimensional_0: ".. image:: pd-images/03_small.png"
Omnidimensional_1: `Omnidimensional<http://omnidimensional.net/>`_ uses MongoDB to store and retrieve large numbers of records. Omnidimensional is a hybrid company that supplies its customers with high-end web applications, user-experience design solutions, webdesign and music or tunes for use in commercials.
Watchlater_0: ".. image:: pd-images/logo-watchlater.png"
Watchlater_1: `Watchlater<http://watchlaterapp.com/>`_ uses MongoDB as their primary database for their Watchlater app.
Web_Genius_0: ".. image:: pd-images/logo-webgenius.jpg"
Web_Genius_1: `Web Genius<http://www.webgenius.co.nz/>`_ uses MongoDB to host 700 small-to-medium business sites.
meinpraktikum_de_0: ".. image:: pd-images/logo-9elements.jpg"
meinpraktikum_de_1: 9elements uses MongoDB in their Rails projects `meinpraktikum.de<http://www.meinpraktikum.de/>`_
Tus_Media_0: ".. image:: pd-images/logo-tusmedia.gif"
Tus_Media_1: `Tus Media<http://www.tusclasesparticulares.com//>`_ uses MongoDB as their content management database.
entry18_0: ".. image:: pd-images/logo-amalya-tek.jpg"
entry18_1: Amalya Tek uses MongoDB as their content repository database.
Production_Minds_0: ".. image:: pd-images/logo-productionminds.png"
Production_Minds_1: `Production Minds<http://www.productionminds.com/>`_ uses MongoDB as their primary graph-like database for a complex web application.


## break here 



entry20_0: Ecommerce
entry20_1: 
CustomInk_0: ".. image:: pd-images/customink.jpg"
CustomInk_1: At `CustomInk<http://www.customink.com/>`_, we believe custom t-shirts have the power to turn your group into a team, elevate your gathering to an event, or make your special moment more... well, momentous. That's why we make it easy to create awesome shirts. CustomInk uses MongoDB for a number of different applications including:
 
- Supply Chain Management - MongoDB stores information about t-shirt suppliers and local screen printers. 
- Content Management - MongoDB is used to store the `product catalog<http://www.customink.com/categories/>`_, CustomInk sells hundreds of products, not just t-shrits. 
- Logging - MongoDB is used for logging interactions on the website and as a central store for application logs.<br>Learn more about how CustomInk is using MongoDB from their `presentation given at MongoSV 2011<http://www.10gen.com/presentations/mongosv-2011/mongodb-at-customink-adoption-operations-and-community>`_.

OpenSky_0: ".. image:: pd-images/opensky-logo.png"
OpenSky_1: `OpenSky<http://shopopensky.com/>`_ is a free online platform that helps people discover amazingproducts; share them with their friends, family and followers; andearn money. OpenSky uses MongoDB, Symfony 2, Doctrine 2, PHP 5.3, PHPUnit 3.5, jQuery, node.js, Git (with gitflow) and a touch of Java and Python. OpenSky uses MongoDB for just about everything (not just analytics). Along the way they've developed `MongoODM (PHP)<http://www.doctrine-project.org/blog/mongodb-for-ecommerce>`_ and MongoDB drivers for Mule and CAS.
 
- `Blending MongoDB with RDBMS for e-commerce<http://www.10gen.com/presentations/mongonyc-2011/blending-mongodb-with-rdbms-for-ecommerce>`_ - Steve Francia's presentation at MongoNYC (June 2011) 
- `Augmenting RDBMS with NoSQL for e-commerce<http://spf13.com/post/augmenting-rdbms-with-nosql-for-e-commerce>`_ - Steve Francia's presentation at Pg East (March 2011) 
- `MongoDB &amp; Ecommerce: A Perfect Combination<http://www.10gen.com/video/misc/ecommerce>`_ - Video from Steve Francia's presentation to the New York MongoDB User Group (October 2010)

Gilt_Groupe_0: ".. image:: pd-images/gg.png"
Gilt_Groupe_1: `Gilt Groupe<http://www.gilt.com>`_ is an invitation only luxury shopping site. Gilt uses MongoDB for real time ecommerce analytics.
 
- `MongoDB at Gilt<http://www.10gen.com/presentations/mongodb-seattle-2012-mongodb-gilt>`_ - Presentation at MongoDB Seattle 2012 
- Gilt CTO Mike Bryzek's presentation at `MongoSF<http://www.10gen.com/event_mongosf_10apr30#gilt>`_ in April 2010. 
- `Hummingbird<http://mnutt.github.com/hummingbird/>`_ - a real-time web traffic visualization tool developed by Gilt and powered by MongoDB

edelight_0: ".. image:: pd-images/edelight_logo_orangegrau_ohne-claim.png"
edelight_1: `edelight<http://www.edelight.de>`_ is a social shopping portal for product recommendations.
 
- `MongoDB and edelight: A Tale of Pain and Success in 10 Slides<http://www.10gen.com/presentations/mongoberlin2010/edelight>`_ - Fabian Schladitz's Presentation at MongoBerlin (October 2010) 
- `MongoDB: Wieso Edelight statt MySQL auf MongoDB setzt<http://www.excitingcommerce.de/2010/09/edelight-mongodb.html>`_ - Exciting Ecommerce blog (September 2010)

Totsy_0: ".. image:: pd-images/logo-totsy.png"
Totsy_1: `Totsy<http://www.totsy.com>`_ offers moms on-the-go and moms-to-be access to brand-specific sales, up to 70_ off retail. Totsy was re-built upon Li3 and MongoDB to correct performance and scaling limitations incurred while on the prior relational-database platform. The transition to MongoDB has resolved all of Totsy's performance and scaling issues.
 
- `MongoDB Ecommerce Case Study: Totsy<http://www.10gen.com/video/mongoboston2010/totsy>`_ - Mitch Pirtle's presentation at Mongo Boston (September 2010)

PlumWillow_0: ".. image:: pd-images/logo-plumwillow.png"
PlumWillow_1: `PlumWillow<http://www.plumwillow.com>`_ is a Social Shopping Network where girls who like fashion can build outfits by drag-and-drop, selecting from thousands of top-brand items. PlumWillow was built by a 'dream team' of core-developers/contributors to PHP, jQuery and MongoDB who utilized the Agile efficiency of MongoDB and the `Vork Enteprise PHP Framework<http://www.vork.us>`_ to bring PlumWillow from concept-to-launch in just a few months.
Shopwiki_0: ".. image:: pd-images/logo-shopwiki.gif"
Shopwiki_1: `Shopwiki<http://www.shopwiki.com/>`_ uses Mongo as a data store for its shopping search engine, where they commit all the data generated, such as custom analytics. Mongo's performance is such that ShopWiki uses it in cases where MySQL would just not be practical. ShopWiki is also using it as a storage engine for all R&amp;D and data-mining efforts where MongoDB's document oriented architecture offers maximum flexibility.
 
- `Avery's Talk at MongoNYC<http://devblog.shopwiki.com/post/660499806/averys-talk-at-mongonyc>`_ - ShopWiki Dev Blog (June 2010)

Yabblr_0: ".. image:: pd-images/yabblrlogo.png"
Yabblr_1: `Yabblr<http://yabblr.com/>`_ uses MongoDB for everything, including inventory management and orders. Yabblr is an E-Commerce platform which flips 'deals' on its head: Instead of pushing random offers at you, Yabblr empowers you to group together with friends to pull deals on products you select. Yabblr uses MongoDB exclusively as a data store for the entire platform, including: - User data - Real time metrics that are used for analyzing user behavior and system health - Inventory management - Customer orders - Event queues and message bus between different systems.
Ordoro_0: ".. image:: pd-images/ordoro_logo.png"
Ordoro_1: `Ordoro<https://www.ordoro.com/>`_ uses MongoDB to store orders, inventory and suppliers. Ordoro deals with everything that happens after a shopper clicks checkout on the retailer's website: print packing lists and shipping labels, manage inventory levels, manage dropshipping, manage customers, manage suppliers etc. Ordoro is the backoffice control panel for SMB etailers.
SavingStar_0: ".. image:: pd-images/savingstar_logo.png"
SavingStar_1: `SavingStar<https://savingstar.com/>`_ uses MongoDB to store our coupon content and service metadata, as well as all of our coupon activation data. The company is the first national, fully digital, grocery eCoupon service, available for free. There's nothing to clip, nothing to print.
Wedding_Paper_Divas_0: ".. image:: pd-images/weddingpaperdivas.png"
Wedding_Paper_Divas_1: `Wedding Paper Divas<http://www.weddingpaperdivas.com/>`_ uses MongoDB to store our categories and products.The company allows users to create `custom wedding invitations<http://www.weddingpaperdivas.com/>`_ online using their personalization tools to make unique and trendy wedding invitations quickly and easily.
Storeden_0: ".. image:: pd-images/storeden.png"
Storeden_1: `Storeden<http://www.storeden.com/>`_ is a cloud solution totally based on MongoDB. The easiness of the most popular shopping websites meets the performance of an advanced online sales solution. Storeden is a revolutionary e-Commerce platform that allows users and web-agencies to set up amazing on-line stores in just a few clicks. Everybody has the chance to create applications, graphic themes and Ã¢â‚¬Å¡suitesÃ¢â‚¬Å¡ and to sell them to the other users in the Cloud. Storeden can be perfectly integrated with the most common ERP and CRM platforms, allows the user to effectively leverage on Facebook, Ebay, Google Shopping and Kelkoo as further sales channels and is natively optimized for SEO.
Gittigidiyor_com_0: ".. image:: pd-images/gg_logo2.gif"
Gittigidiyor_com_1: `Gittigidiyor.com<http://www.Gittigidiyor.com/>`_ is the biggest e-commerce site in Turkey with more than 7 million registered users. Gittigidiyor.com have a big replicated and sharded MongoDB cluster for storing and for caching a wide range of data.
iPara_0: ".. image:: pd-images/iparalogo.png"
iPara_1: `iPara<https://www.ipara.com/>`_ uses MongoDB at payment pages to log all kind of user activites. After logging, they analyze those logs to determine new page designs and process flows. iPara offers safe and convenient payment and discount campaigns, providing many advantages for both users and businesses.
Coinbase_0: ".. image:: pd-images/coinbase_logo_white.png"
Coinbase_1: `Coinbase<https://www.coinbase.com/>`_ uses MongoDB for their primary datastore for their web app, api requests, etc. Coinbase is a decentralized, digital currency that is changing the world of payments.
local_ch_0: ".. image:: pd-images/logo_en-16f1faef18bed72d5fe7735129a7e62f.gif"
local_ch_1: `local.ch<http://www.local.ch>`_ uses MongoDB as their central data store to serve complete documents for all of their phonebook entries and geo data. Data is consumed by the website www.local.ch as well as their mobile apps.
Turkishexporter_net_0: ".. image:: pd-images/logo-turkishexporter.png"
Turkishexporter_net_1: `Turkishexporter.net<http://turkishexporter.net/>`_ uses MongoDB to list and filter their products, companies, and leads.
Bestcovery_com_0: ".. image:: pd-images/bestcovery-logo.png"
Bestcovery_com_1: `Bestcovery.com<http://www.bestcovery.com/>`_ uses MongoDB for MyBest pages, which allow users to discover interesting products and curate lists of their own favorite products and services to share with the world.
Bestekortingscode_nl_0: ".. image:: pd-images/logo-bkc.png"
Bestekortingscode_nl_1: `Bestekortingscode.nl<http://www.Bestekortingscode.nl>`_ uses MongoDB as their primary database.
Wish_0: ".. image:: pd-images/ic_wishmongo.png"
Wish_1: `Wish<http://www.wish.com/>`_ is a social platform for helping connect consumers to merchants with great deals on the products they want. They use MongoDB as their primary data store to serve up hundreds of gigabytes of data to almost 10 million users in real-time. It stands behind everything on the site, from their personalization engine to their commerce platform, and supports their growth of millions of new users every month.



## break here

entry41_0: Education
entry41_1: 
Codecademy_0: ".. image:: pd-images/codeacademy.png"
Codecademy_1: `Codecademy<http://www.codecademy.com/>`_ is the easiest way to learn to code online. Driven by the belief that programming is one of the most important skills of the twenty-first century, Codecademy has educated more than one million people in over 100 countries.
gradebook_0: ".. image:: pd-images/learnboost.png"
gradebook_1: LearnBoost is a free and amazing `gradebook<http://www.learnboost.com/>`_ web app that leverages MongoDB for its data storage needs. LearnBoost is the creator of `Mongoose<http://github.com/learnboost>`_, a JavaScript async ORM for MongoDB that is flexible, extensible and simple to use.
 
- `Mongoose<http://www.learnboost.com/mongoose/>`_ - LearnBoost blog (May 2010)

Courseoff_0: 
Courseoff_1: `Courseoff<https://courseoff.com>`_ uses MongoDB stores student created schedules as well as the schedule listings themselves.
Boundless_Learning_0: ".. image:: pd-images/boundless-logo.png"
Boundless_Learning_1: `Boundless Learning<http://www.boundlesslearning.com/>`_ uses MongoDB as a rapid-prototyping technology to develop a robust content management system.
Foothill_De_Anza_Community_College_District_0: ".. image:: pd-images/FHDA_Color_200W.png"
Foothill_De_Anza_Community_College_District_1: `Foothill-De Anza Community College District<http://www.fhda.edu/>`_ migrated a problematic document storage system into a web application backed by MongoDB, and using the Mongo GORM plug-in for Grails. They have indexed (and stored with GridFS) over 300,000 documents (56GB) into a single Mongo database. Mongo is much easier to get online than a comparable RDBMS, and the rich feature set helped significantly reduce the amount of required application coding. All said and done, switching to Mongo for this project has been a big win.


## break here

entry47_0: Email
entry47_1: 
Sailthru_0: ".. image:: pd-images/logo-sailthru.png"
Sailthru_1: `Sailthru<http://www.sailthru.com/>`_ is an innovative email service provider that focuses on improving the quality of emails over quantity. Moving to MongoDB from MySQL allowed us extreme flexibility in providing an API to our clients. Passing in arbitrary JSON data is easy our customers can use objects and arrays inside of their emails. And we've launched Sailthru Alerts, which allows our customers basically whitelabeled Google Alerts: realtime and summary alerts (price, tag match, etc) that are completely up to the customer due to our schema-free data storage. Also, we can gather realtime behavioral data on a client's signed-up users (tag-based interests, geolocale, time of day, etc), and use all that information to power dynamically assembled mass emails that get higher click-through rates than static emails. Plus we just launched an onsite recommendation widget (check it out at refinery29.com), and we're using MongoDB's analytic capabilities to rapidly A/B test different behavioral algorithms.
 
- `From Cloud to Colo<http://www.10gen.com/presentations/mongodb-seattle-2012-sailthru-moving-cloud-colo>`_ - Presentation at MongoDB Seattle 2012 
- `Two Years of MongoDB at Sailthru<http://www.10gen.com/presentations/mongonyc-2012-two-years-mongodb-sailthru>`_ - Presentation at MongoNYC 2012 
- `Scaling and Schema Design<http://www.10gen.com/presentations/mongonyc-2011-mongodb-sailthru-scaling-schema-design>`_ - Presentation at MongoNYC 2011 
- `MongoDB in Production at Sailthru<http://www.slideshare.net/ibwhite/mongodb-in-production-at-sailthru>`_ - Presentation to NY MongoDB User Group (January 2011)

fiesta_cc_0: ".. image:: pd-images/fiesta.png"
fiesta_cc_1: `fiesta.cc<https://fiesta.cc/>`_ makes creating mailing lists dead-simple, and fun. The goal is to bring groups together around a tool that everybody already uses and understands: email. We use MongoDB to store all of the data powering the website and the mail serving infrastructure. We're running a three node replica set.
 
- `MongoDB at fiesta.cc<http://www.10gen.com/presentations/nyc-meetup-group/mongodb-at-fiesta.cc>`_ - Mike Dirolf's Presentation for NYC Meetup Group (November 2011) 
- `Behind the Scenes at fiesta.cc<http://www.10gen.com/presentations/pygotham2011/behind-the-scenes-at-fiesta>`_ - Mike Dirolf's Presentation at PyGotham (September 2011)

## break here

entry50_0: Finance
entry50_1: 
SecondMarket_0: ".. image:: pd-images/secondmarket.jpg"
SecondMarket_1: `SecondMarket<https://www.secondmarket.com/>`_ is the online marketplace for alternative assets such as private company stock, structured products &amp; bankruptcy claims. SecondMarket uses mongoDB for storing its diverse asset classes in a single collection utilizing the power of the schema free nature of mongoDB. We also store organization news and activity in mongoDB.
 
- `Mongo &amp; Mongeez on the SecondMarket Engineering Blog<http://engineering.secondmarket.com/post/17156303982/mongo-mongeez>`_ - Feb 2012 
- `Mongeez<https://github.com/secondmarket/mongeez>`_ the open source, change management tool developed for MongoDB.] 
- `Second Market, MongoDB and Mongeez for Change Management<http://www.10gen.com/presentations/mongonyc-2011/secondmarket>`_ - Michael Lysaght's Presentation at MongoNYC (June 2011) 
- `Mongeez at SecondMarket<http://www.10gen.com/presentations/nyc-meetup-group/mongeez-at-secondmarket>`_ -Michael Lysaght's presentation at the MongoDB User Group (January 2012)

Athena_Capital_Research_0: ".. image:: pd-images/acr2.jpg"
Athena_Capital_Research_1: `Athena Capital Research<http://www.athenacr.com/>`_ is a quantitative investment manager, specializing in automated trading strategies.
 
- `How a Hedge Fund Uses MongoDB<http://www.10gen.com/presentations/mongonyc-2011/how-a-hedge-fund-uses-mongodb>`_ - Roman Shtylman's Presentation at MongoNYC (June 2011) 
- `Low Latency Event Logging with BSON<http://www.10gen.com/presentations/mongosv2010/acr>`_ - Andrew Morrow's Presentation at MongoSV (December 2010)

Equilar_0: ".. image:: pd-images/logo_equilar.gif"
Equilar_1: `Equilar<http://www.equilar.com/>`_ uncovers the direct pathways to the most influential high net worth individuals, and delivers immediate and actionable insight into the equity wealth events that drive business development opportunities. Equilar uses Mongo DB to map and analyze the connections between over 300,000 executives and board members in companies worldwide.
Auriga_USA_0: ".. image:: pd-images/aurigausa-logo.png"
Auriga_USA_1: `Auriga USA<http://www.aurigausallc.com/>`_ is a financial services company that operates in the residential mortgage space. Moving to MongoDB solved a host of problems, and assisted Auriga USA in upgrading the functionality of their loan inventory management system to handle many new features and different types of assets, including student loans, credit cards, and asset-back securities.
entry55_0: Gaming
entry55_1: 
entry56_0: ".. image:: pd-images/disney.jpg"
entry56_1: `Disney<http://www.10gen.com/customers/disney>`_ built a common set of tools and APIs for all games within the Interactive Media Group, using MongoDB as a common object repository to persist state information.
 
- `A Year with MongoDB: Running Operations to Keep the Game Magic Alive<http://www.10gen.com/presentations/mongosv-2011/a-year-with-mongodb-running-operations-to-keep-the-game-magic-alive>`_ - Curt Steven's Presentation at MongoSV (December 2011) 
- `Disney Central Services Storage: Leveraging Knowledge and skillsets<http://www.10gen.com/presentations/mongosf2011/disney>`_ - MongoSF (May 2011)

IGN_Entertainment_0: ".. image:: pd-images/ign.png"
IGN_Entertainment_1: `IGN Entertainment<http://www.ign.com/>`_, a unit of News Corporation, is a leading Internet media and services provider focused on the videogame and entertainment enthusiast markets. IGN's properties reached more than 37.3 million unique users worldwide February 2010, according to Internet audience measurement firm comScore Media Metrix. MongoDB powers IGN's real-time traffic analytics and RESTful Content APIs.
 
- `Using MongoDB for IGN's Social Platform<http://www.slideshare.net/lobster1234/mongo-meetup>`_ - Presentation to San Francisco MongoDB User Group (February 2011) 
- `Confessions of a recovering relational addict<http://www.10gen.com/presentations/mongosv-2010/confessions-recovering-relational-addict>`_ - Presentation by Chandra Patni at MongoSV (December 2010)

WordSquared_0: ".. image:: pd-images/wordsquared.jpg"
WordSquared_1: `WordSquared<http://wordsquared.com/>`_ (formerly Scrabbly) is a massively multiplayer online<del>scrabble</del> crossword. Uses MongoDB geospatial indexing.
 
- `Mapping Flatland: Using MongoDB for an MMO Crossword Game<http://www.10gen.com/presentations/mongoseattle-2011/mapping-flatland-using-mongodb-for-an-mmo-crossword-game>`_ - Presentation at Mongo Seattle 2011 
- `Building a Scrabble MMO in 48 Hours<http://www.startupmonkeys.com/2010/09/building-a-scrabble-mmo-in-48-hours/>`_ - Startup Monkeys Blog (September 2010)

ea_com_0: ".. image:: pd-images/ea_logo_standard.png"
ea_com_1: MongoDB is being used for the game feeds component. It caches game data from different sources which gets served to `ea.com<http://www.ea.com>`_, `rupture.com<http://www.rupture.com>`_ and the EA download manager.
Kano_Games_0: ".. image:: pd-images/kanogames_mongodb.png"
Kano_Games_1: `Kano Games<http://www.kanogames.com/>`_ uses MongoDB to build an online gaming web app that integrates social elements. It is a gaming web app that offers a large collection of html5 and flash games with new ones added daily. MongoDB is used to store all persistent data at Kano Games. Reliability, scalability, performance, redundancy and flexibility were all considered when selecting a persistent storage solution and MongoDB beat out the competition as it best fit Kano Games needs.
Shadelight_0: ".. image:: pd-images/shadelight.png"
Shadelight_1: `Shadelight<http://playshadelight.com/>`_ is a unique fantasy roleplaying game where you play one of the legendary Guardians of Elumir. Set out on magical quests, battle mysterious creatures and explore a truly unique fantasy world.
Freerice_0: ".. image:: pd-images/adyax.jpg"
Freerice_1: `Freerice<http://www.freerice.com/>`_ is developed by World Food Porgramme, the largest UN humanitary organisation. Freerice.com is a social quizz-like game where each good answer to a question make you win 10 rice grains. Since the begining more than 85 billions of rice grains were won trough freerice. Fully connected with twitter, facebook and groups, freerice tracks down each gain of each person. This generates almost 1 MongoDB row for each right answer, wich mean 8 billions of rows currently stored in Freerice MongoDB. Numerous totals are provided to the end user, which are all stored in Mongo too.
lichess_org_0: ".. image:: pd-images/large_tile.png"
lichess_org_1: `lichess.org<http://www.lichess.org/>`_ uses MongoDB to store more than 3 million chess games. It also contains the analysis, users, forum posts and chat messages. Lichess.org needs blazing fast updates and efficient indexing; mongodb gives it both. Lichess.org is OpenSource! Check the code on `http://github.com/ornicar/lila<http://github.com/ornicar/lila>`_.<br>MongoDB is the database behind `Moshen Limited's<http://www.moshen.com/>`_ Facebook game Gambino Poker. MongoDB is used to store all game events and player profiles. We use a 3 node replica-set and RAID 10 EBS Volumes.
Moshen_Limited_s_0: ".. image:: pd-images/moshen.png"
Moshen_Limited_s_1: MongodDB is the database behind `Moshen Limited's<http://www.moshen.com/>`_ Facebook game Gambino Poker. MongoDB is used to store all game events and player profiles. Moshen uses a 3 node replica-set and RAID 10 EBS Volumes.
PictureTHIS_0: ".. image:: pd-images/277130_336908486385043_1309598764_n.jpeg"
PictureTHIS_1: Hitcents uses MongodDB for primary data storage for their iOS/Android app `PictureTHIS<http://www.facebook.com/PictureTHISCommunity>`_. The app is a cooperative social word game.
Gamera_Labs_0: ".. image:: pd-images/highfive.png"
Gamera_Labs_1: `Gamera Labs<http://www.gameralabs.com/>`_ uses MongoDB for the Real-Time game `High5Poker<http://high5poker.gameralabs.com/>`_. The app is a cooperative social word game. MongoDB is used in production for data storage like players information and statistics.
Doodle_or_Die_0: ".. image:: pd-images/logo-doodleordie.png"
Doodle_or_Die_1: `Doodle or Die<http://doodleordie.com/>`_ uses MongoDB for almost everything in their online drawing game, including game and player information. Their logging and error tracking is also done through Mongo. More can be found in the MongoDC presentation `Mongo or Die<http://www.slideshare.net/Zugwalt/mongo-or-die-how-mongodb-powers-doodle-or-die>`_.

## break here

entry68_0: Government
entry68_1: 
The_National_Archives_(UK)_0: ".. image:: pd-images/national-archives.jpg"
The_National_Archives_(UK)_1: `The National Archives (UK)<http://www.nationalarchives.gov.uk/about/new-catalogue.htm>`_ made details of 11m records available through an `application interface<http://discovery.nationalarchives.gov.uk/SearchUI/api.htm>`_ it published as part of an ongoing programme to get more official records online. It is consolidating numerous existing electronic archives, either by porting them directly or putting them in a service wrapper that can communicate with its unified system. The unified system uses MongoDB and is built on a Microsoft software stack.
 
- `National Archives releases public application programming interface for 11m records<http://www.computerweekly.com/news/2240105501/National-Archives-releases-public-application-programming-interface-for-11m-records>`_ - ComputerWorld (Sept 2011) 
- `From SQL Server to MongoDB<http://www.10gen.com/presentations/mongouk-2011/from-sql-server-to-mongodb>`_ - Presentation at MongoDB UK (Sept 2011)

Colophon_for_the_GOV_UK_beta_0: ".. image:: pd-images/gov.uk.jpg"
Colophon_for_the_GOV_UK_beta_1: The British Government launched a beta of its GOV.UK platform, testing a single domain for that could be used throughout government. According to James Stewart, the Tech Lead on the beta of GOV.UK, 'We started out building everything using MySQL but moved to MongoDB as we realised how much of our content fitted its document-centric approach,' said Stewart. 'Over time we've been more and more impressed with it and expect to increase our usage of it in the future.'
 
- `Colophon for the GOV.UK beta<http://digital.cabinetoffice.gov.uk/colophon-beta/>`_ - Feb 2012 
- `With GOV.UK, British government redefines the online government platform<http://radar.oreilly.com/2012/01/with-govuk-british-government.html>`_ - O'Reilly Radar (Feb 2012)

Sunlight_Labs_0: ".. image:: pd-images/sunlight.png"
Sunlight_Labs_1: `Sunlight Labs<http://sunlightlabs.com/>`_ is a community of open source developers and designers dedicated to opening up our government to make it more transparent, accountable and responsible. MongoDB powers the `National Data Catalog<http://nationaldatacatalog.com>`_ and the `Drumbone API<http://services.sunlightlabs.com/docs/Drumbone_API/>`_, which is an aggregator of data about members of Congress.
 
- `MongoDB at Sunlight<http://www.10gen.com/presentations/mongodb-at-sunlight>`_ - Luis Martinez's Presentation Slides 
- `Civic Hacking<http://blip.tv/file/3680481>`_ - Video from Luigi Montanez's presentation at MongoNYC (May 2010) 
- `How We Use MongoDB at Sunlight<http://sunlightlabs.com/blog/2010/how-we-use-mongodb-sunlight/>`_ blog post (May 2010)

## break here

entry72_0: Healthcare
entry72_1: 
Santosoft_0: ".. image:: pd-images/Santosoft-Logo.png"
Santosoft_1: `Santosoft<http://www.santosoft.com/>`_ uses MongoDB for virtually 100_ of its data related stack. They run a fully blown shard cluster for transactional data, as well as analytics. They are building apps and tools for MongoDB and also hope to build the largest common care database globally.
HolaDoctor_com_0: ".. image:: pd-images/holadoctor.gif"
HolaDoctor_com_1: `HolaDoctor.com<http://holadoctor.com/es/>`_ is the most comprehensive health and wellness portal available in Spanish for the global online Hispanic community. MongoDB is being used to store all the content for the site, including GridFS to store article images. Session data is also being persisted on our MongoDB cluster using a custom PHP save handler.
Vitals_com_0: ".. image:: pd-images/vitals.gif"
Vitals_com_1: `Vitals.com<http://vitals.com>`_ consolidates and standardizes doctor and other health provider data from over 1,000 sources to help users make informed health care choices. Our technology also powers the websites and backends of insurance companies, hospitals, and other health information brokers. In early October, we switched the datasource for our Find A Doctor location-based search functionality from PostgreSQL to a geo-indexed MongoDB collection. Since then, searches are now five to ten times as fast, and the decreased load on our dataservers permits us to serve more clients. Based on this success, we are transitioning other functionality to MongoDB datasources.
TalkAboutHealth_0: ".. image:: pd-images/talkabouthealth.jpg"
TalkAboutHealth_1: `TalkAboutHealth<http://talkabouthealth.com>`_ matches people with similar health concerns for answers and live chats. Meet others just like you, learn from experienced peers, and share your experiences.
Earlydoc_0: ".. image:: pd-images/earlydoc.png"
Earlydoc_1: `Earlydoc<http://www.earlydoc.com/>`_ models medical data, which means things like master-identity management and data normalization occupy a lot of development time: this, specificly, is where the schemaless design of MongoDB is a<b>huge</b> win.
D_Sharp_0: ".. image:: pd-images/Logo-for-alyeska-page.png"
D_Sharp_1: `D Sharp<http://cdn2.dsharpdiabetes.com/>`_ uses MongoDB to store detailed medical observations and perform complex analysis to help people with diabetes better manage their blood sugars. Built using the Express web framework for Node.js and JQuery Mobile, D Sharp is the only diabetes application that support all types of diabetes on any modern smartphone or browser. This includes iPhone, iPad, Android, Windows Mobile, Blackberry and desktop browsers.
Vigilant_Medical_0: ".. image:: pd-images/vigilant.png"
Vigilant_Medical_1: `Vigilant Medical<http://vigilantmedical.net>`_ uses MongoDB to manage the large, complex, and often sparse metadata surrounding medical images. MongoDB also provides the entire administrative backbone of Vigilant's enterprise web application, ImageShare.
Mini_Medical_Record_0: ".. image:: pd-images/mmr.png"
Mini_Medical_Record_1: `Mini Medical Record<https://minimedrec.com/mmr.php>`_ is designed to improve medical care. While designed to help everyone, it is especially useful for travelers, and others who may receive care through multiple medical systems. Whether paper or electronic, medical records in cutting edge hospitals are often geared more for billing and medicolegal protection. Critical up-to-date information may be very challenging to discover. In addition, even simple information like emergency contact phone numbers and latest medication lists, may be inaccessible for patients who seek care in settings where they do not routinely receive their care. Mini Medical Record alleviates those issues.


## break here

entry81_0: Infrastructure
entry81_1: 
LexisNexis_Risk_Solutions_0: ".. image:: pd-images/lexisnexis.png"
LexisNexis_Risk_Solutions_1: `LexisNexis Risk Solutions<http://www.lexisnexis.com/>`_ serves the multi-billion dollar risk information industry, which is comprised of professionals and organizations such as law enforcement, government agencies, financial services firms, collection agencies, insurance and health care providers, and hiring managers.<br> <br>MongoDB is used by the DevOps group to store their CMDB information, static web content, auditing data, and serves as the persistence engine for their asynchronous messaging fabric.

## break here

entry83_0: Intranet
entry83_1: 
SPARC_0: ".. image:: pd-images/sparclogo.png"
SPARC_1: `SPARC<http://sparcet.com/>`_ uses MongoDB as its primary store for our employee engagement platform. SPARC has been very happy with how simple data migrations has been since leaving SQL behind.
entry85_0: <p>A Fortune 10 company uses MongoDB for their internal intranet app for their 100,000+ employees.</p>

## break here

entry86_0: Metadata Storage
entry86_1: 
entry87_0: ".. image:: pd-images/shutterfly.jpg"
entry87_1: `Shutterfly<http://www.10gen.com/customers/shutterfly>`_ is an Internet-based social expression and personal publishing service. MongoDB is used for various persistent data storage requirements within Shutterfly. MongoDB helps Shutterfly build an unrivaled service that enables deeper, more personal relationships between customers and those who matter most in their lives.
 
- `Performance Tuning and Scalability<http://www.10gen.com/presentations/mongosv-2011/performance-tuning-and-scalability>`_ - Kenny Gorman's Presentation at MongoSV (December 2011) 
- `The Shutterfly Data Layer and Schema Definitions<http://www.10gen.com/presentations/mongosv-2011/the-shutterfly-data-layer-and-schema-definitions>`_ - Luciano Resende's Presentation at MongoSV (December 2011) 
- `MongoDB Profiling and Tuning<http://www.10gen.com/video/mongosf2011/shutterfly>`_ - MongoSF (May 2011) 
- `Q &amp; A with Shutterfly Data Architect Kenny Gorman<http://www.nosqldatabases.com/main/2011/1/6/q-a-with-kenny-gorman-data-architect-for-shutterfly-inc.html>`_ (Jan 2011) 
- `Sharing Life's Joy using MongoDB: A Shutterfly Case Study<http://www.10gen.com/video/mongosv2010/shutterfly>`_ - Kenny Gorman's presentation at MongoSV (December 2010) 
- <em>Implementing MongoDB at Shutterfly</em> from MongoSF (April 2010): `Slides<http://www.slideshare.net/mongosf/implementing-mongodb-at-shutterfly-kenny-gorman>`_ and `Video<http://blip.tv/file/3593780>`_

Lulu_s_0: ".. image:: pd-images/lulu_colour.jpg"
Lulu_s_1: `Lulu's<http://www.lulu.com/>`_ open publishing platform empowers more creators to sell more content to more readers more profitably than ever before. Lulu uses MongoDB to store the bibliographic, product, and file metadata for its creators' works. MongoDB's document-based data model makes it easy to manage the differences between print books, eBooks, photo books, and calendars and to keep up with the rapidly evolving world of self publishing.
 
- `Mission Critical MongoDB<http://www.10gen.com/presentations/mongo-atlanta/lulu-mission-critical-mongodb>`_ - Presentation from MongoDB Atlanta 2012 
- `Why we decided NoSQL was right for us, How we came to choose MongoDB<http://www.10gen.com/presentations/mongo-raleigh-2011/why-we-decided-nosql-was-right-for-us-how-we-came-to-choose-mongodb>`_ - Sept 2011 Presentation

3DRepo_org_0: ".. image:: pd-images/3drepo-logo.png"
3DRepo_org_1: `3DRepo.org<http://3DRepo.org/>`_ uses MongoDB as a domain specific repository to store scene graph components as well as associated non-linear revision history of 3D assets. The main reasons for choosing MongoDB over alternative NoSQL solutions is the use of BSON documents for storage and retrieval, automated sharding, MapReduce functionality and built-in support for geospatial indexing.

## break here

entry90_0: Mobile
entry90_1: 
MoPub_0: ".. image:: pd-images/mopub-logo.png"
MoPub_1: `MoPub<http://www.mopub.com/>`_ uses MongoDB for realtime stats, budgeting systems, and user storage.
Countly_0: ".. image:: pd-images/2_reasonably_small.png"
Countly_1: `Countly<http://count.ly>`_ is an extensible, open source mobile analytics solution for mobile application developers. It tracks applications, customer behaviour or game mechanics - so you can focus on increasing user loyalty and engagement. With Countly, collected data is converted into meaningful information in true real-time, thanks to underlying infrastructure with MongoDB, Node.js and Nginx.
Localytics_0: ".. image:: pd-images/localytics-logo.png"
Localytics_1: `Localytics<http://www.localytics.com/>`_ uses MongoDB to process over 100M datapoints every day for their mobile analytics service.
Mobile_Helix_0: ".. image:: pd-images/mobile_helix_logo.gif"
Mobile_Helix_1: `Mobile Helix<http://www.mobilehelix.com/>`_ uses MongoDB to provide fast data read/write for the Mobile Helix Gateway, which analyzes data that needs to be delivered from an enterprise's network to a mobile device and pre-fetches, batches and schedules its delivery to be as quick and as efficient as possible. MongoDB enables the gateway to seamlessly scale to millions of devices accessing the Mobile Helix system from all over the globe.
Nearley_0: ".. image:: pd-images/hi-512-9.png"
Nearley_1: `Nearley<http://www.nearley.com/>`_ is a mobile geo location application to list all facebook users located within your distance. Nearley uses MongoDB to store user interaction and activities in real-time.
entry96_0: ".. image:: pd-images/o2.png"
entry96_1: O2 uses MongoDB for several applications, including their Priority Moments location based offer service.

## break here

entry97_0: News &amp; Media
entry97_1: 
Evolving_from_relational_to_document_store_0: ".. image:: pd-images/the-guardian-logo.jpg"
Evolving_from_relational_to_document_store_1: Guardian.co.uk is a leading UK-based news website. They've spent ten years fighting relational database representations of our domain model, until the implementation of our API made us realize that if only we could store documents everything would be simpler. MongoDB is a key part of the Guardian's infrastructure.
 
- `Evolving from relational to document store<http://www.10gen.com/presentations/mongosf-2011/evolving-relational-document-store-guardian>`_ - MongoSF (May 2011) 
- `Why I Chose MongoDB for guardian.co.uk<http://www.infoq.com/presentations/Why-I-Chose-MongoDB-for-Guardian>`_ - QCon London (August 2011) 
- `MongoDB at the Guardian<http://www.10gen.com/presentations/mongouk-2011/mongodb-at-the-guardian>`_ - MongoDB UK (Sept 2011)

Examiner_com_0: ".. image:: pd-images/examiner-logo.png"
Examiner_com_1: `Examiner.com<http://www.examiner.com>`_ is the fastest-growing local content network in the U.S., powered by the largest pool of knowledgeable and passionate contributors in the world. Launched in April 2008 with 60 cities, Examiner.com now serves hundreds of markets across the U.S. and Canada.<br> <br>Examiner.com migrated their site from Cold Fusion and SQL Server to Drupal 7 and MongoDB. Details of the deployment are outlined in an `Acquia case study<http://acquia.com/resources/library/case-study-examinercom>`_
Business_Insider_0: ".. image:: pd-images/bi.gif"
Business_Insider_1: `Business Insider<http://www.businessinsider.com/how-we-use-mongodb-2009-11>`_ has been using MongoDB since the beginning of 2008. All of the site's data, including posts, comments, and even the images, are stored on MongoDB. For more information:
 
- `An Inside Look At The Guts Of Our Tech Infrastructure<http://www.businessinsider.com/business-insider-tech-infrastructure-2011-6>`_ (June 2011 Article) 
- `How Business Insider Uses MongoDB<http://www.slideshare.net/ibwhite/how-business-insider-uses-mongodb>`_ (May 2010 Presentation) 
- `How This Web Site Uses MongoDB<http://www.businessinsider.com/how-we-use-mongodb-2009-11>`_ (November 2009 Article)

Forbes_0: ".. image:: pd-images/Forbes_LOGO_online.jpg"
Forbes_1: `Forbes<http://www.10gen.com/customers/forbes>`_ has been around for nearly 100 years and on the web for more than a decade; recently, the media space has been a changing landscape. One of the changes that Forbes has undertaken starting in 2010 was the opening up of its digital and print platforms to a global collection of content creators, marketers and audience members. This necessitated the changing of how the site worked, allowing content to flow easily through the site. Forbes began to evaluate how they store and serve their content and decided to use MongoDB. They are currently using MongoDB for storing articles and companies data and are working to move more of their core assets onto it.
 
- `Supporting Distributed Global Workforce of Contributors with MongoDB<http://www.10gen.com/presentation/mongonyc-2011/forbes>`_ David Dunlop's Presentation at MongoNYC (June 2011)

The_New_York_Times_0: ".. image:: pd-images/logo-times.gif"
The_New_York_Times_1: `The New York Times<http://www.nytimes.com>`_ is using MongoDB in a form-building application for photo submissions. Mongo's `dynamic schema<http://blog.mongodb.org/post/119945109/why-schemaless>`_ gives producers the ability to define any combination of custom form fields. For more information:
 
- `MongoDB in Production at the New York Times<http://www.10gen.com/presentations/mongonyc-2012-nyt-mongodb-production>`_ - Presentation from MongoNYC 2012 
- `The New York Times R&amp;D Lab and MongoDB<http://www.10gen.com/presentation/mongonyc-2011/nytimes>`_ - Presentation from MongoNYC 2011 
- `Building a Better Submission Form<http://open.blogs.nytimes.com/2010/05/25/building-a-better-submission-form/>`_ - NYTimes Open Blog (May 25, 2010) 
- `A Behind the Scenes Look at the New York Times Moment in Time Project<http://hackshackers.com/2010/07/28/a-behind-the-scenes-look-at-the-new-york-times-moment-in-time-project/>`_ - Hacks/Hackers Blog (July 28, 2010)

Illinois_School_Report_Cards_application_0: ".. image:: pd-images/chicagotribune-logo.png"
Illinois_School_Report_Cards_application_1: The Chicago Tribune uses MongoDB in its `Illinois School Report Cards application<http://schools.chicagotribune.com/>`_, which is generated from a nearly 9,000 column denormalized database dump produced annually by the State Board of Education. The application allows readers to search by school name, city, county, or district and to view demographic, economic, and performance data for both schools and districts.
CNN_Turk_0: ".. image:: pd-images/CNNTurk.jpeg"
CNN_Turk_1: `CNN Turk<http://www.cnnturk.com/default.aspx>`_ uses MongoDB for its infrastructure and content management system, including the tv.cnnturk.com, www.cnnturk.com and video.cnnturk.com portals.

## break here

entry105_0: Online Advertising and Marketing
entry105_1: 
Tracking_&_Analytics_with_MongoDB_at_Signpost;_MongoDB_for_Online_Advertising_0: ".. image:: pd-images/magnetic.png"
Tracking_&_Analytics_with_MongoDB_at_Signpost;_MongoDB_for_Online_Advertising_1: MongoDB will be the central data store in Magnetic's system, providing low-latency, high-volume reads in a distributed cluster behind its pixel servers, and near-real-time aggregate counts to its clients for forecasting. Magnetic is excited by the speed, replication features, flexible data model, and map-reduce style query access, which will let it dramatically simplify its system relative to the current architecture using a key-value store.
 
- `Tracking &amp; Analytics with MongoDB at Signpost; MongoDB for Online Advertising<http://www.10gen.com/presentations/ny-mug/tracking-analytics-with-mongodb-at-signpost-mongodb-for-online-advertising>`_ - Matt Insler's Presentation for NYC Meetup Group 
- `MongoDB Analytics for Online Advertising at Magnetic<http://www.10gen.com/presentations/webinar/mongodb-analytics-for-online-advertising-at-magnetic>`_ - Webinar hosted by Mark Weiss

Aggregate_Knowledge_0: ".. image:: pd-images/logo-aggregate-knowledge.png"
Aggregate_Knowledge_1: `Aggregate Knowledge<http://www.aggregateknowledge.com/>`_ is an IaaS company that combines data management and multi-touch attribution to make media accountable helping advertisers, agencies, ad networks, DSPs, SSPs, and publishers manage and exploit all of their data around a single view of the user. With more data to process, and less time at hand, Aggregate Knowledge pairs MongoDB with Fusion-io flash memory solutions for a winning combination.
MediaMath_0: ".. image:: pd-images/mediamath.gif"
MediaMath_1: `MediaMath<http://www.mediamath.com/>`_ is the leader in the new and rapidly growing world of digital media trading.
Konverta_ru_0: ".. image:: pd-images/logo_bb.png"
Konverta_ru_1: `Konverta.ru<http://konverta.ru/>`_ is the first Real Time Bidding (RTB) ad exchange on the Russian and CIS online advertising market. MongoDB is used to store all ads, ad impressions, clicks, and other data, as well as for real-time reporting and optimization.
G5_0: ".. image:: pd-images/g5.jpg"
G5_1: `G5<http://www.g5platform.com/>`_ is the largest and fastest growing provider of vertical-specific local marketing solutions that help mid-market companies get found online, generate more qualified leads, convert more leads into new customers, track marketing performance - including offline, and optimize to the marketing sources with the best return on investment. G5 migrated its analytics platform from MySQL to MongoDB due to the heavy demands of storing &amp; processing analytical data. MongoDB has proven to be fast, scalable, flexible, &amp; maintainable. Best of all, MongoDB is supported by a fantastic community!
Yodle_0: ".. image:: pd-images/yodle-logo.png"
Yodle_1: `Yodle<http://www.yodle.com/>`_ uses MongoDB to persist queues of items to be synchronized with several partner APIs. Mongo is ideally suited for this update-heavy performance sensitive workload.
The_Localstars_0: ".. image:: pd-images/localstars.png"
The_Localstars_1: `The Localstars<http://www.localstars.com/>`_ platform makes it easy for local advertisers to build and manage locally targeted advertising campaigns. The new Localstars advert server cluster uses sharded MongoDB to provide super high performance real time ad serving decision making and campaign statistics.
EveryScreen_0: ".. image:: pd-images/everyscreen-logo.png"
EveryScreen_1: `EveryScreen<http://www.everyscreenmedia.com/>`_ is built on a scalable, high-performance, real-time mobile advertising bidding platform in Amazon EC2.
Rafflecopter_0: ".. image:: pd-images/72ppi.png"
Rafflecopter_1: `Rafflecopter<http://www.rafflecopter.com/>`_ is a web app that helps online publishers run sweepstakes on their own blogs &amp; other sites. Rafflecopter logs and stores every entry to every contest that's ever been run, all contest details, user profiles, various logs/metrics, etc.
LocalEver_0: ".. image:: pd-images/localever.png"
LocalEver_1: `LocalEver<http://www.LocalEver.com/>`_ is a location based online market place to buy, sell &amp; rent residential/commercial properties, automobiles, and a host of other products. MongoDB is the backbone of the system, which powers the whole range of features from geo spatial search to caching.


## break here

entry116_0: Online Collaboration
entry116_1: 
Trello_0: ".. image:: pd-images/trello.png"
Trello_1: `Trello<http://trello.com>`_ is a collaboration tool that organizes your projects into boards. In one glance, Trello tells you what's being worked on, who's working on what, and where something is in a process. Trello stores all historical and non-ephemeral data in MongoDB. The Trello team was attracted to MongoDB for its speed. MongoDB offers very fast writes, faster reads, and better denormalization support; it allows them to store the data of each individual card on the Trello board in a single document in the database and still have the ability to query into (and index) subfields of the document. They were also attracted to MongoDB's reliability: it is really easy to replicate, back up, and restore.<br>Other benefits for the Trello team: using a loose document store makes it easy to run different versions of the Trello code against the same database without fooling around with DB schema migrations. This has a lot of benefits when they push a new version of Trello; there is seldom (if ever) a need to stop access to the app while we do a DB update or backfill.
 
- `What's in Trello<http://www.10gen.com/presentations/nyc-meetup-group/whats-in-the-trello>`_ Brett Keifer and the Trello team's presentation at the NYC MongoDB User Group, January 23, 2012. 
- `The Trello Stack<http://blog.fogcreek.com/the-trello-tech-stack/>`_ January 2012 from the `Fog Creek Blog<http://blog.fogcreek.com>`_ 
- `Trello Architecture<http://prezi.com/skunatcrkp5m/trello-architecture/>`_

Flowdock_0: ".. image:: pd-images/flowdock.png"
Flowdock_1: `Flowdock<http://www.flowdock.com/>`_ is a modern web-based team messenger, that helps your team to become more organized simply by chatting. Flowdock backend uses MongoDB to store all messages.
 
- `Why Flowdock migrated from Cassandra to MongoDB<http://blog.nodeta.fi/2010/07/26/flowdock-migrated-from-cassandra-to-mongodb/>`_ - Flowdock Blog (July 2010)

Sherl_tv_0: ".. image:: pd-images/term.png"
Sherl_tv_1: `Sherl.tv<http://shelr.tv/>`_ is service for sharing plain text terminal screencasts from a unix terminal that uses MongoDB as the main data storage for records.

## break here

entry120_0: Real-time stats/analytics
entry120_1: 
entry121_0: ".. image:: pd-images/intuit.gif"
entry121_1: `Intuit<http://www.10gen.com/customers/intuit>`_ is one of the world's largest providers of software and services for small businesses and individuals. Intuit uses MongoDB to track user engagement and activity in real-time across its network of websites for small businesses.
 
- `Deriving deep customer insights using MongoDB<http://www.10gen.com/video/mongosv2010/intuit>`_ - Presentation at MongoSV (December 2010)

entry122_0: ".. image:: pd-images/buddymedia.png"
entry122_1: The `Buddy Media<http://www.10gen.com/customers/buddymedia>`_ Platform gives brands the tools to manage their Facebook Pages and engage their Facebook fans. The second iteration of the Publisher tool on the Buddy Media Platform is powered by MongoDB.
 
- Social Analytics on MongoDB ( `Video<http://vimeo.com/20489222>`_ and `Slides<http://www.slideshare.net/pstokes2/social-analytics-with-mongodb>`_) - Presentation from February 2011 New York MongoDB User Group 
- `The New Buddy Media Publisher: What You Need To Know<http://www.buddymedia.com/newsroom/2010/11/the-new-buddy-media-publisher-what-you-need-to-know/>`_ - Buddy Media blog (November 2010)

bit_ly_0: ".. image:: pd-images/bitly.png"
bit_ly_1: `bit.ly<http://bit.ly/>`_ allows users to shorten, share, and track links. bit.ly uses MongoDB to store user history. For more information:
 
- `bit.ly user history, auto-sharded<http://blip.tv/file/3704043>`_ presentation at MongoNYC (May 2010)

10gen_0: ".. image:: pd-images/mms-thumbnail.png"
10gen_1: `10gen<http://www.10gen.com/>`_ is the initiator, contributor and continual sponsor of the MongoDB project. 10gen built `MongoDB Monitoring Service (MMS)<http://www.10gen.com/mongodb-monitoring-service>`_, a scalable software as a service monitoring tool built using MongoDB. MMS displays data in charts that track performance, resource utilization, availability, and response times. 10gen built MMS to provide operational insight into thousands of MongoDB deployments, and uses it to better diagnose and resolve customer issues.
Chartbeat_0: ".. image:: pd-images/chartbeat_media_logo.png"
Chartbeat_1: `Chartbeat<http://chartbeat.com/>`_ is a revolutionary real-time analytics service that enables people to understand emergent behaviour in real-time and exploit or mitigate it. Chartbeat stores all historical analytics data in MongoDB.
 
- `MongoDB &amp; EC2: A love story?<http://www.10gen.com/presentations/nyc-meetup-group/mongodb-and-ec2-a-love-story>`_ - NY MongoDB User Group (Oct 2011) 
- `The Secret Weapons Behind Chartbeat<http://codeshal.tumblr.com/post/499713180/the-secret-weapons-behind-the-chartbeat-beta>`_ - Kushal's coding blog (April 2010) 
- `Kushal Dave's Presentation at MongoNYC<http://blip.tv/file/3701052>`_ (May 2010)

server_monitoring_0: ".. image:: pd-images/logo-boxedice.png"
server_monitoring_1: Server Density is a `server monitoring<http://www.serverdensity.com>`_ tool from Boxed Ice. They have used MongoDB since June 2009 and are now processing billions of documents every month. Server Density also includes an addon for `MongoDB monitoring<http://www.serverdensity.com/mongodb/>`_<br>and they have written extensively about MongoDB itself.<br>Blog posts:
 
- `Why we migrated from mysql to mongodb<http://blog.boxedice.com/2009/07/25/choosing-a-non-relational-database-why-we-migrated-from-mysql-to-mongodb>`_ 
- `Automating partitioning, sharding and failover with MongoDB<http://blog.boxedice.com/2010/08/03/automating-partitioning-sharding-and-failover-with-mongodb/>`_ 
- `Notes from a production MongoDB deployment<http://blog.boxedice.com/2010/02/28/notes-from-a-production-mongodb-deployment/>`_ 
- `Many more<http://blog.boxedice.com/mongodb/>`_<br>Presentations: 
- `MongoDB Monitoring and Queueing<http://www.10gen.com/presentations/mongosf-2011/mongodb-monitoring-and-queueing>`_ - David Mytton's Presentation at MongoSF (May 2011) 
- `MongoDB Monitoring and Queueing<http://www.10gen.com/presentations/london-mug/mongodb-monitoring-and-queueing>`_ - London MUG (September 2010) 
- `Humongous Data at Server Density: Approaching 1 Billion Documents in MongoDB<http://www.10gen.com/presentations/webinar/humongous-data-at-server-density-approaching-one-billion-documents-in-mongodb>`_ - Webinar (November 2011) 
- `Ensuring High Availability for Real-time Analytics featuring Boxed Ice / Server Density<http://www.10gen.com/presentations/webinar-ensuring-high-availability-real-time-analytics-featuring-boxed-ice-server>`_ - Webinar (October 2012)

Why_We_Like_MongoDB_at_Zuberance_0: ".. image:: pd-images/zuberance.png"
Why_We_Like_MongoDB_at_Zuberance_1: Zuberance started using MongoDB as a reporting engine in their enterprise product. In Q3 of 2011, Zuberance decided to build their self serve product to scale it to thousands of brand marketers to have them identify, energize their advocates while giving them real-time analytics.
 
- `Why We Like MongoDB at Zuberance<http://engineering.zuberance.com/2012/01/30/why-we-like-mongodb-at-zuberance/>`_ - Zuberance Blog (January 2012)

ShareThis_0: ".. image:: pd-images/sharethislogosmall.gif"
ShareThis_1: `ShareThis<http://sharethis.com>`_ makes it easy to share ideas and get to the good stuff online. ShareThis is the world's largest sharing network reaching over 400 million users across 150,000 sites and 785,000 domains across the web
 
- `MongoDB is Powering ShareThis Count System<http://www.10gen.com/presentations/mongosv2010/sharethis>`_ - Lenin Gali's Presentation at MongoSV (December 2010)

GitHub_0: ".. image:: pd-images/gh.png"
GitHub_1: `GitHub<http://github.com/>`_, the social coding site, is using MongoDB for an internal reporting application.
 
- `MongoDB for Analytics<http://www.10gen.com/presentations/mongodb-chicago-2012/mongodb-analytics>`_ - John Nunemaker's presentation at MongoChicago 2012)

Eventbrite_0: ".. image:: pd-images/eventbrite.png"
Eventbrite_1: `Eventbrite<http://www.eventbrite.com/>`_ gives you all the online tools you need to bring people together for an event and sell tickets.
 
- `Building a Social Graph with MongoDB at Eventbrite<http://www.10gen.com/video/mongosv2010/eventbrite>`_ - Brian Zambrano's presentation at MongoSV (December 2010) 
- `Tech Corner: Auto recovery with MongoDB replica sets<http://blog.eventbrite.com/tech-corner-auto-recovery-with-mongodb-replica-sets-2>`_ - Eventbrite Blog (October 2010) 
- `Why you should track page views with MongoDB<http://blog.eventbrite.com/guest-post-why-you-should-track-page-views-with-mongodb>`_ - Eventbrite Blog (June 2010)

MongoDB_Delivers_Results_for_Facebook_Advertisers_0: ".. image:: pd-images/blinqmedia-logo.png"
MongoDB_Delivers_Results_for_Facebook_Advertisers_1: BLiNQ Media, an employee owned social media advertising and technology company, is one of 12 companies globally with access to the Facebook advertising API and the only company that is building its technology, BAM (BLiNQ Ad Manager) in Ruby on Rails. BLiNQ works with some of the world's leading media agencies and brands, helping them place and optimize advertising on Facebook through our proprietary technology. The technology team is headquartered in Midtown Atlanta at the Advanced Technology Development Center (ATDC), one of the world's top 10 incubators. The company's sales and client services headquarters is in TechSpace in New York City's Union Square area. BAM utilizes MongoDb as an operational data store to support millions of Facebook user and advertising campaign data. The data stored in MongoDB is then used for real-time reporting, analysis and optimization against key performance indicators. Since BAM went live in July 2010, it is storing over 7 million records and averaging in excess of 30,000 transactions a day.
 
- `MongoDB Delivers Results for Facebook Advertisers<http://www.slideshare.net/blinqmedia/mongodb-delivers-results-for-facebook-advertisers?from=share_email>`_ - Presentation at Mongo Atlanta (February 2011)

Yottaa_0: ".. image:: pd-images/yottaa.png"
Yottaa_1: `Yottaa<http://www.yottaa.com>`_ offers Performance Analytics, a cloud service that monitors, ranks and analyzes the performance of millions of web sites, providing an open database to answer questions such as Ã¢â‚¬Å¡why performance mattersÃ¢â‚¬Å¡ and Ã¢â‚¬Å¡how fast is my site?Ã¢â‚¬Å¡. Yottaa is using Ruby on Rails and MongoDB to build its scalable analytics engine.
 
- `How Yottaa Uses MongoDB<http://blog.yottaa.com/2010/09/how-yottaa-uses-mongodb/>`_ - Jared Rosoff's presentation at MongoBoston (September 2010) 
- `Scalable Event Analytics with MongoDB and Ruby<http://www.slideshare.net/jrosoff/scalable-event-analytics-with-mongodb-ruby-on-rails>`_ - Jared Rosoff's presentation at RubyConfChina (June 2010)

BuzzFeed_0: ".. image:: pd-images/buzzfeed.jpg"
BuzzFeed_1: `BuzzFeed<http://www.buzzfeed.com/>`_ is a trends aggregator that uses a web crawler and human editors to find and link to popular stories around the web. BuzzFeed moved an analytics system tracking over 400 million monthly events from MySQL to MongoDB.
uberVU_0: ".. image:: pd-images/ubervu.png"
uberVU_1: `uberVU<http://www.ubervu.com/>`_ is an intuitive social media management and analytics service used by companies of all sizes in 20+ countries. uberVU uses Mongo as its primary data store because of its fast writes, its schemaless approach and reliability.
 
- `Intelligent Stream-Filtering using MongoDB<http://www.10gen.com/presentations/mongouk-2011/intelligent-stream-filtering-using-mongodb>`_ - Mihnea Giurgea's Presentation at MongoUK (September 2011)

CopperEgg_0: ".. image:: pd-images/copperegg_logo_250px.png"
CopperEgg_1: `CopperEgg<http://www.copperegg.com/?utm_source=mongodb&amp;utm_medium=listing&amp;utm_campaign=partner>`_ RevealCloud `Awesome Cloud Monitoring<http://www.copperegg.com/product/cloud-monitoring/?utm_source=mongodb&amp;utm_medium=listing&amp;utm_campaign=partner>`_ CopperEgg is able to achieve its super real-time updates and alerts of the RevealCloud product with the help of MongoDB. Mongo was the only DB that fit the requirements of extremely rapid storage and retrieval of customer monitoring data to provide on-screen updates every few seconds (NOT minutes). CopperEgg monitors thousands of end points world-wide in real-time. RevealCloud is available to application development organizations to give the instant visibility of system performance in any stage of the development lifecycle, from initial design through production, helping ensure SLAsand giving your customers the response times they expect right now.
 
- `Designing Algorithms that Scale Horizontally with MongoDB<http://www.10gen.com/presentations/mongodallas-2011/designing-algorithms-that-scale-horozontally-with-mongodb>`_ - Luke Ehresman's Presentation at MongoDallas (November 2011)

Loggly_0: ".. image:: pd-images/loggly-logo.jpg"
Loggly_1: `Loggly<http://loggly.com/>`_ uses MongoDB as a repository of statistics and summary information for time series log data. Loggly collects and stores metrics into MongoDB including the size and count of log events, and the results of saved searches run against our customized fulltext search engine based on SOLR. These metrics are used to drive graphs, reports, dashboards and exciting visualizations for users.
Pattern_Builders_0: ".. image:: pd-images/pattern-builders-logo.png"
Pattern_Builders_1: `Pattern Builders<http://patternbuilders.com/>`_ built a .NET based streaming analytics engine using MongoDB. Relational databases and MSMQ were integrated with MongoDB for high performance and a great user experience.
Go_Graph_0: ".. image:: pd-images/gograph_logo.gif"
Go_Graph_1: `Go Graph<http://www.gograph.com/>`_ Stock Photography offers over 7 million stock images and graphics. We use MongoDB to track impression data on our search results pages. It helps us to track which results are served when a user does a search query. Using that data we are able to get a better idea of what our customers are looking for, and we are able to serve up better results which will translate into a better overall user experience.
VinTank_0: ".. image:: pd-images/VinTank.png"
VinTank_1: `VinTank<http://www.vintank.com/>`_ uses MongoDB to power the analytics and reporting for their social media listening and social CRM features. The company is the only digital think tank for the wine industry.
Trunk_Club_0: ".. image:: pd-images/logotype_TC_bg_323235.png"
Trunk_Club_1: `Trunk Club<http://www.trunkclub.com/>`_ uses MongoDB for a variety of applications, including real-time analytics, business intelligence and machine learning.The company allows guys discover awesome clothes that are perfect for them without ever having to go shopping by combining top brands, expert service, and unparalleled convenience to deliver a highly personalized experience that helps guys look their best and saves them time. 
 
- [Lightweight Business Intelligence with MongoDB

entry141_0: http://www.10gen.com/presentations/mongodb-chicago-2012/lightweight-business-intelligence-mongodb]
entry141_1: <ul type='square'> 
- Cory Ehmke's presentation at MongoChicago 2012)

MinFil_se_0: ".. image:: pd-images/minfil.se-gooood.png"
MinFil_se_1: `MinFil.se<http://minfil.se/>`_uses MongoDB for distributed &amp; redundant file storage capability. Using MongoDB, GridFS' service basically scales infinitely---they just add more servers as their storage requirement grows, Real-Time Analytics for all our users, all individual files, and for the service in general, tracking pageviews, downloads, unique downlods, referrers, etc
Appboy_0: ".. image:: pd-images/jlkjljklmkmmm.egg_0c5d2.png"
Appboy_1: `Appboy<http://www.appboy.com/>`_uses MongoDB for distributed &amp; redundant file storage capability. Appboy is a customer relationship management, marketing, and user analytics platform for mobile applications. They use MongoDB as their primary datastore and analytics backend.
Ukrainian_Navigation_Systems_0: ".. image:: pd-images/ukraine-copy.jpg"
Ukrainian_Navigation_Systems_1: `Ukrainian Navigation Systems<http://ukrnavi.com/>`_uses MongoDB for its main project database. The company manufactures advanced systems for GPS-monitoring.
ChannelMeter_0: ".. image:: pd-images/brand_logo_black.png"
ChannelMeter_1: `ChannelMeter<http://channelmeter.com>`_ harvests hourly and daily analytics from YouTube for millions of videos and tens of thousands of channels and stores them using MongoDB. This information powers ChannelMeter's website, which provides reports, analytics, and recommendations for individual vloggers and corporate giants alike.
GoPollGo_0: ".. image:: pd-images/logo-gopollgo.jpg"
GoPollGo_1: `GoPollGo<http://www.gopollgo.com/>`_ uses MongoDB as their main data store. They've found it to be great for real-time analytics, which is a big component for them and their users, who include ABC News, ESPN, Netflix and Yahoo.
MineWhat_0: ".. image:: pd-images/logo-minewhat.png"
MineWhat_1: `MineWhat<http://www.minewhat.com/>`_ is an automatic shopping assistance platform for ecommerce. MongoDB powers their data collection, where they need high write speeds in the single digit milliseconds. Aggregation framework/MapReduce provide them with analytics without need of a complex architecture.


## break here

entry149_0: Scientific
entry149_1: 
MongoDB_at_the_Energy_Frontier_0: CERN
MongoDB_at_the_Energy_Frontier_1: 
 
- CERN uses MongoDB for Large Hadron Collider data. 
 
- `MongoDB at the Energy Frontier<http://www.10gen.com/presentations/MongoNYC-2012/MongoDB-at-the-Energy-Frontier>`_ - MongoNYC presentation (May 2012) 
- `Holy Large Hadron Collider, Batman!<http://blog.mongodb.org/post/660037122/holy-large-hadron-collider-batman>`_ - MongoDB Blog (June 2010) 
 
entry151_0: Mount Sinai Institute
entry151_1: The Mount Sinai Institute for Genomics and Multiscale Biology uses MongoDB to help with various computational genomics tasks
Realtime_springer_com_0: Springer
Realtime_springer_com_1: 
- `Realtime.springer.com<http://realtime.springer.com/>`_ is a service that aggregates together downloads of Springer journal articles and book chapters in real time and displays them in a variety of visualizations. The goal of this service is to provide the scientific community with valuable information about how the literature is being used 'right now'. MongoDB is used to store the details of one million downloads per day from across Springer's sites. Map reduce jobs generate collections for the last 7, 30, and 90 days for around 2,000 journal and 40,000 book titles.
entry153_0: Social Networks
entry153_1: 
entry154_0: ".. image:: pd-images/foursquare.png"
entry154_1: `Foursquare<http://www.10gen.com/customers/foursquare>`_ is a location based social network that incorporates gaming elements. Foursquare uses MongoDB to store venues and user 'check-ins' into venues, sharding the data over more than 25 machines on Amazon EC2.
 
- `Experiences Deploying MongoDB on AWS<http://www.10gen.com/presentations/mongosv-2011/experiences-deploying-mongodb-on-aws>`_ - Cooper Bethea's Presentation at MongoSV (December 2011) 
- `Practical Data Storage: MongoDB at foursquare<https://www.10gen.com/presentation/mongonyc-2011/foursquare>`_ - MongoNYC (June 2011) 
- `MongoDB @ foursquare<http://www.10gen.com/video/mongosf2011/foursquare>`_ - MongoSF (May 2011) 
- `Scaling foursquare with MongoDB<http://www.10gen.com/video/misc/foursquare>`_ - New York MongoDB User Group (December 2010) 
- `MongoDB Q&amp;A<http://www.10gen.com/presentations/misc/foursquareqa>`_ - New York MongoDB User Group (December 2010) 
- MongoDB at foursquare presentation: `Slides<http://docs.google.com/present/view?id=dhkkqm6q_13gm6jq5fv>`_ and `Video<http://blip.tv/file/3704098>`_ (May 2010)

musweet_0: ".. image:: pd-images/musweet.png"
musweet_1: `musweet<http://musweet.com/>`_ keeps track of what artists and bands publish on the social web.
 
- `Handling Humongous Data Sets from Social Net<http://www.10gen.com/presentations/mongoberlin2010/musweet>`_ - Nader Cserny and Grischa Andreew's Presentation at MongoBerlin (October 2010)

Behance_0: ".. image:: pd-images/Behance_Logo.jpeg"
Behance_1: `Behance<http://www.behance.net/>`_ uses MongoDB to power its Behance's Activity Feed, which displays what's new and what's buzzing in the Behance community from the people you follow. The Activity Feed provides a way of exploring the creative world through everyone you know as a curator in real time.
Guildwork_0: ".. image:: pd-images/guildwork.png"
Guildwork_1: `Guildwork<http://www.guildwork.com/>`_ is a guild host and social network for massively online multiplayer games such as World of Warcraft. Guildwork stores nearly all data in MongoDB with the exception of sessions and chat history.
Silentale_0: ".. image:: pd-images/logo-silentale.png"
Silentale_1: `Silentale<https://silentale.com/>`_ keeps track of your contacts and conversations from multiple platforms and allows you to search and access them from anywhere. Silentale is using MongoDB as the back-end for indexing and searching on millions of stored messages of different types. More details on Silentale can be found in this `TechCrunch<http://uk.techcrunch.com/2009/09/08/silentale-lets-you-archive-and-search-your-every-conversation/>`_ article.
 
- One Year with MongoDB presentation from MongoUK (June 2010): `Slides<http://www.slideshare.net/silentale/one-year-with-mongodb-at-silentale-mongofr-mongouk>`_ and `Video<http://skillsmatter.com/podcast/cloud-grid/one-year-with-mongodb-at-silentale>`_

Squarespace_0: ".. image:: pd-images/squarespace.jpg"
Squarespace_1: `Squarespace<http://www.squarespace.com/>`_ is an innovative web publishing platform that consists of a fully hosted and managed GUI environment for creating and maintaining websites. Squarespace's new social modules utilize Mongo to store large amounts of social data that is pulled in from around the Internet and displayed in native widgets that are fully integrated with the platform.
Shelby_tv_0: ".. image:: pd-images/Shelby.tv.png"
Shelby_tv_1: `Shelby.tv<http://shelby.tv/>`_ Shelby uses a few physically distinct MongoDB replica sets as the primary data stores in development and production. That data is accessed by web and iOS through our internal Ruby API.
Jorjun_Technical_Services_0: ".. image:: pd-images/jorjun_logo.png"
Jorjun_Technical_Services_1: `Jorjun Technical Services<http://www.jorjun.com/>`_ uses MongoDB for caching json-based REST API calls, and increasingly for production data. The company offers solid, reliable software applications by offering focus, experience, lateral thinking and experienced evaluation of technical options.
Tripl_0: ".. image:: pd-images/tripl_logo.png"
Tripl_1: `Tripl<http://www.tripl.com/>`_ stores all checkin data, trips and notifications as well as queues in MongoDB. It is built from social geo-data on Facebook, Foursquare and Instagram to highlight trips and present travel stories from your friends.
myList_s_0: ".. image:: pd-images/mylist-copy.jpg"
myList_s_1: `myList's<http://www.mylist.com/>`_ Dev, Sandbox, and Production all use MongoDB for their backend. myList is a Facebook application that allows people to discover and organize the things in their lives. All back end data is in MongoDB with Solr for indexing and Hadoop for Map/Reduce jobs against logs.
Bawaal_Labs_0: ".. image:: pd-images/dM4QAXRd2py7Q0r.png"
Bawaal_Labs_1: `Bawaal Labs<http://www.Bawaal.com/>`_ uses MongoDB for user management and storing all data related to user posts. Bawaal contains views on technology, social networking and current happenings.
eZuce_0: ".. image:: pd-images/home.png"
eZuce_1: `eZuce<https://www.ezuce.com/>`_ openUC features an advanced SIP Services Oriented Architecture (SSOA) which uses MongoDB to persistently store all user profile and transaction data in a distributed way. While MongoDB's stellar performance is critical to SSOA, its main benefit for SSOA is the horizontal sharding that's part of its architecture, which allows horizontal scaling across several nodes. MongoDB also holds all client registration data and makes it available to all session manager nodes. The effect to the user is completely seamless failover at a regional or global level. Many session manager nodes can participate in such a globally redundant cluster, which allows enterprises to easily build a robust communications backbone that spans the entire enterprise.
BranchOut_0: ".. image:: pd-images/logo-signout.png"
BranchOut_1: `BranchOut<http://branchout.com/>`_ uses MongoDB to store profile statistics, back their feed data, endorsements and other key features of the application. BranchOut is a Facebook application designed for finding jobs, networking professionally, and recruiting employees.
Parkuik_0: ".. image:: pd-images/logo-parkuik.png"
Parkuik_1: `Parkuik<http://www.parkuik.com/>`_ uses MongoDB to store parking locations and perform geolocated queries.
Meshfire_0: ".. image:: pd-images/logo-meshfire.png"
Meshfire_1: `Meshfire<http://www.meshfire.com/>`_ uses MongoDB as the database tier for the Meshfire SaaS application.

## break here


entry169_0: Telecommunications
entry169_1: 
Viber_Media_0: ".. image:: pd-images/viber.jpg"
Viber_Media_1: `Viber Media<http://www.viber.com/>`_ is using MongoDB as the core cloud infrastructure for its popular iPhone and Android applications that offer free phone calls and text messaging between users over 3G and wireless networks. Viber selected MongoDB for its ability to scale as more users join the Viber community and to manage peak and unpredictable data loads from its 30 million plus registered mobile users.
 
- `MongoDB at Viber Media: The Platform Enabling Free Phone Calls and Text Messaging for Over 18 Million Active Users<http://nosql.mypopescu.com/post/16058009985/mongodb-at-viber-media-the-platform-enabling-free>`_ - MyNoSQL (Jan 2012) 
- `Viber Media Selects MongoDB as Database in the Cloud for Popular Mobile Apps<http://blog.10gen.com/post/12197182712/viber-media-selects-mongodb-as-database-in-the-cloud>`_ - 10gen blog (Nov 2011) 
- `Where NoSQL, cloud computing and free texting converge<http://gigaom.com/cloud/where-nosql-cloud-computing-and-free-texting-converge/>`_ - GigaOm (Nov 2011)

entry171_0: ".. image:: pd-images/o2.png"
entry171_1: O2 uses MongoDB for several applications, including their Priority Moments location based offer service.
entry172_0: Ericsson
entry172_1: 
entry173_0: Telefonica
entry173_1: 

## break here

entry174_0: More MongoDB Users
entry174_1: 
Sugar_CRM_0: ".. image:: pd-images/sugar.gif"
Sugar_CRM_1: `Sugar CRM<http://www.sugarcrm.com/crm/>`_ uses MongoDB to power the backend of its preview feedback mechanism. It captures users' comments and whether they like or dislike portions of the application all from within beta versions of Sugar.
WuuhuuOnline_com_0: ".. image:: pd-images/mr-wuhu.png"
WuuhuuOnline_com_1: `WuuhuuOnline.com<http://www.wuuhuuonline.com/>`_ is an E-Magazine Portal in Malaysia. It uses MongoDB to store data and leverage SPHINX as full text search in MongoDB data.
catch_com_0: ".. image:: pd-images/catchlogo.png"
catch_com_1: `catch.com<https://catch.com/>`_ is the easiest way to capture what matters. Catch helps you create one place to privately capture &amp; find your notable thoughts, ideas, images, places, lists &amp; anything else you'd rather not forget.
 
- `MongoDB with Python, Pylons and Pyramid<http://www.10gen.com/presentations/mongosf-2011/mongodb-with-python-pylons-pyramid/>`_ - Niall O'Higgin's presentation at MongoSF (May 2011) 
- `MongoDB and Pylons at Catch.com<https://catch.com/blog/2011/03/pycon-2011-mongodb-pylons-at-catch-com-scalable-web-apps-with-python-and-nosql/>`_ - PyCon Presentation (March 2011)

CollegeHumor_0: ".. image:: pd-images/collegehumor.png"
CollegeHumor_1: `CollegeHumor<http://www.collegehumor.com/>`_ is a comedy website. MongoDB is used in CollegeHumor for internal analytics and link exchange application.
Thrillist_0: ".. image:: pd-images/thrillist.png"
Thrillist_1: `Thrillist<http://www.thrillist.com/NATION/browse?sort=browse>`_ is using Mongo to accelerate its user-specific search, content browsing, and geolocated search. Right now it's employed mostly as a cache and not as Thrillist's primary store with the notable exception of our click-track data. It's also moving to push its log info into Mongo to give it better analytics as part of our continuous integration initiative.
entry180_0: ".. image:: pd-images/taobao.gif"
entry180_1: Founded by Alibaba Group in May 2003, Taobao facilitates business-to-consumer and consumer-to-consumer retail by providing a platform for businesses and individual entrepreneurs to open online retail stores that cater to consumers in mainland China, Hong Kong, Macau, Taiwan and overseas. Sellers are able to post new and used goods for sale on the Taobao marketplace either through a fixed price or by auction. The overwhelming majority of the products on Taobao are brand new merchandise sold at a fixed price; auctions make up a very small percentage of transactions. MongoDB is used to store the monitoring data.
Evite_0: ".. image:: pd-images/evite.png"
Evite_1: `Evite<http://www.evite.com/>`_ uses MongoDB for analytics and quick reporting.
 
- `Tracking and visualizing mail logs with MongoDB and gviz_api<http://agiletesting.blogspot.com/2010/07/tracking-and-visualizing-mail-logs-with.html>`_ - Grig Gheorghiu's blog (July 2010)

Justin_tv_0: ".. image:: pd-images/logo-justin_tv.png"
Justin_tv_1: `Justin.tv<http://justin.tv>`_ is the easy, fun, and fast way to share live video online. MongoDB powers Justin.tv's internal analytics tools for virality, user retention, and general usage stats that out-of-the-box solutions can't provide. Read more about Justin.tv's `broadcasting architecture<http://highscalability.com/blog/2012/11/15/gone-fishin-justintvs-live-video-broadcasting-architecture.html>`_.
PhoneTag_0: ".. image:: pd-images/logo_phonetag.jpg"
PhoneTag_1: `PhoneTag<http://phonetag.com/>`_ is a service that automatically transcribes voicemail to text and delivers it in real-time via e-mail and SMS. PhoneTag stores the metadata and transcriptions for every voicemail it processes in MongoDB.
PiCloud_0: ".. image:: pd-images/PICloud-version1.png"
PiCloud_1: `PiCloud<http://picloud.com/>`_ enables scientists, developers, and engineers to leverage thousands of cores of computational power in public and private clouds for batch processing, high performance computing, and scientific computing applications. PiCloud uses MongoDB to store computational tasks and their associated result sets in a highly distributed and scalable environment.
Hashrocket_0: ".. image:: pd-images/hashrocket.png"
Hashrocket_1: `Hashrocket<http://hashrocket.com/>`_ is an expert web design and development group. Hashrocket built `PharmMD<http://hashrocket.com/work/view/pharmmd/>`_, a fully-featured Medication Management application in Ruby on Rails. The system contains functionality for identifying and resolving drug-related problems for millions of patients.
Ubiquity_Herd_0: ".. image:: pd-images/logo-ubiquity.png"
Ubiquity_Herd_1: The Mozilla open-source `Ubiquity Herd<https://ubiquity.mozilla.com/herd/>`_ project uses MongoDB for back-end storage. Source code is available on `bitbucket<http://bitbucket.org/fernandotakai/herd/src/>`_.
Preferred_Infrastructure__Inc_0: ".. image:: pd-images/preferred.png"
Preferred_Infrastructure__Inc_1: Sedue is the enterprise search/recommendation engine, provided by `Preferred Infrastructure, Inc<http://preferred.jp/index.html>`_. Sedue currently uses MongoDB to store the document in a flexible and highly-available way.
 
- `MongoDB as search engine repository<http://www.slideshare.net/pfi/mongodb-as-search-engine-repository-mongotokyo2011>`_ - Presentation from Mongo Tokyo (March 2011)

The_awesomeness_that_is_MongoDB_and_NoSQL__is_taking_over_Codaset_0: ".. image:: pd-images/codaset.png"
The_awesomeness_that_is_MongoDB_and_NoSQL__is_taking_over_Codaset_1: Codaset is an open system where you can browse and search through open source projects, and check out what your friends are coding.
 
- `The awesomeness that is MongoDB and NoSQL, is taking over Codaset<http://codaset.com/codaset/codaset/blog/the-awesomeness-that-is-mongodb-and-nosql-is-taking-over-codaset>`_ - Codaset Blog (May 2010) 
- `Handling Dates in MongoDB<http://developingwithstyle.com/articles/2010/07/09/handling-dates-in-mongodb.html>`_ - Codaset Blog (July 2010)

Punchbowl_com_0: ".. image:: pd-images/mypunchbowl_logo.png"
Punchbowl_com_1: `Punchbowl.com<http://www.punchbowl.com/>`_ is a start to finish party planning site that uses MongoDB for tracking user behavior and datamining.
 
- `Introducing MongoDB into your organization: Punchbowl Case Study<http://www.10gen.com/video/mongoboston2010/punchbowl>`_ - Ryan Angilly's presentation at Mongo Boston (September 2010) 
- <em>Ryan Angilly on Replacing MySQL with MongoDB (Zero to Mongo)</em> on `The Bitsource<http://www.thebitsource.com/featured-posts/mongosf-zero-to-mongodb/>`_ 
- `MongoDB for Dummies: How MyPunchbowl went from 0 to production in under 3 days<http://blip.tv/file/3704046>`_ - Presentation at MongoNYC (May 2010)

photostre_am_0: ".. image:: pd-images/photostre.am.png"
photostre_am_1: `photostre.am<http://photostre.am>`_ streams image data from flickr and uses MongoDB as it's only database.
 
- `MongoDB in Production at photostre.am<http://ananasblau.com/2010/6/11/mongodb-in-my-photostre-am>`_ - photostre.am blog (June 2010)

Fotopedia_0: ".. image:: pd-images/footpedia.png"
Fotopedia_1: `Fotopedia<http://www.fotopedia.com>`_ uses MongoDB as storage backend for its copy of wikipedia data, storage for users and albums timelines, a feature that is currently under heavy refactoring, and as the 'metacache,' an index of every tiny html fragment in its varnish cache for proactive invalidation of stale content.
 
- MongoDB: Our Swiss Army Datastore - Presentation at MongoFR in June 2010: `Slides<http://www.scribd.com/doc/33558074/MongoDB-our-Swiss-Army-Knife-database>`_ and `Video<http://lacantine.ubicast.eu/videos/21-06-2010-104603-partie-1/>`_

Grooveshark_0: ".. image:: pd-images/grooveshark-logo.png"
Grooveshark_1: `Grooveshark<http://listen.grooveshark.com/>`_ currently uses Mongo to manage over one million unique user sessions per day.
Struq_0: ".. image:: pd-images/struq.png"
Struq_1: `Struq<http://www.struq.com/>`_ develops technology that personalizes the contents and design of online display advertising in real time.
Pitchfork_0: ".. image:: pd-images/logo-pitchfork.png"
Pitchfork_1: `Pitchfork<http://www.pitchfork.com>`_ is using MongoDB for its year-end readers survey and internal analytics.
Floxee_0: ".. image:: pd-images/logo-floxee.png<br>"
Floxee_1: `Floxee<http://floxee.com/>`_, a web toolkit for creating `Twitter<http://twitter.com>`_ directories, leverages MongoDB for back-end storage. The award-winning `TweetCongress<http://tweetcongress.org/>`_ is powered by Floxee.
TeachStreet_0: ".. image:: pd-images/teachstreet.png"
TeachStreet_1: `TeachStreet<http://www.teachstreet.com/>`_ helps people find local and online classes by empowering teachers with robust tools to manage their teaching businesses. MongoDB powers TeachStreet's real-time analytics system which provide teachers with insight into the performance and effectiveness of their listings on TeachStreet.
 
- `Slides from Mongo Seattle<http://blog.teachstreet.com/uncategorized/slides-mongo-seattle/?utm_source=twitterfeed&amp;utm_medium=twitter&amp;utm_campaign=Feed:+teachstreet+(TeachStreet+-+Find+Great+Classes.++Learn+Something+New.)>`_ - TeachStreet blog (July 2010)

Visibiz_0: ".. image:: pd-images/visibiz.png"
Visibiz_1: `Visibiz<http://www.visibiz.com/>`_ is a socially and email infused relationship management solution designed to improve the productivity of business professionals. Within minutes of users' joining, Visibiz automatically creates fully tagged and organized profiles for everything in the user's network and allows intelligent searching of the information needed to stay productive. Professionals can also track all their business development activities through simplified and streamlined CRM process that is supported by configurable workflows. Visibiz uses MongoDB for all of its data storage needs.
 
- `How MongoDB Helps Visibiz Tackle Social CRM<http://www.10gen.com/webinars/visibiz>`_ - Webinar March 2011

Defensio_0: ".. image:: pd-images/logo-defensio.png"
Defensio_1: `Defensio<http://defensio.com/>`_ is a comment-spam blocker that uses MongoDB for back-end storage.
TweetSaver_0: ".. image:: pd-images/logo-tweetsaver.png"
TweetSaver_1: `TweetSaver<http://tweetsaver.com>`_ is a web service for backing up, searching, and tagging your tweets. TweetSaver uses MongoDB for back-end storage.
Bloom_Digital_0: ".. image:: pd-images/logo-bloom.png"
Bloom_Digital_1: `Bloom Digital<http://www.bloomdigital.com/>`_'s AdGear platform is a next-generation ad platform. MongoDB is used for back-end reporting storage for AdGear.
KLATU_Networks_0: ".. image:: pd-images/logo-klatu.png"
KLATU_Networks_1: `KLATU Networks<http://www.klatunetworks.com/>`_ designs, develops and markets asset monitoring solutions which help companies manage risk, reduce operating costs and streamline operations through proactive management of the status, condition, and location of cold storage assets and other mission critical equipment. KLATU uses MongoDB to store temperature, location, and other measurement data for large wireless sensor networks. KLATU chose MongoDB over competitors for scalability and query capabilities.
This_or_That!_0: ".. image:: pd-images/thisorthat.jpg"
This_or_That!_1: `This or That!<http://www.thisorthat.com/>`_ is a user-driven comparison site that encourages people to create, share, vote and comment on comparisons. Whether you're voting on the latest news stories, pop culture tournaments, or user-generated comparisons, make your choice count at This or That! This or That! uses MongoDB to drive its leaderboards.
songkick_0: ".. image:: pd-images/songkick.gif"
songkick_1: `songkick<http://www.songkick.com/>`_ lets you track your favorite artists so you never miss a gig again.
 
- `Speeding up your Rails app with MongoDB<http://skillsmatter.com/podcast/cloud-grid/speeding-up-your-rails-application-with-mongodb>`_ - Presentation at MongoUK (June 2010)

Crowdtap_0: ".. image:: pd-images/crowdtap.png"
Crowdtap_1: `Crowdtap<http://crowdtap.com/>`_ uses MongoDB extensively as its primary datastore for its primary application and targeting engine. The targeting engine heavily uses Mongo's atomic operator to implement a queuing system which is core to its service.
Detexify_0: ".. image:: pd-images/logo-detexify.png"
Detexify_1: `Detexify<http://detexify.kirelabs.org/>`_ is a cool application to find LaTeX symbols easily. It uses MongoDB for back-end storage. Check out the `blog post<http://detexifyblog.kirelabs.org/past/2009/8/12/new_backend_new_server_android_app/>`_ for more on why Detexfy is using MongoDB.
http___sluggy_com__0: ".. image:: pd-images/logo-sluggy.png"
http___sluggy_com__1: `http://sluggy.com/<http://sluggy.com/>`_ is built on MongoDB, mongodb_beaker, and `MongoKit<http://bitbucket.org/namlook/mongokit/wiki/Home>`_.
 
- `From MySQL to MongoDB at Sluggy.com<http://blip.tv/file/3704023>`_ - Brendan McAdams' presentation at MongoNYC (May 2010)

EDITD_0: ".. image:: pd-images/editd.png"
EDITD_1: `EDITD<http://editd.com/>`_ is using MongoDB to store opinions from social media, blogs, forums and other sources to use in its sentiment analysis system, Zeitgeist.
entry208_0: 
entry208_1: @trackmeet helps you take notes with twitter and is built on MongoDB
eFlyover_0: ".. image:: pd-images/logo-eflyover.png"
eFlyover_1: `eFlyover<http://eflyover.com>`_leverages the Google Earth Browser Plugin and MongoDB to provide interactive flyover tours of over two thousand golf courses worldwide.
Shapado_0: ".. image:: pd-images/logo-shapado.png"
Shapado_1: `Shapado<http://shapado.com/>`_ is a multi-topic question and answer site in the style of Stack Overflow. Shapado is written in Rails and uses MongoDB for back-end storage.
Sifino_0: ".. image:: pd-images/logo-sifino.png"
Sifino_1: `Sifino<http://sifino.se/>`_ enables students to help each other with their studies. Students can share notes, course summaries, and old exams. Also it can ask and respond to questions about particular courses.
GameChanger_0: ".. image:: pd-images/logo-gamechanger.png"
GameChanger_1: `GameChanger<http://www.gamechanger.io/>`_ provides mobile apps that replace pencil-and-paper scorekeeping and online tools that distribute real-time game updates for amateur sports.
 
- `Document Schema Design and Data Consistency<http://www.10gen.com/presentations/MongoNYC-2012/document-schema-design>`_ - Presentation from MongoNYC 2012 
- `Tornado, MongoDB, and the Realtime Web<http://prezi.com/owkppjicpers/mongonyc/>`_ - Kiril Savino's presentation at MongoNYC (May 2010) 
- `GameChanger and MongoDB: a case study in MySQL conversion<http://aurum.tumblr.com/post/1045864983/gamechanger-and-mongodb-a-case-study-in-mysql>`_ - Kiril Savino's blog (September 2010)

soliMAP_0: ".. image:: pd-images/solimap.jpg"
soliMAP_1: `soliMAP<http://solimap.com/>`_ is a map-based ad listings site that uses MongoDB for storage.
MyBankTracker_iPhone_App_0: ".. image:: pd-images/logo-mybanktracker.gif"
MyBankTracker_iPhone_App_1: `MyBankTracker iPhone App<http://http://www.mybanktracker.com/iphone/>`_ uses MongoDB for the iPhone app's back-end server.
BillMonitor_0: ".. image:: pd-images/bill-monitor-logo.png"
BillMonitor_1: `BillMonitor<http://www.billmonitor.com/>`_ uses MongoDB to store all user data, including large amounts of billing information. This is used by the live site and also by BillMonitor's internal data analysis tools.
Tubricator_0: ".. image:: pd-images/logo-tubricator.png"
Tubricator_1: `Tubricator<http://www.tubricator.com/>`_ allows you to create easy to remember links to YouTube videos. It's built on MongoDB and Django.
Mu_ly_0: ".. image:: pd-images/mu.ly.png"
Mu_ly_1: `Mu.ly<http://mu.ly/>`_ uses MongoDB for user registration and as a backend server for its iPhone Push notification service. MongoDB is mu.ly's Main backend database and absolute mission critical for mu.ly.
Avinu_0: ".. image:: pd-images/avinu.png"
Avinu_1: `Avinu<http://www.avinu.org/>`_ is a Content Management System (CMS) built on the Vork enterprise framework and powered by MongoDB.
Topsy_0: ".. image:: pd-images/topsy.png"
Topsy_1: `Topsy<http://topsy.com/>`_ is a search engine powered by Tweets that uses Mongo for realtime log processing and analysis.
Cold_Hard_Code_0: ".. image:: pd-images/chc.png"
Cold_Hard_Code_1: `Cold Hard Code<http://www.coldhardcode.com/>`_ makes featureful, beautiful web applications, including:
 
- `Codepeek<http://codepeek.com/paste>`_ is using MongoDB and GridFS for storing pastes. 
- `Jarvis<http://www.coldhardcode.com/blog/2011/01/jarvis-technical-notes.html>`_ uses MongoDB to store asset information.

Similaria_pl_0: ".. image:: pd-images/similaria.jpg"
Similaria_pl_1: `Similaria.pl<http://www.similaria.pl/index.php>`_ is an online platform, created to connect users with people and products that match them.
 
- `One Year with MongoDB<http://prezi.com/nojhakjnp9gf/mongo-one-year-later/>`_ - Presentation from PyCon Ukraine (October 2010)

ToTuTam_0: ".. image:: pd-images/totutam.png"
ToTuTam_1: `ToTuTam<http://totutam.pl/>`_ uses Mongo to store information about events in its portal and also to store and organise information about users preferences.
 
- `One Year with MongoDB<http://prezi.com/nojhakjnp9gf/mongo-one-year-later/>`_ - Presentation from PyCon Ukraine (October 2010)

themoviedb_org_0: ".. image:: pd-images/tmdb.png"
themoviedb_org_1: `themoviedb.org<http://www.themoviedb.org/>`_ is a free, user driven movie database that uses MongoDB as its primary database.
OCW_Search_0: ".. image:: pd-images/ocw.jpg"
OCW_Search_1: `OCW Search<http://www.ocwsearch.com/>`_ is a search engine for OpenCourseWare. It stores all the course materials in MongoDB and uses Sphinx to index these courses.
 
- `Full Text Search with Sphinx<http://skillsmatter.com/podcast/cloud-grid/mongodb-full-text-search-with-sphinx>`_ - Presentation from MongoUK (June 2010)

Mixero_0: ".. image:: pd-images/mixero.gif"
Mixero_1: `Mixero<http://www.mixero.com/>`_ is the new generation Twitter client for people who value their time and are tired of information noise. Mixero uses Mongo to store users' preferences and data.
Biggo_0: ".. image:: pd-images/biggo.jpg"
Biggo_1: `Biggo<http://cms.biggo.ru/>`_ is an advanced site constructor with e-commerce modules. Biggo uses MongoDB for stats collection.
Kabisa_0: ".. image:: pd-images/kabisa-logo.png"
Kabisa_1: `Kabisa<http://www.kabisa.nl/>`_ is a web development firm specializing in Ruby on Rails and Java / J2EE. Kabisa uses MongoDB for many of its client projects, including a mobile news application for iPhone and Android.
DokDok_0: ".. image:: pd-images/dokdok.png"
DokDok_1: `DokDok<http://dokdok.com/>`_ makes it easy and automatic for users to find, work on and share the latest version of any document - right from their inbox. DokDok migrated to a Mongo backend in August 2009. See Bruno Morency's presentation `Migrating to MongoDB<http://www.slideshare.net/dokdok/confoo-migrating-to-mongo-db>`_ for more information.
Enbil_0: ".. image:: pd-images/enbil.png"
Enbil_1: `Enbil<http://enbil.nu/>`_ is a swedish website for finding, and comparing, rental cars. MongoDB is used for storing and querying data about geographical locations and car rental stations.
markitfor_me_0: ".. image:: pd-images/markitfor.me.jpg"
markitfor_me_1: `markitfor.me<http://markitfor.me/>`_ is a bookmarking service that makes your bookmarks available via full-text search so you don't have to remember tags or folders. You can just search for what you're looking for and the complete text of all of your bookmarked pages will be searched. MongoDB is used as the datastore for the marked pages.
Backpage_Pics_0: ".. image:: pd-images/backpage.png"
Backpage_Pics_1: `Backpage Pics<http://www.backpagepics.com/>`_ is a website that displays backpage.com adult classified listings as an image gallery. MongoDB is used to store listing data.<em>Please note that this website is NSFW.</em>
Joomla_Ads_0: ".. image:: pd-images/joomlaads.png"
Joomla_Ads_1: `Joomla Ads<http://www.joomlaads.com/>`_ uses MongoDB for its back-end reporting services.
Eiwa_System_Management__Inc__0: ".. image:: pd-images/eiwa.png"
Eiwa_System_Management__Inc__1: `Eiwa System Management, Inc.<http://www.esm.co.jp/>`_ is a software development firm that has been using MongoDB for various projects since January 2010.
Morango_0: ".. image:: pd-images/morango.png"
Morango_1: `Morango<http://morango.co.uk/>`_ is an internet strategy consultancy based in London, which uses MongoDB in production on several client projects.
 
- `Building a Content Management System with MongoDB<http://skillsmatter.com/podcast/cloud-grid/building-a-content-management-system-with-mongodb>`_ - Presentation from MongoUK (June 2010)

PeerPong_0: ".. image:: pd-images/peerpong.png"
PeerPong_1: `PeerPong<http://peerpong.com/>`_ discovers everyone's expertise and connects you to the best person to answer any question. We index users across the entire web, looking at public profiles, real-time streams, and other publicly available information to discover expertise and to find the best person to answer any question.
ibibo_0: ".. image:: pd-images/logo-ibibo.png"
ibibo_1: `ibibo<http://www.ibibo.com/>`_ ('I build, I bond') is a social network using MongoDB for its dashboard feeds. Each feed is represented as a single document containing an average of 1000 entries; the site currently stores over two million of these documents in MongoDB.
Zoofs_0: ".. image:: pd-images/zoofs.png"
Zoofs_1: `Zoofs<http://zoofs.com/>`_ is a new way to discover YouTube videos that people are talking about on Twitter. Zoofs camps in Twitter searching for tweets with YouTube video links, and then ranks them based on popularity.
Oodle_0: ".. image:: pd-images/oodle.gif"
Oodle_1: `Oodle<http://www.oodle.com/>`_ is an online classifieds marketplace that serves up more than 15 million visits a month and is the company behind the popular `Facebook Marketplace<http://apps.facebook.com/marketplace>`_. Oodle is using Mongo for storing user profile data for our millions of users and has also open sourced its `Mongo ORM layer<http://github.com/lunaru/MongoRecord>`_.
Funadvice_0: ".. image:: pd-images/funadvice.png"
Funadvice_1: `Funadvice<http://www.funadvice.com>`_ relaunched using the MongoDB and MongoMapper. Read the Funadvice CTO's `post to MongoDB User Forum<http://groups.google.com/group/mongodb-user/browse_thread/thread/e2b4a5d198b398cf/547e3f3206c5dd37?lnk=gst&amp;q=funadvice#547e3f3206c5dd37>`_ from May 2010 for more details.
Ya_Sabe_0: ".. image:: pd-images/Yasabe.gif"
Ya_Sabe_1: `Ya Sabe<http://www.yasabe.com/>`_ is using MongoDB for the backend storage of business listings. Yasabe.com is the first local search engine built for Hispanics in the US with advanced search functionality. You can find and discover more than 14 million businesses via the web or your mobile phone. All the information is in both Spanish and in English.
LoteriaFutbol_com_0: ".. image:: pd-images/loteriafutbol.jpg"
LoteriaFutbol_com_1: `LoteriaFutbol.com<http://en.loteriafutbol.com/>`_ is a Fantasy Soccer Portal recently launched for the World Soccer Cup: South Africa 2010. Mongo has been used entirely to store data about users, groups, news, tournaments and picks. It uses the PHP driver with a Mongo module for Kohana v3 (Mango).
Kehalim_0: ".. image:: pd-images/kehalim.png"
Kehalim_1: `Kehalim<http://www.kehalim.com/>`_ switched over to MongoDB 1 year ago after exhausting other cloud and relational options. As a contextual affiliate network, Kehalim stores all of its advertisers, ads and even impressions on top of MongoDB. MongoDB has outed both MySQL and memcached completely and also provides great hadoop-like alternative with its own map-reduce.
Givemebeats_net_0: ".. image:: pd-images/givemebeats.png"
Givemebeats_net_1: `Givemebeats.net<http://www.givemebeats.net>`_ is an e-commerce music site that allows people to buy beats (music instrumentals) produced by some of the best producers in the world. Now we entirely use MongoDB to store users profile, beats information, and transaction statistics.
Planetaki_0: ".. image:: pd-images/planetaki.png"
Planetaki_1: `Planetaki<http://www.planetaki.com/>`_ is place were you can read all your favourite websites in one place. MongoDB has replaced MySQL for the storage backend that does all the heavy lifting and caching of each website's news feed.
 
- `Planetaki Powered by MongoDB<http://www.samlown.com/en/planetaki_powered_by_mongodb>`_ - SamLown.com (June 2010)

entry245_0: ".. image:: pd-images/chinavisual.gif"
entry245_1: [ChinaVisual.com] is the leading and largest vertical portal and community for creative people in China. ChinaVisual.com moved from mysql to mongoDB in early 2009. Currently MongoDB powers its most major production and service, like file storage, session server, and user tracking.
RowFeeder_0: ".. image:: pd-images/rowfeeder.png"
RowFeeder_1: `RowFeeder<https://rowfeeder.com>`_ is an easy social media monitoring solution that allows people to track tweets and Facebook posts in a spreadsheet. RowFeeder uses MongoDB to keep up with the high volume of status updates across multiple social networks as well as generate basic stats.
 
- `MongoDB for Real Time Data Collection and Stats Generation<http://www.slideshare.net/dacort/mongodb-realtime-data-colleciton-and-stats-generation>`_ - Presentation at Mongo Seattle (July 2010)

Open_Dining_Network_0: ".. image:: pd-images/opendiningnetwork.png"
Open_Dining_Network_1: `Open Dining Network<http://www.opendining.net/>`_ is a restaurant data and food ordering platform that provides a RESTful API to take web and mobile orders. MongoDB is used to manage all restaurant, customer, and order information.
URLi_st_0: ".. image:: pd-images/urlist.png"
URLi_st_1: `URLi.st<http://urli.st/>`_ is a small web application to create and share list of links. The web application is coded in Python (using the pylons framework) and uses MongoDB (with pymongo 1.6) in production to power its data layer.
Kidiso_0: ".. image:: pd-images/kidiso.gif"
Kidiso_1: `Kidiso<http://www.kidiso.com/>`_ is a safe online playground for children up to 13, with advanced parental controls. In the current setup, we are using MongoDB for logging, analysis tasks, and background jobs that aggregate data for performance (ie search results and allowed content).
Carbon_Calculated_0: 
Carbon_Calculated_1: `Carbon Calculated<http://www.carboncalculated.com/>`_ provides an open platform that aggregates carbon and green house gas emissions for everything in the world, from passenger transport, raw materials, through to consumer goods. Built on top of this platform, Carbon Calculated offers a suite of products that make carbon calculation accessible and intuitive.
Vowch_0: ".. image:: pd-images/vowch.png"
Vowch_1: `Vowch<http://vow.ch/>`_ is a simple platform for telling the world about all the people, places and things that matter most to you. It is a platform for making positive, public endorsements for anyone or anything from a Twitter account.
 
- View a vowch for MongoDB: `http://vow.ch/2ij<http://vow.ch/2ij>`_

Ros_Spending_0: ".. image:: pd-images/poctoc.png"
Ros_Spending_1: `Ros Spending<http://www.rosspending.ru>`_ is the first Russian public spending monitoring project. It includes information about 1,400,000 federal government and 210,000 regional government contracts, as well as information about more than 260,000 suppliers and 26,000 customers. MongoDB stores all reports, customer and supplier information, stats and pre-cached queries. The project was initiated by the `Institute of Contemporary Development<http://www.insor-russia.ru/en/_about_us>`_ andlaunched publicly in July 2010 during the Tver economic forum.
BlueSpark_0: ".. image:: pd-images/bluespark.gif"
BlueSpark_1: `BlueSpark<http://bluespark.co.nz/>`_ designs and develops iPhone and iPad applications and specializes in Adobe Flash development, we have a passion for creating great user experiences and products that feel simple to use.
Click_here_0: ".. image:: pd-images/ahgora_logo.jpg"
Click_here_1: [Aghora] is a time attendance application specially designed for the requirements of the Brasilian governmental requirements. Our whole application is based on PHP and MongoDB. `Click here<http://bit.ly/cajdYS>`_ for more information.
Man_of_the_House_0: ".. image:: pd-images/manofthehouse.png"
Man_of_the_House_1: `Man of the House<http://manofthehouse.com/>`_ is the real man's magazine, a guide for the jack of all trades trying to be better at work and at home, as a father and as a husband. The entire backend of the site depends on MongoDB.
PeerIndex_0: ".. image:: pd-images/PeerIndex.jpg"
PeerIndex_1: `PeerIndex<http://www.peerindex.net/>`_ is an algorithmic authority ranking web service that uses MongoDB to scale processing of the firehose of social media, as a distributed data store and middle cache for fast site performance.
sahibinden_com_0: ".. image:: pd-images/sahibinden-arial_eng.jpg"
sahibinden_com_1: `sahibinden.com<http://www.sahibinden.com/>`_ is an online classifieds marketplace that serves more than 14.5 million unique visitors and over 1.5 billion pageviews a month. sahibinden.com is using MongoDB for storing classifieds data and caching.
Ylastic_0: ".. image:: pd-images/ylastic.png"
Ylastic_1: `Ylastic<http://ylastic.com/>`_ is using MongoDB extensively in production. For example, MongoDB powers Ylastic's monitors capability.
BRAINREPUBLIC_0: ".. image:: pd-images/brainrepublic.png"
BRAINREPUBLIC_1: `BRAINREPUBLIC<http://www.brainrepublic.com/>`_ is a social network for anyone to wants to talk face-to-face - or just audio or chat - with like-minded people from anywhere at anytime.
Friendmaps_0: ".. image:: pd-images/friendmaps.png"
Friendmaps_1: `Friendmaps<http://www.friendmaps.com/>`_ is a tool that allows users to view all of their social networks on a single map.
Jounce_0: ".. image:: pd-images/jounce.png"
Jounce_1: The affiliate marketing platform `Jounce<http://www.jounce.com/>`_ has gone live using MongoDB as the main storage solution for its search data. As of August 2010, ~10 million offers are stored in the database.
Virb_0: ".. image:: pd-images/virb_logo.gif"
Virb_1: `Virb<http://virb.com/>`_ Looking for a place to park your portfolio, your band, your website? Build an elegantly simple website with Virb. You provide the content, we'll help with the rest for only $10/month.
Deal_Machine_0: ".. image:: pd-images/dealmachine.png"
Deal_Machine_1: `Deal Machine<http://dealmachine.net/>`_ is a streamlined CRM that makes sales fun and effective. We use MongoDB as our main storage. It has helped us a lot to make the web app better and more scalable.
arrivalguides_com_0: ".. image:: pd-images/arrivalguides.jpg"
arrivalguides_com_1: `arrivalguides.com<http://beta.arrivalguides.com/en>`_ is the largest network of free online (and pdf) travel guides. arrivalguides.com recently launched a new site where they rewrote the whole application switching from SQL server to MongoDB using the NoRM Driver for C#. The website is purely driven by MongoDB as the database backend.
The_Hype_Machine_0: ".. image:: pd-images/hypemachine.png"
The_Hype_Machine_1: `The Hype Machine<http://hypem.com/>`_ keeps track of emerging music on the web. We use MongoDB to accelerate storage and retrieval of user preferences, and other core site data. MongoDB's web-native design and high performance in our workloads was what got our attention. It's from the future!
ChatPast_0: ".. image:: pd-images/ChatPast.png"
ChatPast_1: `ChatPast<http://chatpast.com/>`_ synchronizes your chat history from multiple chat clients (Live, Skype, etc.), across multiple computers. Search them, slice them, and get just the data you want. Find everything you've ever talked about. Business users can push important IM conversations into SalesForce and 37 Signals products (Highrise, BaseCamp, etc) seamlessly.
Stockopedia_0: ".. image:: pd-images/stockopedia.jpg"
Stockopedia_1: `Stockopedia<http://www.stockopedia.co.uk/>`_ initially began using MongoDB for its internal analytics system - tracking all activity around 20000+ stocks, sectors and investment topics. Stockopedia is now confidently using the same foundation for building real time analytics, recommendation, categorization and discovery features for both publishers and investors conducting and publishing investment research on the Stockopedia platform.
TravelPost_0: ".. image:: pd-images/travelpost.png"
TravelPost_1: `TravelPost<http://www.travelpost.com>`_ is a community built by travel enthusiasts for travel enthusiasts. Today, the site has millions of reviews, photos and blogs. TravelPost uses MongoDB for backend storage and analytics applications.
SoulGoal_0: ".. image:: pd-images/keptprivate.png"
SoulGoal_1: `SoulGoal<http://soulgoal.com/>`_ stores or caches all user data and facebook information in MongoDB.
Top_Twitter_Trends_0: ".. image:: pd-images/toptwittertrends.png"
Top_Twitter_Trends_1: `Top Twitter Trends<http://www.toptwittertrends.com/>`_ is an experimental and on-going project built with today's trending and cutting-edge technologies such as node.js, nginx, and MongoDB.
bongi_mobi_0: ".. image:: pd-images/bongi-300x50.gif"
bongi_mobi_1: `bongi.mobi<http://bongi.mobi/>`_ is a place for you to build your own mobi free site from your mobile device! Technologies include: fast document orientated database (MongoDB), full handset detection, image/font resizing (based on handset capabilities), mobile ad serving, geolocation, multimedia (images, video, music), analytics and tracking, click-2-call, SMS, email modules, 3rd party API integration.
CoStore_0: ".. image:: pd-images/costore.png"
CoStore_1: `CoStore<http://costore.net/>`_ is an online platform for data exchange, collaboration and data entry. CoStore helps you with importing, transforming and collaborating on all sorts of data files. CoStore also provides reporting tools, such as charts, graphs and network visualizations. CoStore runs in the browser, so you can access it wherever you need it. MongoDB is used as the backend; it stores the data and also runs query steps, which are MapReduce operations.
SnapDish_0: ".. image:: pd-images/snapdish_logo.png"
SnapDish_1: `SnapDish<http://snapdi.sh>`_ is a photo and recipe sharing<br>social app for home cooked dishes that makes cooking more enjoyable<br>and delicious. It is a quick and easy way, using your smartphone, of<br>taking beautiful food photos and sharing them with food lovers from<br>around the world. Process your food photo to make it look better and<br>make it social. `SnapDish<http://snapdi.sh>`_ is a free app.<br>Download and enjoy!
Bakodo_0: ".. image:: pd-images/bakodo_big_logo.png"
Bakodo_1: `Bakodo<http://bako.do>`_ is a barcode search engine with a social component that helps users make informed decisions while they are shopping. Users can scan barcodes using the camera in their mobile phone and get information about the products they are looking at: where to buy it, lower prices, local stores, and most importantly, what their friends think about it. Bakodo uses MongoDB to store their massive index of million of products.
noclouds_org_0: ".. image:: pd-images/noclouds.png"
noclouds_org_1: `noclouds.org<http://noclouds.org/principal/>`_ is a online system, completely open source and still in development, where users can upload and share information about files. MongoDB has been used since the beginning of the project for almost all systems.
CafeClimb_com_0: ".. image:: pd-images/cafeclimb.png"
CafeClimb_com_1: `CafeClimb.com<http://www.cafeclimb.com>`_ is a travel website for rock climbers and mountaineers. It is a community oriented site which lets people share their travel experiences for friends to learn from. MongoDB is used to save all traveling information that comes from the users of CafeClimb.com. It also executes all searches that come from the user.
Keekme_0: ".. image:: pd-images/keekme.png"
Keekme_1: `Keekme<http://keekme.com>`_ is free money management web service build on the top of Ruby on Rails and MongoDB. Using Keekme you will easily track all your expenses wherever you are via web, mail and twitter. Keekme uses MongoDB as a primary datastorage for all application data.
P2P_Financial_0: ".. image:: pd-images/p2p_financial_logo.png"
P2P_Financial_1: `P2P Financial<http://www.p2pfinancial.ca>`_ is Canada's first internet-based business financing company. P2P Financial uses Mongo DB for storing business and financial documents.
Qwerly_0: ".. image:: pd-images/qwerly.png"
Qwerly_1: `Qwerly<http://qwerly.com/>`_ is people search for the social web. Qwerly uses MongoDB to store millions of user profiles and links to social networking sites. We offer an API that makes much of our data freely available to the web.
phpMyEngine_0: ".. image:: pd-images/pmemongo.png"
phpMyEngine_1: `phpMyEngine<http://phpmyengine.net/>`_ is a free, open source CMS licensed under the GPL v.3. For storage, the default database is MongoDB.
vsChart_0: ".. image:: pd-images/vschart.png"
vsChart_1: `vsChart<http://vschart.com/>`_ allows you to compare products to make it easier to make decisions.
yap_TV_0: ".. image:: pd-images/yap.gif"
yap_TV_1: `yap.TV<http://www.yap.tv/>`_ is the ultimate companion to the TV watching experience. It is a completely personalized TV show guide fused with a tuned-for-TV Twitter client, and is the best way to interact with your friends and show fans while watching the tube. We store some of the user generated content in MongoDB. We also use MongoDB for analytics.
BusyConf_0: ".. image:: pd-images/busyconf.png"
BusyConf_1: `BusyConf<http://busyconf.com/>`_ makes great conferences even better! BusyConf makes life easier for conference organizers by letting them collect and manage proposals, manage speaker info, build and publish the schedule to multiple web platforms. Conference attendees get a gorgeous, fully cached, offline-enabled schedule with all the details preloaded. MongoDB let's us represent rich conference schedule data in a way that's complementary to it's logical structure and the application's access patterns. Thanks to MongoDB, our code is much simpler, and our application is fast out of the gate.
 
- `BusyConf presentation at Washington DC MongoDB User Group<http://ryan.mcgeary.org/talks/2010/12/14/busyconf-mongodc/>`_ - December 2010

Sentimnt_0: ".. image:: pd-images/sentimnt.png"
Sentimnt_1: `Sentimnt<http://sentimnt.com>`_ is a personal and social search engine. It connects to your daily diet of information and social networks and allows you to search your online world without being distracted by hundreds of 'hits' that are not related to you. Sentimnt uses MongoDb to store tens of millions of documents for users. Our MongoDb instances serve around 2000 queries per second and add 200+ documents every second. We switched from MS SQL to MongoDb and haven't looked back since!
Workbreeze_0: ".. image:: pd-images/workbreeze.png"
Workbreeze_1: `Workbreeze<http://workbreeze.com/>`_ is fast and minimalistic tool for the freelance offers realtime search. Mongodb is used as a global project storage.
Kompasiana_0: ".. image:: pd-images/komp.gif"
Kompasiana_1: `Kompasiana<http://www.kompasiana.com/home>`_ is the biggest citizen journalism In Indonesia. Based on alexa rank, Kompasiana is in top 100 biggest site In Indonesia. MongoDB is used to store all posts data.
Milaap_0: ".. image:: pd-images/milaap.png"
Milaap_1: `Milaap<http://www.milaap.org/>`_ works with established, grassroots NGOs and Microfinance institutions focused on holistic community development.
Agent_Storm_0: ".. image:: pd-images/agentstorm.png"
Agent_Storm_1: `Agent Storm<http://www.agentstorm.com>`_ is a complete Real Estate Contact Manager which empowers you and your agents to build and manage your Real Estate business. Import your Real Estate Listings via RETS and easily display IDX listings on your web site, syndicate out to over 100 Real Estate Portals and build custom eye catching eFlyers all at the click of a button. When a API call is received we send that query to MongoDB which performs the search and returns the primary key id's of the properties matching the query. Those id's are then looked up in MySQL using the primary key returned from MongoDB. Once we have the full result set the results are served up and passed back to the client as either XML or JSON. When a Property is updated either via the Web or external the external python importers (not shown) then the id of the property is stored in a Redis/Resque queue and a worker fired to synchronize the MongoDB with the changes. All this means that on average API query results are returned in ~100 milliseconds.
 
- `Now with 50-100 millisecond-search-results<http://www.agentstorm.com/blog/2010/11/19/now-with-50-100-millisecond-search-results/>`_ - Agent Storm Blog (November 2010)

Mashape_0: ".. image:: pd-images/mashape.png"
Mashape_1: `Mashape<http://www.mashape.com/>`_ is a frustration-free online storefront for developers who want to consume or generate and distribute an API of any kind of service, either an open source project.
 
- `How We Switched from Hibernate to MongoDB in a week with Morphia<http://www.10gen.com/presentations/mongosf-2011/how-we-switched-from-hibernate-to-mongodb-in-a-week-with-morphia>`_ - Marco Palladino's Presentation at MongoSF (May 2011)

The_UK_Jobsite_0: ".. image:: pd-images/ukjobsite.png"
The_UK_Jobsite_1: `The UK Jobsite<http://www.theukjobsite.co.uk/>`_ is an easy to use job board allowing users to quickly search and apply for job vacancies. We use MongoDB for all aspects of the site - in it's entirety it fully runs the awesome MongoDB from job searches to user information everything is kept in documents. For more information we have written a few of the reasons of why we chose Mongo and continue to use it in a full production site - this can be found at `http://www.theukjobsite.co.uk/tech.php<http://www.theukjobsite.co.uk/tech.php>`_.
Tastebuds_0: ".. image:: pd-images/tastebuds.png"
Tastebuds_1: `Tastebuds<http://tastebuds.fm/>`_ music dating lets you meet like-minded single people who share your love for music. Users can connect with their last.fm username or simply enter a couple of their favourite artists and are immediately shown single people who share their musical preferences. Tastebuds is also integrated with popular events service Songkick.com allowing users to arrange to meet up at concerts they're attending. MongoDB has dramatically increased the speed at which we can search our database of artists. This allows users to rapidly select their preferred artists using our homepage artist autocomplete.
Skimlinks_0: ".. image:: pd-images/skimlinks.png"
Skimlinks_1: `Skimlinks<http://skimlinks.com>`_ enables publishers to easily monetise online content by converting normal product links into equivalent affiliate links on the fly and via SkimWords will create relevant contextual shopping links to products mentioned in the content. Bringing together more than 25 affiliate networks and over 12,000 retailer programs in one place, Skimlinks makes affiliate marketing a viable mainstream business model and ensures no money is left on the table. We use Mongo to log and report on the almost 2 Billion impressions we get every month.
www_vanilladesk_com_0: ".. image:: pd-images/vanilladesk.png"
www_vanilladesk_com_1: `www.vanilladesk.com<http://www.vanilladesk.com>`_ is ITIL based servicedesk/helpdesk solution provided as SaaS. MongoDB is used as the main database engine to store all tickets, configuration items, customer and contact details. MongoDB's document oriented approach and high-availability model supported by replica-sets is exactly what enables VanillaDesk to process records fast and keep them safe and available.
Summify_0: ".. image:: pd-images/summify.jpg"
Summify_1: `Summify<http://summify.com>`_ uses MongoDB as our primary database in which we store all of the news articles we crawl (metadata and HTML content), as well as user timelines. We periodically trim the database, i.e. we keep only the most recent 1000-5000 news stories for each user. Besides this, we also use MongoDB as a cache for URL redirects and Twitter user information (usernames, scores, etc.)
dakwak_0: ".. image:: pd-images/dakwak.png"
dakwak_1: `dakwak<http://dakwak.com/>`_ is the easiest and fastest way to translate your website to any language your audience and visitors want. It is a next-generation website localization tool and service. With dakwak, you are minutes away from getting your website localized and translated to more than 60 languages.
Kapost_0: ".. image:: pd-images/kapost.png"
Kapost_1: `Kapost<http://kapost.com/>`_'s online newsroom technology enables our users to manage a large group of contributors to produce content. We use MongoDB to store all the data that our users create and provide performance analytics for the newsroom content.
ContactMe_0: ".. image:: pd-images/contactme.png"
ContactMe_1: `ContactMe<http://www.contactme.com/>`_ is a 'light customer relationship management (CRM)' tool designed for small businesses. For many small businesses, enterprise CRM solutions are too cumbersome and technically demanding; ContactMe.com aims to fix this. Besides providing free contact forms and buttons for websites, blogs, and social media sites like Facebook, ContactMe consolidates all of a users' leads and contacts into one place, making for easy and efficient contact management.
Moontoast_Impulse_0: ".. image:: pd-images/moontoast.jpg"
Moontoast_Impulse_1: `Moontoast Impulse<http://www.fanimpulse.com/>`_ is a free Facebook application that lets fans play, share, and purchase music right from a Facebook fan page. `Moontoast<http://www.moontoast.com/>`_ is a social commerce company based in Boston and Nashville. Their tools power communities, stores, and private sales clubs that open the doors to a world of new fan-building and revenue-generating opportunities. Moontoast leverages the following technologies in Moontoast Impulse: MongoDB, PHP 5.3, Zend Framework, Doctrine 2, jQuery, Gearman, Ruby, MySQL, and more. Moontoast uses MongoDB to store all product and file system data for Moontoast Impulse.
Shopperhive_0: ".. image:: pd-images/shopperhive.png"
Shopperhive_1: `Shopperhive<http://www.shopperhive.co.uk/>`_ is a social price comparison shopping site providing comprehensive search, social product reviews, video reviews and the cheapest prices online. Shopperhive uses MongoDB as a highly scalable data back-end storage.
tracknose_0: ".. image:: pd-images/tracknose.png"
tracknose_1: `tracknose<http://www.tracknose.com/>`_ develops location-based applications for mobile phones that detect your GPS position and reward you with discount vouchers when you enter a retail outlet that is part of the scheme. MongoDB was chosen for excellent scalability and capacity to manage geospatial indexes, facilitating the generation of georeferenced statistics.
Wusoup_0: ".. image:: pd-images/wusoup.png"
Wusoup_1: `Wusoup<http://www.wusoup.com>`_ is a free online application for meeting interesting people outside of your social circle. MongoDB handles all user and message data, along with all analytics that power the Wusoup algorithm.
Fave_0: ".. image:: pd-images/getfave.png"
Fave_1: `Fave<http://www.getfave.com/>`_ is a local search application designed to help people find and communicate with their favorite businesses, and to help businesses expand their presence on major search engines. Soon, Fave will be releasing next-generation mobile applications to help its audiences harness the power of geo-aware web services. Infrastructure/architecture containing 14+ million business records; strong emphasis on performance/response time; attempting to leverage flexibility to deliver bulk daily ads/deals and pay per call campaigns
Doodle_0: ".. image:: pd-images/doodle.png"
Doodle_1: `Doodle<http://doodle.com/>`_ is the world's leading consensus-scheduling service with millions of users worldwide. We use MongoDB as an addition to MySQL and plan to slowly but steadily persist more data via MongoDB and less data via MySQL.
 
- `An introduction to MongoDB<http://blog.doodle.com/english/2011/09/16/an-introduction-to-mongodb/>`_ - Sept 2011 Blog Post

FindTheBest_0: ".. image:: pd-images/findthebest.png"
FindTheBest_1: `FindTheBest<http://www.findthebest.com/>`_ is an objective, socially curated comparison engine that allows you to find a topic, compare your options and decide what's best for you. Ultimately, FindTheBest allows you to make faster and more informed decisions by allowing you to easily compare all the available options, view expert ratings on products and services and read and write reviews on millions of listings. FindTheBest uses MongoDB for traffic monitoring and analysis as well as storage of user reviews.
Fuseware_0: ".. image:: pd-images/fuseware.png"
Fuseware_1: `Fuseware<http://www.fuseware.net/>`_ provides realtime analysis into social networks, blogs, forums, review sites, multimedia sites and more. This analysis is structured for easy understanding and dissemination by company decision makers. We use Mongo DB clusters to provide scalable data storage for the myriad different web objects that we store. We have hundreds of gigabytes of stored data, and Mongo allows us full horizontal scalability and data access.
Wherevent_0: ".. image:: pd-images/wherevents.png"
Wherevent_1: `Wherevent<http://www.wherevent.com/>`_ is a search engine for geolocated events. It helps people finding local events in their area or in other cities. The entire database is based on a mongoDb sharding. We especially use the geospatial feature.
Skyline_Innovations_0: ".. image:: pd-images/skyline-logo_square.jpg"
Skyline_Innovations_1: `Skyline Innovations<http://www.skylineinnovations.com/>`_ develops and finances distributed renewable energy projects for small businesses. We deploy custom monitoring solutions to maximize the energy production and efficiency gains. We use MongoDB for data warehousing and fast, flexible multidimensional analyses of our real-world data.
 
- `Time Series Data Storage in MongoDB<http://www.10gen.com/presentations/mongodc-2011/time-series-data-storage-mongodb>`_ - Andrew Jackson's Presentation at MongoDC (June 2011)

Memrise_0: ".. image:: pd-images/memrise.png"
Memrise_1: `Memrise<http://www.memrise.com>`_ combines the art and science of memory to turbocharge learning. We love using MongoDB for all of our learning and web analytics, and any time we want to be able to prototype rapidly without worrying about schema ossification.
Dather_0: ".. image:: pd-images/dather.png"
Dather_1: `Dather<http://www.dather.com>`_ is a content platform that assembles all of your content by events into an interactive timeline. You can invite friends, family, fans, etc... to join your timeline and contribute their own media and events.
Fundastic_info_0: ".. image:: pd-images/fundastic5.png"
Fundastic_info_1: `Fundastic.info<http://www.fundastic.info/>`_ is CrunchBase data + visualization. It offers a graphical way to visualize funding by investors and financial organizations implemented using the Crunchbase API. Fundastic provides dedicated pages for each investor and finanical organization and provides various charts to help understand the investment pattern of an investor or financial organization. Fundastic.info uses MongoDB to store all its investor and financial organizations funding data and performs aggregations on it. Data is stored in MongoDB as JSON documents and integrates seamlessly with Javascript.
Foofind_Labs_0: ".. image:: pd-images/foofind.png"
Foofind_Labs_1: `Foofind Labs<http://foofind.com>`_ is a universal search engine. In Foofind we work creating software that crawls every network and indexes every file. This way, we intend to offer the largest collection of links available. Foofind is a creation by Pablo Soto, P2P technology designer, developed in Madrid, Spain by MP2P Technologies. MongoDB is used to store all the data on the site. This includes several million files, indexed with Sphinx in order to allow text searches.
Beaconpush_0: ".. image:: pd-images/beaconpush.png"
Beaconpush_1: `Beaconpush<http://beaconpush.com>`_ is a cloud service for push messaging in the browser. Enables any web site to integrate real-time data with a few lines of JavaScript. Supports native Web Sockets with a wide array of fallback methods for older browsers. Beaconpush uses MongoDB to store all message statistics - in real-time. This data is used for presenting reports, charts and statistics for each user. MongoDB handles this with a very low system impact and has proven very efficient for this kind of data storing.
Easy_Bill_0: ".. image:: pd-images/easybill.png"
Easy_Bill_1: `Easy Bill<https://www.easybillindia.net.in/>`_, India's first chain of one stop payment collection centres, is yet another initiative in adding value to the life of the common man. Through its vast network of Retail Partners, it offers the consumer never-before convenience in various kinds of transactions. Extensive research revealed that one of the biggest problems faced by the common man is the hassle of dealing with large public and private enterprises for bill payment services. In the last decade, the consumer base of several industries has grown exponentially, though the support services have not been able to keep pace. We use MongoDB for activity logging of our application since our main concern is to write data to db instead of to read.
DeskMetrics_0: ".. image:: pd-images/DeskMetrics.png"
DeskMetrics_1: `DeskMetrics<http://deskmetrics.com>`_ is a real-time analytics service for desktop software that enables developers to understand how their users are using their applications. How many are installing, uninstalling, executing their application, where are the users from and help developers to solve bugs by analyzing the exceptions that happened on the user's machine.<br>We use MongoDB to store all data gathered from the users applications and all generated reports. We have chosen MongoDB most because of its simplicity, specially to shard the collections. Shards are very important for us since we collect and analyze a lot of data.
Interstate_0: ".. image:: pd-images/interstate.png"
Interstate_1: `Interstate<http://interstateapp.com>`_ provides businesses and developers alike with a solution for keeping on top of development tasks using awesome roadmaps! All of our client's data is stored using MongoDb (roadmaps, roads, user data, etc).
Proxlet_0: ".. image:: pd-images/proxlet.png"
Proxlet_1: `Proxlet<http://proxlet.com/>`_ helps you fight the noise on Twitter, by letting mute users, apps &amp; hash-tags. At it's core, Proxlet is a Twitter API proxy, which allows it to work with a variety of native clients, as well as with Twitter.com by way of browser extensions. Proxlet uses MongoDB to store both code it runs to modify the Twitter stream, per-user setting documents, as well as growing analytics data. Since Proxlet's data set is 100_ JSON &amp; designed to scale horizontally, MongoDB has proven to be the perfect fit.
 
- `A Beautiful Marriage: MongoDB and node.js<http://www.10gen.com/presentations/mongonyc-2011/mongodb-and-nodejs>`_ - Chris Ricca's Presentation at MongoNYC (June 2011)

Dayload_0: ".. image:: pd-images/logo-mini-dayload2.png"
Dayload_1: `Dayload<https://www.dayload.in/>`_ provides a hassle-free Amazon Web Services usage monitoring. We aggregate customer's AWS resource usage and CloudWatch monitoring logs into MongoDB and deliver daily statistics as a HTML mail. Storing AWS resource usage and CloudWatch monitoring logs. Analyzing data with JavaScript MapReduce function.
Avivo_0: ".. image:: pd-images/gooby.png"
Avivo_1: `Avivo<http://www.goo.by>`_ is creating modern Identities, Brand design concepts and delivers superb service in a form of touch, mobile, web and custom made solution for LOB (line of business) that enhance user digital experience. Through design and branding processes we help our clients to move from static world into digital world of interaction. Ultimately we are delivering engaging software and custom made applications to our clients that build brand loyalty and helps them to innovate. Our passion for design and commitment to innovation is leading us to dive deeply into research and development with new technologies to brings out the very best for our clients. We are multinational team that lives and works in Ljubljana, Slovenia. MongoDB is the primary database for all of our generated links and tracking statistics.
Abusix_0: ".. image:: pd-images/abusixproject.png"
Abusix_1: `Abusix<http://abusix.com>`_ is the network and email abuse handling specialist providing network abuse reporting, customized spamfeeds(www.spamfeed.me), consulting and tools against network abuse for ISPs, ESPs and technology providers. We know about the needs network operators and Internet Service Providers have today, while handling thousands of incoming complaints and millions of incoming datasets about abusive behavior in their network manually, but still not solving blacklistings and reputation problems. There is a major need for a solution that handles all these information in a semi or fully automatic way in order to increase customers security and satisfaction, increase infrastructure security and performance, free resources in abuse departments for real anti-abuse work and minimizecustomer care costs. We use the MongoDB in environments where we need a fast and scalable storage solution which is easy to access. It almost suits all needs and it is fun to work with.
Idea2_0: ".. image:: pd-images/idea2.png"
Idea2_1: `Idea2<http://idea2.com>`_ is a versatile, customizable data management application. Our platform easily allows anyone to create and implement a hosted business management solution that connects customer relationships, projects, customer care and support, business intelligence, and document management in a browser-based, fully managed environment. Idea2 uses MongoDB as its main storage engine for the application and workflow engine. We moved to MongoDB from a traditional SQL database. In making this transition, we also created a better user experience for our clients due to improved application response.
FamilyTies_0: ".. image:: pd-images/family.jpg"
FamilyTies_1: `FamilyTies<http://www.familyties.com>`_ is family networking - like social networking but designed to make connecting extended families and friends of families easier. Profiles for households and each household member including children under 13, basic family trees, photo sharing, blogs, comments and birthday reminders with much more to come. Mongo is used to store http sessions, photos, the operational data, logs, audit trails and various cache objects that speed up frequently needed expensive to compute data like family trees and relationship maps.
Pracanowo_pl_0: ".. image:: pd-images/pracanowo.png"
Pracanowo_pl_1: `Pracanowo.pl<http://cv.pracanowo.pl/>`_ is a job portal that helps people create on-line resumes that can be saved into different formats and finds jobs based on experience listed. MongoDB is used to store user account information and in few month to store job postings and board information.
Republika_Online_0: ".. image:: pd-images/rol.png"
Republika_Online_1: `Republika Online<http://republika.co.id>`_ is the biggest Islamic news portal in Indonesia. It's an online version of 'Harian Republika', a national newspaper. We use sharded MongoDB as storage of all news and comments.
Grepler_com_0: ".. image:: pd-images/grepler.jpg"
Grepler_com_1: `Grepler.com<http://grepler.com/>`_ is a distributed open system that merges several newsgroups, groups, forums and mailing lists to enable single point of access and discussions. Everything is now running from MongoDB except the user accounts which will be mapped in near future.
Thuisvergelijken_nl_0: ".. image:: pd-images/logo-small.gif"
Thuisvergelijken_nl_1: `Thuisvergelijken.nl<http://www.thuisvergelijken.nl>`_ is one of the biggest Dutch product price comparison and shopping guides. Offering a wide range of products we serve a broad audience of online shoppers. We use MongoDB for pretty much all our data storage: webshops, product data feeds, reviews and our custom written analytics system. MongoDB's flexibility allows us to develop rapidly and still we have the benefits of great performance.
salsadb_com_0: ".. image:: pd-images/salsadb.png"
salsadb_com_1: `salsadb.com<http://www.salsadb.com>`_ uses MongoDB for importing and merging data sets from spreadsheets. MongoDB's query capabilities are used extensively to allow users to filter and summarize their data.
CHECK24_0: ".. image:: pd-images/check24.jpg"
CHECK24_1: `CHECK24<http://www.check24.de/>`_ is one of Germany`s leading price comparison websites. On CHECK24.de customers can compare a wide range of products from the fields of insurance, money, energy, telecommunications, and travel and thus save hundreds of Euros per year. In contrast to most other comparison websites which link-out the customer when they want to buy a product, CHECK24 offers integrated ways of effecting a contract. The comparison services for prices and product features are free of charge for the customer. Furthermore, customers get free independent advice by phone from qualified product experts.
Wheelhouse_CMS_0: ".. image:: pd-images/wheelhouse.png"
Wheelhouse_CMS_1: `Wheelhouse CMS<http://www.wheelhousecms.com/>`_ is a Ruby on Rails Content Management System (CMS) designed to be incredibly flexible to develop sites with, and pain-free for you and your clients to use. MongoDB (and MongoModel) is used for all data storage within Wheelhouse CMS.
Qwk_io_0: ".. image:: pd-images/qwikio.png"
Qwk_io_1: `Qwk.io<http://qwk.io/>`_ is the quickest, easiest way to conduct surveys. It's built on Ruby on Rails and MongoDB for the backend.
entry330_0: ".. image:: pd-images/amebalogo_b1.gif"
entry330_1: `<http://www.cyberagent.co.jp/>`_CyberAgent,Inc. hasstrongly expanded its business into a wide range of internet services. Currenty CyberAgent's major business categories are Internet Media, Internet Advertising Agency and the Investment Development. CyberAgent,Inc. is using MongoDBin Ã¢â‚¬Å¡AmebaÃ¢â‚¬Å¡ services. We also have an American office: `CyberAgent America.<http://www.cyberagentamerica.com>`_<p> Social Game with node.js + MongoDB `Presentationfrom Mongo Tokyo (March 2011)<http://www.slideshare.net/snamura/mongodb-nodejs>`_</p>
HeiaHeia_com_0: ".. image:: pd-images/hh-logo.png"
HeiaHeia_com_1: `HeiaHeia.com<http://www.heiaheia.com>`_ provides web and mobile services that motivate people to move more, share activities with friends, and cheer others bringing a fun and social dimension into physical activity and wellbeing. Users can choose from over 350 activities and the workouts can be shared also on Facebook and Twitter. HeiaHeia.com's technology offers a cost-efficient, commercially attractive way for various communities to provide engaging, customized online services for wellbeing.
NewsCurve_0: ".. image:: pd-images/newscurve-logo.png"
NewsCurve_1: `NewsCurve<http://www.newscurve.com/>`_ is an analytics tool providing effectiveness metrics of online content in real-time. We use MongoDB as primary database storage to store analytics data.
Accounting_SaaS_Japan_0: ".. image:: pd-images/logo300.gif"
Accounting_SaaS_Japan_1: `Accounting SaaS Japan<http://www.a-saas.com/>`_ provides Accounting Services via SaaS targeted towards Japanese certified accountants and small and mid-size businesses.By using MongoDB in our tax return service (other services include, but are not limited to, general ledger and payroll), we are able to achieve the flexibility necessary to meet the rapidly changing demands and specifications vital for such a system--something that is difficult to accomplish with the relational or file-based approach.
Fabric_Structures_Community_0: ".. image:: pd-images/sitename.gif"
Fabric_Structures_Community_1: `Fabric Structures Community<http://fstructures.com>`_ is a project to ensure the enlargement of the textile structures market share in the overall construction sector by providing more comprehensive and up-to-date information to potential customers about the textile structures range and opportunities, as well as to companies operating in this field. MongoDB is used for storing and indexing our member profiles and company directory.
Brenden_Digital_0: ".. image:: pd-images/eg-banner.png"
Brenden_Digital_1: `Brenden Digital<http://eastghost.com>`_ uses MongoDB for everything except transactional features, and even those are being migrated. We appreciate MDB for its smaller size, much fast performance and ease of implementation. It repeatedly exhibits an elegance, a sublime aura that is the mark of excellence and thorough comprehension.
Attachments_me_0: ".. image:: pd-images/attachmentsme.png"
Attachments_me_1: `Attachments.me<http://attachments.me/>`_ is a search engine for your email attachments. MongoDB stores all the meta-information surrounding attachments, messages, and users.
Thumbtack_0: ".. image:: pd-images/thumbtack.png"
Thumbtack_1: `Thumbtack<http://www.thumbtack.com/>`_ is an online marketplace for local services. We use MongoDB as the datastore for all of our analytics, due to its excellent performance, flexible document format and powerful query language. More details can be found in our recent blog post: `Building our own tracking engine with MongoDB<http://engineering.thumbtack.com/2011/05/03/building-our-own-tracking-engine-with-mongodb/>`_
ChirpAt_Me_0: ".. image:: pd-images/chirpatme.png"
ChirpAt_Me_1: `ChirpAt.Me<http://chirpat.me/>`_ enables Twitter users to build their own real-time discussion board to share their passions and expertise with their friends and followers. ChirpAt.Me uses MongoDB for all of their data storage from user sessions to messages and preferences.
DianPing_com_0: ".. image:: pd-images/_E5_A4_A7_E4_BC_97_E7_82_B9_E8_AF_84_E7_BD_91.png"
DianPing_com_1: `DianPing.com<http://www.dianping.com>`_ is a leading city life guide site and local businesses promotion platform in China, it provides objective and rich local information, in the areas of restaurants, entertainment, shopping, beauty, weddings and various other categories. MongoDB is used for: user-behavior analysis system the counter on businesses, users, groups simple message queue service.
Venmo_0: ".. image:: pd-images/venmo.png"
Venmo_1: `Venmo<https://venmo.com/>`_ is a free and easy to use mobile app friends can use to pay each other back for lunch, dinner, drinks, rent, groceries, tickets, and trips. Venmo uses MongoDB for internal reporting and for storing activities published by users for their friends to browse.
Intelie_0: ".. image:: pd-images/logo-intelie.png"
Intelie_1: `Intelie<http://www.intelie.com/>`_ is a software that receives data from several sources and, using Complex Event Processing (CEP) and machine learning techniques, makes it possible to detect anomalies and known problems on data centers in real time. We use MongoDB to store all the data that IEM analyses over time, about 5000 documents per minute for one company. Storing these events allow us to 'replay' past scenarios to test new rules, in addition to providing dashboards and charts of historical data.
http___johnpwood_net_2011_05_31_fast_queries_on_large_datasets_using_mongodb_and_summary_documents__0: ".. image:: pd-images/signal.png"
http___johnpwood_net_2011_05_31_fast_queries_on_large_datasets_using_mongodb_and_summary_documents__1: First, we are using MongoDB's geospatial queries to power location based marketing campaigns. Our users can create a SMS marketing campaign to ask users for their zip code in reply to an SMS message, perform a lookup of known locations (stores) based on that zip code, and return the nearest location to the user. Second, we are using MongoDB to hold a set of summary documents to help us calculate a series of statistics for our Email and SMS subscription lists. Instead of gathering these statistics by running SQL queries in tables with excess of 10 million rows, we're able to get the same numbers by looking at anywhere from 30 - 365 summary documents. As you can imagine, this dramatically speeds up these queries. This use case is documented at `http://johnpwood.net/2011/05/31/fast-queries-on-large-datasets-using-mongodb-and-summary-documents/<http://johnpwood.net/2011/05/31/fast-queries-on-large-datasets-using-mongodb-and-summary-documents/>`_
Directdialogs_com_0: ".. image:: pd-images/directdialogs.png"
Directdialogs_com_1: `Directdialogs.com<http://www.directdialogs.com/>`_ is a cloud-based direct marketing application with email/mobile campaign management capability and a flexible no-card loyalty program. MongoDB works along with Sql Azure and serves as a powerful cache with analytical capabilities. Segmentation of customer/transaction data for marketing purposes, OLAP reporting/analytics based on customer purchase data and data mining models run on MongoDB.
DC_Storm_0: ".. image:: pd-images/dcstorm.png"
DC_Storm_1: `DC Storm<http://www.dc-storm.com/>`_ helps marketers increase sales, deliver higher ROI and target their digital marketing spend better. The intuitive technology platform and first class service provide actionable insight and control across all digital channels; ensuring clients have the competitive edge to succeed online. MongoDB powers the Storm Platform's dashboard and template storage technology, allowing for easy scalability and redundancy.
Bouncely_0: ".. image:: pd-images/Logo1.png"
Bouncely_1: `Bouncely<http://bouncely.com/>`_ uses MongoDB to save details of every bounced message from Amazon SES. We parse everything and store thousands of records per day on MongoDB. It is also used to retrieve all the information and run MapReduce in order to present statistics to users.
PClicks_0: ".. image:: pd-images/www.pclicks.png"
PClicks_1: `PClicks<https://www.pclicks.com/>`_ uses MongoDB for simple real-time analytics to gain up-to-the-minute insight into audiences and then adapt to meet their needs and watch their traffic grow.
Magnetic_0: ".. image:: pd-images/magnetic2.png"
Magnetic_1: `Magnetic<http://www.magnetic.is/>`_ is the leader in search retargeting, enabling advertisers and publishers to use search to reach their most relevant audience online. Magnetic uses MongoDB on servers processing billions of events a month. Beyond performance and scalability, Mongo is a key enabling technology for Magnetic. We leverage the rich data model and storage and analytics features to deliver real-time analytics and simplify and unify a mix of high-performance, web application and data processing servers. MongoDB gives Magnetic a competitive advantage.
Okezone_com_0: ".. image:: pd-images/okezone.png"
Okezone_com_1: `Okezone.com<http://okezone.com/>`_ is using MongoDB for inline content voting system. We also use MongoDB for rating, polling and commenting system in our video portal. (www.okezone.tv).
OpenChime_0: ".. image:: pd-images/OpenChimeLogo.png"
OpenChime_1: `OpenChime<http://www.openchime.com/>`_ uses MongoDB to help customers easily connect with local service providers of any kind. Thousands of people have found and booked everything from plumbers, maids, and gardeners, to scuba instructors in Mexico and hot air balloon rides in California.
Monoloop_0: ".. image:: pd-images/logo_monoloop.gif"
Monoloop_1: `Monoloop<http://www.monoloop.com/>`_ is a behavioral targeting platform that delivers real time personalization to existing websites. MongoDB is the core datastore that delivers the speed needed to build visitor profiles, compute scores and deliver personalized content to the visitor. The service is currently in open Beta.
Yeay_me_0: ".. image:: pd-images/logo-200x100.png"
Yeay_me_1: `Yeay.me<http://yeay.me/>`_ is a small startup that uses Grails and MongoDB for building a product recommendation service. MongoDB is used for all it's stored data.
Activesphere_0: ".. image:: pd-images/activesphere.png"
Activesphere_1: `Activesphere<http://www.activesphere.com/>`_ provides services using rails and MongoDB. We use mongoDB for our internal applications as well.
SocialCityDeals_0: ".. image:: pd-images/scd_logo_main.png"
SocialCityDeals_1: `SocialCityDeals<http://socialcitydeals.com/>`_ uses MongoDB to store rapidly changing daily deals related data. Every deal has it's own set of fields and new fields keep showing up frequently making it hard to come up with a correct DB architecture to store the data. With MongoDB's capabilities, we were able to reduce our development effort in half for the site development.
Thin_PHP_Framework_(TPF)_0: ".. image:: pd-images/thinphp_logo.jpg"
Thin_PHP_Framework_(TPF)_1: `Thin PHP Framework (TPF)<http://thinkphp.cn/>`_ is a lightweight, flexible open source PHP5 MVC framework. It aims to be a fast, simple, scalable and highly extensible framework. MongoDB is used as a module in TPF to help users scale their database easily.
Newsman_App_0: ".. image:: pd-images/logo-1.png"
Newsman_App_1: `Newsman App<http://www.newsman.ro/>`_ is an email service provider which focuses on speed and high deliverability. We use Mongo DB for now to build our powerfull subscribers segmentation tool. We allow multiple variables to be stored for each subscriber thus Mongo DB schema free was the perfect choice. We plan to switch to Mongo DB all our other database operations in the future.
Sizzix_0: ".. image:: pd-images/_szus_masthead.png"
Sizzix_1: `Sizzix<http://www.sizzix.com/>`_ uses mongodb to power its e-commerce website that sells thousands of products online.
Gazaro_0: ".. image:: pd-images/gazaro.png"
Gazaro_1: `Gazaro<http://www.gazaro.com/>`_ uses MongoDB as the backend for our business-to-business side, storing tens of millions of raw products across a range of companies.
Dropzone_by_0: ".. image:: pd-images/logo.gif"
Dropzone_by_1: `Dropzone.by<http://dropzone.by/>`_ uses mongodb for storing content, banners, taglines and other information. We have also introduced OAuth 2.0 and implemented it using Python/Twisted/MongoDB tandem.
Cairenhui_0: 
Cairenhui_1: `Cairenhui<http://www.cairenhui.com/>`_is a Financial Community. The web application is coded in Java(using morphia orm framework) and use Mongodb_1.8.1(base on auto_sharding) to store all UGC data.
Ez_Texting_0: ".. image:: pd-images/ez-texting.png"
Ez_Texting_1: `Ez Texting<http://www.eztexting.com/>`_ uses MongoDB to queue incoming text messages before our application processes them - and outgoing text messages after our application processes them for delivery.
iKeepm_0: ".. image:: pd-images/ikeepm-small.jpg"
iKeepm_1: `iKeepm<http://www.ikeepm.com/>`_ is a cloud-based home inventory application. iKeepm uses MongoDB to store photos and file uploads in GridFS.
Maansu_com_0: ".. image:: pd-images/logo.jpg"
Maansu_com_1: `Maansu.com<http://www.maansu.com/>`_ is an retail book store. Maansu uses MongoDB to store the details of the 16 Million books it sells.
www_motores24h_pt_0: ".. image:: pd-images/m24h.jpg"
www_motores24h_pt_1: `www.motores24h.pt<http://www.motores24h.pt/>`_ is one of the leading classified ads sites in Portugal. We rely solely on MongoDB for our data storage needs. The schemaless nature of MongoDB allowed us to develop a modular platform that we can easily extend to cater for any type of adverts.
Techunits_0: ".. image:: pd-images/Techunits_Logo.png"
Techunits_1: `Techunits<http://www.techunits.com/>`_ seeks to work in technologies like large scale Web Development platforms, Deep Crawl technology, Information extraction, Image/Audio/Video analysis, RDF to name a few. Mongo with TechMVC is the best choice for us to be used in such large scale deployments due to Object based architecture. Techunits has already used the MongoDB for several large scale live developments e.g. Buzzers.co.za, Trivian(Game at Nokia Ovi Store), CelebRise.
Buzzers_co_za_0: ".. image:: pd-images/buzzers.png"
Buzzers_co_za_1: `Buzzers.co.za<http://www.buzzers.co.za>`_ `http://buzzers.co.za/<http://buzzers.co.za/>`_ has chosen MongoDB for the superior performance, in an ever changing environment scalability is the number one priority which others struggle to fulfill, handling millions of products and still offering the best performance is why `Buzzers.co.za<http://buzzers.co.za/>`_ chose MongoDB. Buzzers using MongoLantern for mongodb fulltext search for products and related entities, which makes the search system more intelligent and helpful to customers.
Paraimpu_0: ".. image:: pd-images/paraimpu-logo-60.png"
Paraimpu_1: `Paraimpu<http://paraimpu.crs4.it/>`_ is a social tool for the Web of Things. It provides a (simple) way to connect, use, inter-connect and socially share things, smart objects, digital equipments, API and services on the Web. MongoDB is used for all the persistent data storage requirements of our platform: performance, horizontal scalability, sharding, heterogeneous data and NoSQL in primis.
Trivian_0: ".. image:: pd-images/logo-2.png"
Trivian_1: `Trivian<http://trivian.com/>`_ is a location based social network that incorporates quiz gaming elements. Trivian uses MongoDB to store quiz questions and places.
Business_com_0: ".. image:: pd-images/bdc-logo.png"
Business_com_1: `Business.com<http://www.business.com/>`_ is the premier online destination for businesses of all sizes to research, find, and compare the products and services they need to run their businesses. We use MongoDB to power our CMS and taxonomy systems. We also use Mongo's GridFS to store advertiser logos and other static assets.
General_Flows_0: ".. image:: pd-images/avatar_185111e80f46_64.png"
General_Flows_1: `General Flows<http://www.generalflows.com/>`_ is building an app where people can create databases of their stuff, then plug their stuff into some pre-baked 'flows' to let them do useful things with their stuff. So for example you could quickly build a booking system for presentation equipment by building a database of laptop and projectors and plugging them into the 'booking' flow. So we're trying to build an app that deals with totally unknown data structures, because the data structure is created by the end user as they go. We messed around with code-generation techniques (define a conventional model layer from user input) and SQL techniques (EAV) but found the all frustrating to swapped to no-sql style DBs. We evaluated CouchDB, Mongo and Google App Engine and Mongo made it possible to do exactly what we needed. The database is now up and running; we're just rolling out sets and soon we should have some flows up and running, too.
Art_sy_0: 
Art_sy_1: `Art.sy<http://www.art.sy>`_ is a new way to discover art you'll love, featuring work from leading galleries, museums, and private collections around the world. Art.sy is powered by RoR with MongoDB.
 
- `Using MongoDB to Build Art.sy<http://www.10gen.com/presentations/mongonyc-2012-using-mongodb-build-artsy>`_ - Presentation from MongoNYC 2012

Spoondate_0: ".. image:: pd-images/newlogo.png"
Spoondate_1: `Spoondate<https://spoondate.com/>`_ is a social community that connects people through shared Ã¢â‚¬Å¡cravingsÃ¢â‚¬Å¡ and unique dining experiences. The site enables members to post what they're Ã¢â‚¬Å¡cravingÃ¢â‚¬Å¡ and other Spoondaters can engage in a conversation, or suggest meeting for a meal in real time. MongoDB powers our geolocation services, data and member search, analytics, and logging. Thanks to MongoDB, we have been able to add features rapidly and consistently improve our products over time.
uQuery_Inc__0: ".. image:: pd-images/home_header_logo.png"
uQuery_Inc__1: `uQuery Inc.<http://www.uquery.com/>`_ uses a sharded MongoDB infrastructure in which we process about 30GB of data per day that we receive from Apple with all the AppStore content, apps, prices, etc. We have migrated our entire software stack from MySQL to MongoDB.
46elks_0: ".. image:: pd-images/46elks_logotype.png"
46elks_1: `46elks<http://www.46elks.com/>`_ uses MongoDB to for the backend of it's cloud communication platform. By using MongoDB we can make sure the data of our SMS and phone calling customers is kept safe and always accessible.
Chalkboard_0: ".. image:: pd-images/chalkboard.png"
Chalkboard_1: `Chalkboard<http://www.yourchalkboard.com/>`_ is a daily marketing solution for small businesses to communicate instantly, locally and socially over mobile and web. Chalkboard works with thousands of local businesses and reaches millions of consumers across third party mobile applications, websites and navigation systems. We utilize MongoDB to archive the 100 millions of analytics data records where we can easily analyze the data internally. With the growing usage of Chalkboard, MongoDB allows to scale our infrastructure in the near future.
tisProperty_0: ".. image:: pd-images/slogan.png"
tisProperty_1: `tisProperty<http://www.tisproperty.com/>`_ is a Realestate Vertical Search Engine that allows users to search for ALL for sale and for rent realestates listed on the Internet. We crawl the Internet daily and MongoDB is being used as a huge cache to store our crawling and indexing results.
Digital_Media_Exchange_0: ".. image:: pd-images/mobius_logo.png"
Digital_Media_Exchange_1: `Digital Media Exchange<http://www.mobiusonline.net/>`_ uses MongoDB for several things actually, and we've been using it more and more instead of our main postgres db. The following are some of our use cases: 1. Search engine index storage 2. We run a lot of promo's for our products so we store promo data in mongo. Love the schema-less design. 3. We use it as replacement for our table views to store denormalized data These are just some of the use cases, and i'm very confident that we will find more uses for MongoDB.
Daily_Gourmet_0: ".. image:: pd-images/dailygourmet_logo.png"
Daily_Gourmet_1: `Daily Gourmet<http://www.dailygourmet.com/>`_ provides regular offers on artisanal and gourmet food products. 'We're using MongoDB for our extensive logging/analytics. MongoDB's performance has enabled us to capture information that just wasn't possible with MySQL.'
Singly_0: ".. image:: pd-images/tlp_web_logo.png"
Singly_1: <span id='lockerproject'><p> Sponsored by `Singly<http://singly.com/>`_, `The Locker Project<http://www.lockerproject.org/>`_ is an open-source P2P network that 'gives people ownership over their personal data and clear control over how it's protected and shared.' The project uses MongoDB as a personal data store; you can `browse this Node.js project on Github<https://github.com/LockerProject>`_.</p></span>
Loc__cit__0: ".. image:: pd-images/loccit.png"
Loc__cit__1: `Loc. cit.<http://loc-cit.com/>`_ is a small new idea in publishing. Translate-as-you-go, a paragraph at a time. A sentence alone can be explosive. Translate polemically: every passage can be retranslated. MongoDB is our backend database for everything. It allows us to carry thousands of paragraphs from public domain books. We use Mongoengine for Django authentication functionality.
Naver_Japan_0: ".. image:: pd-images/naver-logo.jpg"
Naver_Japan_1: `Naver Japan<http://www.naver.jp/>`_ utilizes MongoDB's document-oriented storage and powerful search features for their recently released photo sharing iPhone app, Ã¢â‚¬Å¡NAVER Photo Album(( `http://itunes.apple.com/jp/app/id449576650<http://itunes.apple.com/jp/app/id449576650>`_)Ã¢â‚¬Å¡, to generate activity feeds. * Use Case: A Photo Sharing App with MongoDB (Japanese) - Presentation at Tokyo's MongoDB study group (September 2011) `http://www.slideshare.net/naverjapan/mongodb-9422893<http://www.slideshare.net/naverjapan/mongodb-9422893>`_
My_eStore_App_0: ".. image:: pd-images/myestoreapp.png"
My_eStore_App_1: `My eStore App<http://myestoreapp.com/>`_ uses MongoDB for our entire production systems. We store all users / stores, images and content via Mongo.
Fotosearch_Stock_Photography_0: ".. image:: pd-images/fslogo_pt.gif"
Fotosearch_Stock_Photography_1: `Fotosearch Stock Photography<http://www.fotosearch.com/>`_ uses MongoDB to track impressions on which of our stock photo imagesare served when a customer does a search query. It is helping us better understand what a customer is looking for when they do a particular search and will allow us to serve up a better set of results.
CloudAmp_0: ".. image:: pd-images/CloudAmp_Horizontal_300x58.jpg"
CloudAmp_1: `CloudAmp<http://www.CloudAmp.com>`_ is a data platform for developers. We give you an instant backend for your apps, combining as many data sources as you want. CloudAmp uses MongoDB as storage for data that are aggregated across different private and public data sources and APIs to solve the problem of cloud-scale, real-time data integration for app developers. We also provide a Node.js library 'connector' to push data up to our platform from private data sources like MongoDB, MySQL, Redis and public sources like Facebook and Twitter, where we organize it along with other data streams.
Piyavate_International_Hospital_0: ".. image:: pd-images/PoweredBySiteMongo.png"
Piyavate_International_Hospital_1: `Piyavate International Hospital<http://www.piyavate.com/web/>`_ is a leader in international hospital in Thailand and South East Asia. Their new website need some major enhancement that fit with our ColdFusion and MongoDB, also full text search with Solr. Multi-languages, complex structure and relationship, document management, WYSIWYG form creation, tag system, intranet built-in, full text search, digital asset management. All of these features are totally depend on MongoDB. Almost impossible or very difficult to approach via RDBMS way. That's why MongoDB rules!
Mindvalley_0: ".. image:: pd-images/mindvalleylogo.png"
Mindvalley_1: `Mindvalley<http://www.mindvalley.com/>`_ is using MongoDB for our in-house analytics, using Sinatra, async_sinatra, Rails, and Mongoid. The ability to 'fire-and-forget' helps us capture and collect site data without compromising page speed, while its document-centric features allows us to quickly retrieve all information about a particular lead. Due to our successful pilot, we're planning to use MongoDB for storing affiliate data, an in-house developed CMS, as well as the social graph in a community application.
Cookfollower_0: ".. image:: pd-images/logo-with-bg.png"
Cookfollower_1: `Cookfollower<http://cookfollower.com/>`_ is a Twitter like micro blogging, social cooking website where you can find great recipes and meet new people. MongoDB is used to store all recipe data and user's social graph.
Weconext_0: ".. image:: pd-images/logo_weconext.png"
Weconext_1: `Weconext<http://www.weconext.eu/>`_ develops and sales a<br>secured web platform to allow professionals to work closer with their partners. This innovative platform allows simple collaborations, concrete work on the same data and quick exchanges of information. MongoDB stores for Weconext all the dynamic part of its backend.
Visual_ly_0: ".. image:: pd-images/visually.png"
Visual_ly_1: `Visual.ly<http://visual.ly/>`_ is building the Data Visualization<br>platform for Big Data. Visual.ly is using MongoDB for the main data store for their core product.
Trendrr_0: ".. image:: pd-images/header_nav_logo.png"
Trendrr_1: `Trendrr<http://trendrr.com/>`_ provides the key to managing, understanding, engaging, and activating real-time user experiences for media and brands. We use MongoDB to store terabytes of statistical data and content that feed our curation, charting and analytics products.
Wireclub_0: ".. image:: pd-images/wireclub.png"
Wireclub_1: `Wireclub<http://www.wireclub.com/>`_ is an online community with over 3 million users world-wide. Everyday over 1.5 million messages are exchanged by our users and we rely exclusively on MongoDB for all our database needs.
KANO_APPS_0: ".. image:: pd-images/kano_apps_logo.png"
KANO_APPS_1: `KANO/APPS<http://www.kanoapps.com/>`_ creates addictive social games. Our games have a loyal fan base encompassing millions of worldwide players across multiple social networks like Facebook, Myspace and Hi5. MongoDB is used as the primary data store for game data as well as our analytics platform.
OnePageCRM_0: ".. image:: pd-images/onepage_logo.png"
OnePageCRM_1: `OnePageCRM<http://www.onepagecrm.com/>`_ uses MongoDB as a primary (and for now as the only one) database engine. We have been using MySQL some time ago, but we have fully migrated to MongoDB.
Blabbermouth_Social_0: ".. image:: pd-images/blabber_logo.jpg"
Blabbermouth_Social_1: `Blabbermouth Social<http://www.blabbermouthsocial.com/>`_ use MongoDB to collect and store large amounts of data for social media campaigns for sweepstakes and other purposes. We also use MongoDB for campaign traffic analytics..
Persik_me_0: ".. image:: pd-images/perrsik.jpg"
Persik_me_1: `Persik.me<http://persik.me/>`_ uses MongoDB to power CMS. Please note that this website is NSFW.
Kungfuters_LLC_0: ".. image:: pd-images/awkwardturtle.png"
Kungfuters_LLC_1: `Kungfuters LLC<http://awkwardturtle.com/>`_ is using MongoDB as a backend for our socially driven contest site, awkwardturtle.com. Users must sign in using an existing social network, such as Google+, Facebook, or Twitter and users can submit stories of awkward moments in their lives. Visitors can read the stories and vote on their favorites. Each week, the story with the most votes wins a sponsored prize. MongoDB drives the entire backend. This site was formerly connecting to a MySQL database via JPA, but it was just too slow. All Contests, Stories, Users, Votes, etc. are stored in Mongo. The end result is a site reborn and blazing fast.
PunchTab_0: ".. image:: pd-images/logo-1.png"
PunchTab_1: `PunchTab<http://www.punchtab.com/>`_ store all loyalty activities
Nexon_Corp__0: ".. image:: pd-images/ci1_img1.gif"
Nexon_Corp__1: `Nexon Corp.<http://www.nexon.net/>`_ is a massively multiplay online Game server uses MongoDB to archive game records.
Heyzap_0: ".. image:: pd-images/heyzap.png"
Heyzap_1: `Heyzap<http://www.heyzap.com/>`_ uses mongoDB to power our real-time activity streams for millions of users on our Android and iOS gaming apps, additionally Heyzap uses mongo for analytics and insights into game play behavior for tens of millions of our Heyzap SDK enabled games.
Fishidy_com_0: ".. image:: pd-images/avatar_18d108235b0c_128.png"
Fishidy_com_1: `Fishidy.com<http://www.fishidy.com/Landing/?ReturnUrl=_2f>`_ uses MongoDB for storing and retrieval of our social data entered by our end users.
Wokeey_com_0: ".. image:: pd-images/wokeey.com.png"
Wokeey_com_1: `Wokeey.com<http://wokeey.com/>`_ uses MongoDB for Storing data with big record, approximately in one day can store hundreds records.
ThinktankSocial_0: ".. image:: pd-images/smFusionLogoBlack.png"
ThinktankSocial_1: `ThinktankSocial<http://smfuse.com/>`_ uses MongoDB as one of the core technologies behind our platform that enables large brands such as Priceline Australia, Fitnfast Gyms to engage its users, Mongo enables real time reporting and mass storage with a smaller overhead than Mysql or other SQL based databases.
Data_Publica_0: ".. image:: pd-images/data-publica-logo.png"
Data_Publica_1: `Data Publica<http://www.data-publica.com/>`_ uses MongoDB for storage of data delivery through API.
Hipster_0: ".. image:: "
Hipster_1: `Hipster<http://www.hipster.com/>`_ uses MongoDB as the primary data store for users and all user-created content, as well as logging and analytics.
Noktacom_Medya_0: ".. image:: pd-images/izlesene-logo.png"
Noktacom_Medya_1: `Noktacom Medya<http://www.izlesene.com/>`_ uses MongoDB in www.izlesene.com (Turkey's #1 video site) to log very detailed analytics. We track everything from video impressions to page clicks, videos watched etc. We also built a custom video scoring system using MongoDB depending on video popularity which is used on video suggestion system. We have 3 machines running MongoDB and we have around 20 to 50 insert calls / second. We will expend using MongoDB and soon to switch from MySQL to MongoDB fully because of no usage of caching systems required with mongo. Best,
Searce_0: ".. image:: pd-images/searce.png"
Searce_1: `Searce<http://searce.com/>`_ we used mongoDB as our database for a<br>very large set of data.Almost 5-10 collections having millions of documents.
deegr_0: ".. image:: pd-images/deegr_fat.png"
deegr_1: `deegr<http://www.deegr.com/>`_ is using MongoDB to store millions of ratings and to provide an ultra-quick and innovative recommendation engine. As our community is growing pretty quickly, we're aiming to build a cloud-based architecture and shard MongoDB in the cloud in a near-future.
AppHarbor_0: ".. image:: pd-images/appharbor-logo.png"
AppHarbor_1: `AppHarbor<https://appharbor.com/>`_ is a .NET platform as a service. `AppHarbor<https://appharbor.com/>`_ uses MongoDB to log, track and retain error messages generated by thousands of platform applications. Applications hosted on AppHarbor can provision MongoDB databases as on `add<https://appharbor.com/addons>`_-on from `MongoHQ<https://appharbor.com/addons/mongohq.>`_
Pictomist_0: ".. image:: pd-images/pictomist.png"
Pictomist_1: `Pictomist<http://pictomist.com/>`_ is a simple and attractive way to browse &amp; share photos that we spun up in under two weeks. Its written in two basic parts: the first being a service layer that parses twitter pushes results into a queue style mongo collection (not sharded yet, but will be as we grow it) where a separate thread will then pops off the top elements and parse these results/resize images/and pushes into our media collection. The second part is web layer which grabs media from a Mongo collection indexed by hashtag, re-aggregates them in memory, and sends them to the view. The speed and flexibility of Mongo was great in helping us spin out the bulk of this idea over a single weekend coding binge while still allowing us to grow our data layer without mucking around tedious database code and/or bulky ORMs.
Xperantum_Xemantics_0: ".. image:: pd-images/xperantumlogo.png"
Xperantum_Xemantics_1: `Xperantum Xemantics<http://www.xperantum.com/>`_ uses MongoDB to enable users and organizations to define their own data structures, capture the right content from files and analyze those seamlessly.
4Apps_0: ".. image:: pd-images/listsbrowserlogo.png"
4Apps_1: `4Apps<http://listsbrowser.com/>`_ uses MongoDB as the main database to save lists and we also use it as user session store after memcached.
GLO_AB_0: ".. image:: pd-images/glologo.jpg"
GLO_AB_1: `GLO AB<http://www.glo.se/>`_ uses MongoDB Mongodb in 'Home-grown' inventory control and manufacturing execution system (MES) software product for Nanowire LED production as the main database for storing unit/wafer/chip data gathered during manufacturing process. We are generating in average 10000 documents per day, but expecting to grow to several millions per day. Currently we have cluster consisting of 3 servers running within company network.
CMI_Soft_0: ".. image:: pd-images/cmisoft.jpg"
CMI_Soft_1: `CMI Soft<http://www.cmisoft.in>`_ uses MongoDB to run the backend of all our custom (Ruby on Rails based) CMS driven websites &amp; e-commerce stores including our company website www.cmisoft.in. We have also developed intranets, social networking apps and have 2 community oriented e-commerce concepts under development which use Rails with MongoDB.
Fyndlr_0: ".. image:: pd-images/fyndlr-logo.png"
Fyndlr_1: `Fyndlr<http://fyndlr.com/>`_ implements MongoDB from the backend service that powers fyndlr. All data about lost &amp; found posts and users are organized in MongoDB collections. We rely heavily on MongoDB for our geolocation functionality. Since our service was written in Python, we implemented PyMongo to interface with our MongoDB instance.
Exceptiontail_0: ".. image:: pd-images/exceptiontai.png"
Exceptiontail_1: `Exceptiontail<https://www.exceptiontail.com/>`_ uses MongoDB in order to store user and exception information Exceptiontail is a .Net exception management service that allows developers to know when their applications crashed and lets them see the entire system/process/exception information for that crash.
AdHui_com_0: ".. image:: pd-images/adhui.gif"
AdHui_com_1: `AdHui.com<http://www.adhui.com/>`_ uses mongoDB for real-time cookie analytics. Leading provided for DSP and SEM optimization.
Travelmap_0: ".. image:: pd-images/travelmap_mongodb.org.png"
Travelmap_1: `Travelmap<http://www.travelmap.nl/>`_ uses MongoDB to store hotels, tickets and holiday-packages aggregated live from a bunch of sources. Travelmap is one of the biggest travel websites in the Netherlands. MongoDB proved to be up to 5 times faster and much more scalable then our previous mysql installation, on the same hardware! On average our database contains ~20 million objects.
Global_Advertisers_0: 
Global_Advertisers_1: `Global Advertisers<http://globaladvertisers.in/company.aspx>`_ uses MongoDB to help with blogging. Global Advertisers is India's most progressive outdoor advertising agency. Armed with Mumbai's largest hoarding @ Bandra to widest hoarding @ Airport. Global is one stop for anything and everything under OOH.
Melt_DSP_0: ".. image:: pd-images/meltlogo.png"
Melt_DSP_1: `Melt DSP<http://www.meltdsp.com/>`_ is using MongoDB to answer millions of bid requests per hour in a time shorter than 5ms EACH!
Startup_Threads_Monthly_0: ".. image:: pd-images/stm_logo.png"
Startup_Threads_Monthly_1: `Startup Threads Monthly<https://www.startupthreadsmonthly.com/>`_ uses MongoDB as its backend database for customer info.
Songza_0: ".. image:: pd-images/songza-logo-092011.png"
Songza_1: `Songza<http://songza.com/>`_ uses MongoDB to hold all the data that drives the web site. Songza is a Music Concierge - a free streaming service that finds you the right playlist at the right time. Users, playlists, interaction history, etc. The schema-free design is a big win for us. When we used MySQL, schema migrations were a major pain, and occasionally a cause of extended downtime.
Ciris_0: ".. image:: pd-images/contact506-pequeno.png"
Ciris_1: `Ciris<http://www.contact506.com/>`_ is a new application where you can find contact information about the people in Costa Rica. We use MongoDB to store the documents for every person and registered business in the country.
Socialbakers_Inc__0: ".. image:: pd-images/socialbakers.png"
Socialbakers_Inc__1: `Socialbakers Inc.<http://www.socialbakers.com/>`_ For storing great amount of statistical data from social networks.
Neon_Grid_0: ".. image:: pd-images/neongrid.png"
Neon_Grid_1: `Neon Grid<http://www.neongrid.com/>`_ uses mongodb to store profiles, and associate creative skills with our users.
Ex_Machina_0: ".. image:: pd-images/exmachina.png"
Ex_Machina_1: `Ex Machina<http://www.exmachinagames.com/>`_ develops second screen applications for large TV shows around the world. This typically involves tens or hundreds of thousands of people interacting with our clusters at exactly the same time and as a result we have to be able to deal with many thousands of database operations per second. We needed a storage solution that offers very good performance, is easy to scale up fast and remains cost-efficient regardless of scale. MongoDB offers all of the above along with a helpful, active community. We never looked back.
BellyBallot_0: ".. image:: pd-images/bellyballot.jpg"
BellyBallot_1: `BellyBallot<http://babynames.net/>`_ is a new site for expecting parents that mixes social media with baby names. BellyBallot uses MongoDB for it's primary content serving which includes the thousands of names around the world, and their associated meanings, pronunciations, etc. BellyBallot's custom content management system (built on Rails) is also on MongoDB and allows the community and site admins to keep the content relevant.
AdMaster_0: ".. image:: pd-images/admaster.png"
AdMaster_1: `AdMaster<http://www.admaster.com.cn/>`_ uses MongoDB for its social networking analytics product, WeiboMaster, to store the infomation of over 40,000,000 followers and 700,000 tweets with 35,000,000 relevant comments and retweets.
GetVega_0: ".. image:: pd-images/getvega_logo.jpg"
GetVega_1: `GetVega<http://www.getvega.com/>`_<br>is a second memory for your projects and passions. GetVega helps you collect in a really smart way the relevant data from the webpage you visit: pictures, videos, prices... Everything goes then in a collaborative list on GetVega where each will be able to comment, rate and compare everything you collected. GetVega.com uses MongoDB for the whole back-end (except search with Solr), after a first prototype with MySQL. MongoDB allow us to store versatile data in a blazing fast scalable way!
5Searches_0: ".. image:: pd-images/5searches.png"
5Searches_1: `5Searches<http://www.5searches.com/>`_ uses MongoDB it to manage all of my social media users and profiles!
barbull_co_uk_0: ".. image:: pd-images/barbull.png"
barbull_co_uk_1: `barbull.co.uk<http://www.barbull.co.uk/>`_ uses MongoDB to store a list of searchable attributes for personal trainers, which is fast and reliable and the ability to add custom functions and map reduce means that our complex distance calculations are a breeze.
Power_lan_0: ".. image:: pd-images/power-lan.png"
Power_lan_1: `Power-lan<http://www.power-lan.com/en/home.html>`_ uses MongoDB to store real time data from IP sensors connected to internet (over 3G). Main applications are : - Nondestructive testing (Highway, Aeolian, ...) - Automation and Smart Grid applications
Sidebuy_0: ".. image:: pd-images/sidebuy_logo.png"
Sidebuy_1: `Sidebuy<http://sidebuy.com/>`_ is a product/deal aggregator that crawls the web and uses an intelligent system to automatically find products and deals. The challenge with traditional DBMS was to store entities with different properties. With MongoDB, entities are stored as documents. Also, with MongoDB expansion problems across our servers have been solved. Sidebuy crawls thousands of webpages per day and store everything in BSON documents now. Geospatial querying is also a big plus for Sidebuy.com.
OviPets_0: ".. image:: pd-images/ovipets.png"
OviPets_1: `OviPets<http://ovipets.com/>`_ uses MongoDB for everything in our new facebook game OviPets ( `http://ovipets.com<http://ovipets.com>`_), and are very happy with the performance and simplicity of MongoDB. We're growing rapidly and MongoDB is scaling beautifully with us. Apart from various game related collections we also use MongoDB for sessions storage and image caches.
Tip_or_Skip_0: ".. image:: pd-images/tip-or-skip.jpeg"
Tip_or_Skip_1: `Tip or Skip<http://tips.by/>`_ uses MongoDB for all of our database needs; user and product storage, interaction, analytics, and job queues.
Nodegrid_0: ".. image:: pd-images/nodegrid.png"
Nodegrid_1: `Nodegrid<http://nodegrid.com/>`_ provides a hosting platform for MongoDB and also uses MongoDB as the back-end for its service.
Courseoff_0: 
Courseoff_1: `Courseoff<https://courseoff.com>`_ uses MongoDB stores student created schedules as well as the schedule listings themselves.
ClaimAble_0: ".. image:: pd-images/claimable-logo.png"
ClaimAble_1: `ClaimAble<http://www.claim-able.com/>`_ operates a web app for insurance claims manage net. MongoDB is our primary datastore. We use it exclusively to power our platform and API.
Ponder_Design_0: ".. image:: pd-images/ponderdesigns.png"
Ponder_Design_1: `Ponder Design<http://www.ponderdesign.nl/>`_ uses MongoDB to power all custom webapps we write for our customers. From a ticket portal for a large student event to CMS systems to custom surveys. Mongo lets us be very flexible in implementing new features or adjusting existing ones as we discover our customers real requirements and wishes.
Stamped_0: ".. image:: pd-images/stamped-logo.png"
Stamped_1: `Stamped<http://stamped.com/>`_ is a recommendation-based social network application that allows users to advocate for their favorite places and things. MongoDB is used to store and receive user data and are responsible for coordinating the creation and enrichment of data about stampable entities.<br> `The Engineering Behind the Stamped Backed<http://blog.stamped.com/post/22204024267/the-engineering-behind-the-stamped-backend>`_
Hopper_0: ".. image:: pd-images/hopperlogo.png"
Hopper_1: `Hopper<http://gethopper.com/you>`_ uses MongoDB for storage of all of our user data and content.
Recommendly_INC_0: ".. image:: pd-images/recommendly-beta-logo.png"
Recommendly_INC_1: `Recommendly INC<http://recommend.ly/>`_ uses MongoDB for 5 cluster servers with 3 shards.
AlisverisRobotu_com_0: ".. image:: pd-images/alisverisrobotu.png"
AlisverisRobotu_com_1: `AlisverisRobotu.com<http://www.alisverisrobotu.com/>`_ is a shopping and price comparison engine. We use MongoDB for many things, including inventory management and transaction logging.
ITERNOVA_SL_0: ".. image:: pd-images/iternova.jpeg"
ITERNOVA_SL_1: `ITERNOVA SL<http://www.iternova.net/>`_ proudly uses MongoDB in our Intelligent Transport Systems (ITS) management system, to store real-time data obtained from devices installed in roads (weather stations, mesh and sensorial networks...), and vehicles (GPS, ITS data...).
tvb_com_0: ".. image:: pd-images/mytv_logo.jpeg"
tvb_com_1: `tvb.com<http://tvb.com/>`_ uses MongoDB to store storage meta-data of programme in mytv with different data-type. Since MongoDB is schema free it fits our needs. We also use MongoDB in real-time analytics with map-reduce processing. We create statistics for site traffic and a real-time programme chart.
Ob1b_com_0: ".. image:: pd-images/ob1b-logo.jpeg"
Ob1b_com_1: `Ob1b.com<http://www.ob1b.com/>`_ is one of China's price compare websites of 3C procuts. On ob1b.com customers can compare price and find products informantion from E-Business websites in China, and Customer can find the right products which they want to buy. We use Mongdb as Data store engine. We have chosen MongoDB most because of its simplicity , easy to study and faster than traditional database.
Talis_0: ".. image:: pd-images/talisaspire.png"
Talis_1: `Talis<http://www.talisaspire.com/>`_ uses MongoDB to store and serve the graph-based data model in it's Community Edition product ( `http://community.talisaspire.com<http://community.talisaspire.com>`_). By using MongoDB as a replacement for the existing database, we achieved an order of magnitude better performance. At the same time converting to MongoDB allowed us to simplify our stack by removing complex caching infrastructure external to our old database.
Digital_Flow_0: ".. image:: pd-images/digital_flow_logo.png"
Digital_Flow_1: `Digital Flow<http://www.digitalflow.co.za/>`_ uses MongoDB as the database of choice for our clients' deployments - the sheer scalability, ease of use and deployment are a no brainer for us.
Transmachin_0: ".. image:: pd-images/transmachina_360.png"
Transmachin_1: `Transmachin<http://www.transmachina.com/en>`_ uses a single-node MongoDB with huge amounts of linguistic data (such as aligned sentences with loads of custom indexing) which is used for automated language learning and also for delivering our website translation service Sprawk.
About_me_0: ".. image:: pd-images/logo-about.me.png"
About_me_1: `About.me<https://about.me/>`_ is currently processing millions of messages per day. After outgrowing an existing MQ solution, About.me turned to MongoDB. An old MQ cluster was replaced with a sharded Mongo deployment. In addition to the sharding ability, Mongo provided options that allows About.me to tailor durability to the level required.
Dealer_com_0: ".. image:: pd-images/dealer.com-logo.jpg"
Dealer_com_1: `Dealer.com<http://www.dealer.com/index.htm>`_ deployed a site configuration management system based on MongoDB. The current system supports configuration files for over 15,000 customer sites with thousands of revisions per site and an on-disk size of almost 200GB.
Famigo_0: ".. image:: pd-images/famigo-logo.png"
Famigo_1: `Famigo<http://www.famigo.com/>`_ stores all valuable data in MongoDB and serves all requests via Amazon EC2 instances.
The_Materials_Project_0: ".. image:: pd-images/materialsproject-logo.png"
The_Materials_Project_1: By scaling materials computations over supercomputing clusters, `The Materials Project<http://materialsproject.org/>`_ has computed the properties of over 80,000 materials and screened 25,000 of these for Li-ion batteries. The Materials Project is making these materials and their properties available to scientists around the world through a sophisticated web interface. MongoDB is at the core of the Materials Project architecture. It is used to schedule and track quantum mechanical calculations of materials properties on supercomputers, to store and search the results of these computations, and to perform advanced analytics on the computed materials properties.
MapMyFitness_0: ".. image:: pd-images/mapmyfitness-logo.jpg"
MapMyFitness_1: The `MapMyFitness<http://www.mapmyfitness.com/>`_ user base more than doubled in 2011, beginning an era of rapid data growth, and the traditional MySQL solution for the MapMyFitness web applications hit its ceiling. MongoDB was chosen as the candidate for exploration into NoSQL implementations, and now serves as their data store for rapid application deployment. MongoDB has assisted in serving 2TB+ of geolocation data, to time-series data for live tracking, to user sessions, app logging, and more.
SimpleReach_0: ".. image:: pd-images/simplereach-logo.png"
SimpleReach_1: `SimpleReach<http://simplereach.com/>`_ powers the Slide, a recommendation powered content discovery technology for websites. SimpleReach builds schemas in MongoDB and Node.js for powerful, real-time data delivery. 
 
- `Schemas for Real Time Analytics with Node.js<http://www.10gen.com/presentations/nyc-meetup-group/schemas-for-real-time-analytics-with-node.js>`_ - NYC MUG (January 2012) 
- `Polyglottany is Not a Sin<http://www.10gen.com/presentations/mongodb-boston-2012/polyglottany-not-sin>`_ - MongoDB Boston 2012

Stripe_s_0: ".. image:: pd-images/stripe-logo.png"
Stripe_s_1: MongoDB is used for Monster,<br> `Stripe's<https://stripe.com/>`_ in-house framework for producing and consuming events. Whenever a user logs in, a payment is received, or a cron job runs, an event is logged into our MongoDB event store. These events update aggregate totals, feed into fraud algorithms, and can be analyzed as a change log of the system.
Tuttur_com_0: ".. image:: pd-images/tuttur.com.jpg"
Tuttur_com_1: `Tuttur.com<https://tuttur.com/>`_ is a social betting platform built and maintained by Tart New Media[3]. Users are encouraged to share their betting experience and win together. MongoDB holds all the Social experience data over 6 Linux machines.
WireLoad_0: ".. image:: pd-images/wireload.png"
WireLoad_1: `WireLoad<http://wireload.net/>`_ uses MongoDB as a redundant storage back-end. WireLoad designs software apps that are narrowly focused so that we can polish each part to a shine so you can enjoy the quality, ease of use and pleasant user experience that results.
Illicotravel_0: ".. image:: pd-images/illimongo.png"
Illicotravel_1: `Illicotravel<http://www.illicotravel.com/>`_ compares hundreds of travel sites. We use MongoDB to store tickets, holiday-packages, hotels and more. We love MongoDB.
Drawabble__0: ".. image:: pd-images/drawabble.png"
Drawabble__1: MKN's (MKN Web Solutions) Facebook game `'Drawabble'<https://drawabble.com/>`_ utilizes MongoDB 100_ for all database operations. The database stores user interaction, games, game drawings, and everything else.
Spideo_0: ".. image:: pd-images/logo_spideo.jpeg"
Spideo_1: `Spideo<http://spideo.tv/>`_ using MongoDB to store customers information, in order to recommand them movies related to their own tastes.
radi8_co_uk_0: ".. image:: pd-images/radi8_300x300.jpeg"
radi8_co_uk_1: `radi8.co.uk<http://radi8.co.uk/>`_ using MongoDB within Ruby on Rails Development Projects.
PRIJSZOEKEN_nl_0: ".. image:: pd-images/PRIJSZOEKEN.nl.png"
PRIJSZOEKEN_nl_1: `PRIJSZOEKEN.nl<http://www.prijszoeken.nl/>`_ is a Dutch price and product comparison website. We are offering more than 1.5 million products from 500 connected shops. We use MongoDB to handle pretty much everything: all our data-feeds, our custom made analytics system and product specifications. MongoDB is perfect for us, it allows us to develop rapidly and the performance is great.
JustReco_0: ".. image:: pd-images/justrecologo.png"
JustReco_1: `JustReco<http://www.justreco.com/landing>`_ uses MongoDB as its primary database for their social networking site.
Gimme_Bar_0: ".. image:: pd-images/gimme_bar-215.png"
Gimme_Bar_1: `Gimme Bar<http://seancoates.com/blogs/>`_ use MongoDB for the entire backend datastore (everything except media assets, which are stored directly in S3). We currently have a multi-node replica set. Not (yet) sharded. Current VSIZE is around 70g.
Nodex_0: ".. image:: pd-images/nodex.png"
Nodex_1: `Nodex<http://www.nodex.co.uk/>`_ use MongoDB as our primary<br>data store for our CMS which is soon to be open sourced. We have many websites running on MongoDB and are expanding at a rate of around 1 per week (avg). Using MongoDB enables rapid development of fast and secure websites. If you would like some more information I am happy to write a blog post more outlining how we use it.
FramtidsPost_AB_0: ".. image:: pd-images/heyfuture.png"
FramtidsPost_AB_1: `FramtidsPost AB<http://dev.heyfuture.com/>`_ uses MongoDB for all our storage need in the HeyFuture, FuturePing and BackFuture services. The FuturePing messages are very small and counts to millions. The HeyFuture and BackFuture messages are big and can carry significant payload. For very different storage characteristics we have been able to use MongoDB in a multi region setup with replication and sharding.
Beanstalk_Data_0: ".. image:: pd-images/beanstakdata.gif"
Beanstalk_Data_1: `Beanstalk Data<http://beanstalkdata.com/>`_ uses MongoDB for its aggregation abilities and its amazing insert capacity.
wline_0: ".. image:: pd-images/wline.gif"
wline_1: `wline<http://wline.hu/>`_ uses MongoDB to store level system data, experience points, and levels.
TalkOver_0: ".. image:: pd-images/talkover.png"
TalkOver_1: `TalkOver<http://talkover.com/>`_ uses MongoDB as its primary database for online communication service. MongoDB is very good for our 'feeds' functionality. it's easy to create channels and subscribers to show interesting and friendly content to users. Sharding is solving our problem with hightload problem.
StoreHR_0: ".. image:: pd-images/storehr.png"
StoreHR_1: `StoreHR<http://www.storehr.com/>`_ uses MongoDB as a super fast and scalable platform for our Proactive Web Based HR software which keeps employee data and documents compliant, secure and always available - Perfect when it comes to due diligence at exit time! Mongo on AWS let us get up and running quickly during development and lets us scale horizontally as needed to meet customer demand.
Trillsy_0: ".. image:: pd-images/trillsy_large.png"
Trillsy_1: `Trillsy<http://www.trillsy.com/>`_ uses MongoDB for everything, user data, multi site data, stats and content.
Bottomless_Endless_0: ".. image:: pd-images/Bottomless_complete_01_Endless.jpg"
Bottomless_Endless_1: `Bottomless Endless<http://bottomlessinc.com/>`_ uses MongoDB as a complete solution for its scalable distributed Massive Multiplayer Online Gaming Engine Engine 64, born from Zynga's original Mafia Wars game in 2008.
Review19_0: ".. image:: pd-images/Review19.png"
Review19_1: `Review19<http://review19.com/>`_ uses MongoDB as a complete solution for its scalable distributed Massive Multiplayer Online Gaming Engine Engine 64, born from Zynga's original Mafia Wars game in 2008.
iQmetrix_0: ".. image:: pd-images/XQ_Interactive-Retail-medium.png"
iQmetrix_1: `iQmetrix<http://www.iqmetrix.com/>`_ uses MongoDB for our product catalog and for our configuration tool for XQ, our interactive, customer facing, solution for the wireless retail industry. We are running a MongoDB replica set in Microsoft's cloud platform Windows Azure.
Doocuments_Software_S_L__0: ".. image:: pd-images/doocumentslogo.png"
Doocuments_Software_S_L__1: `Doocuments Software S.L.<http://www.doocuments.com/site/>`_ uses MongoDB to hold all tracking information in a highly available and scalable sharded replicasets cluster. MongoDB provides us with the speed and scalability that we need to store and process all the document reading information we gather from document recipients, producing insight on readers behavior and real-time notifications to our users.
JackThreads_0: ".. image:: pd-images/jackthreads.jpeg"
JackThreads_1: `JackThreads<https://www.jackthreads.com/>`_, an ecommerce company, uses MongoDB for inventory tracking and reporting, allowing us to track products down to the individual unit.
Shelf9_0: ".. image:: pd-images/shelf9.png"
Shelf9_1: `Shelf9<http://www.shelf9.com/us/>`_ combines the power of a shopping search engine with social shopping features. We uses MongoDB as storage backend for our real-time data-mining code.
Luminis_Technologies_0: ".. image:: pd-images/lumminis.png"
Luminis_Technologies_1: `Luminis Technologies<http://luminis-technologies.com/>`_ is using MongoDB to build the Leren-op-Maat system which is an e-learning platform focussed on personalized learning for high schools. We are currently working with several high schools in the Netherlands where the system is used in the classroom. Most of our data is stored in a replica set running on Amazon AWS. It fits our RESTful architecture very well (our domain model is designed to work well as JSON structures) and the flexible scaling is very important to easily handle the extra load of new schools.
Betterez_0: ".. image:: pd-images/betterez.png"
Betterez_1: `Betterez<http://www.betterez.com/>`_ is a SaaS reservations, marketing and planning platform for the transportation industry designed to improve both passenger and operator experiences. MongoDB is used extensively in a replica set configuration spanning multiple data centers. MongoDB drives the Node.js web application and houses both the main data store and analytics data store. The flexibility and resiliency of the platform, combined with it's natural interface with JavaScript, enables the team to build technology with confidence.
DUVRI_81_08_0: ".. image:: pd-images/duvri8108.png"
DUVRI_81_08_1: `DUVRI 81.08<https://app.duvri8108.it/>`_ is a governative web application to help Italian corporates so that can manage workspace safety risks to prevent accidents and protect workers' life. DUVRI 81.08 is compliant to safety workspace's law (d.lgs 81/2008). The application is built in PHP with Zend Framework and use MongoDB, configured in replica sets, as documental database wrapped by Doctrine ODM.
Zomby_0: ".. image:: pd-images/ZombyLogo.png"
Zomby_1: `Zomby<http://zombyapp.com/>`_ is a massively multiplayer, location-based zombie apocalypse game. It was developed by Kudzu Creative Group. We chose MongoDB for our server primarily because of the ease of scalability. As our user-base expands globally, we will need to have multiple servers around the world, and MongoDB (and Erlang) will allow us to do that with minimal headache. Furthermore, due to the location-based nature of our game, we make extensive use of MongoDBs geospatial queries, which are both convenient and efficient.
Gusanito_com_0: ".. image:: pd-images/gusanitodotcom.png"
Gusanito_com_1: `Gusanito.com<http://www.gusanito.com/esp/index#>`_ uses MongoDB for its Facebook Apps.
Aion_Innovations_0: ".. image:: pd-images/aionphotos.jpeg"
Aion_Innovations_1: `Aion Innovations<http://www.aionphotos.com/>`_ uses MongoDB as the database for the whole application.
Support_com__Inc_0: ".. image:: pd-images/support.com.jpeg"
Support_com__Inc_1: `Support.com, Inc<http://www.support.com/>`_ provides technology services and software for consumers and small business. We use MongoDB to store massive data sets related to automated snapshots of state and error information for computers, devices and networks. We analyze this data in real-time to identify potential root causes and outcomes of home technology issues, make relevant product recommendations and predict patterns that may lead to subscriber churn.
Footballrrating_0: ".. image:: pd-images/footballrrating-logo.png"
Footballrrating_1: `Footballrrating<http://chimusolutions.com/tools/>`_ uses MongoDB to store all user data, such as login information, connecting to social network, match votes, and player tracking configurations. Schema-less design means great flexibility in pushing new features without having to migrate clunky SQL tables around multiple servers.
Factile_0: ".. image:: pd-images/factile.png"
Factile_1: `Factile<http://www.factile.net>`_ is a online free survey platform based on the flexible structure that Mongo DB provides. Each survey is different in structure. Factile uses MongoDB for its fast performance a survey tool need and we run analytics on the survey responses easily.
Dir_0: ".. image:: pd-images/stuff.png"
Dir_1: `Dir<http://www.dir.io/>`_ uses MongoDB to store all of its data models and finds it very usefull for creating embed documents. Dir is a simple business management tool.
Socialbakers_0: ".. image:: pd-images/Screen-Shot-2012-07-17-at-2.22.53-AM.png"
Socialbakers_1: `Socialbakers<http://www.socialbakers.com/>`_ uses MongoDB for its API. The company has developed an application that makes it easy for to get sophisticated metrics on performance through Facebook.
YMIRLINK_0: ".. image:: pd-images/ymirlink.gif"
YMIRLINK_1: `YMIRLINK<http://www.ymir.co.jp/>`_ is a Tokyo based e-mail service provider specializing in mass e-mail sending service for email marketing. In March 2012 we sent a record 1.6 billion e-mail messages per month via our SaaS-based mail system. In July 2012, we further improved the performances of our e-mail sending service by using MongoDB as our new mail transfer agent.
jScore_0: ".. image:: pd-images/jscore_new_logo.png"
jScore_1: `jScore<http://jscore.pro/>`_ lets recruiters upload a Job Description and resumes they have received/downloaded and lets users score candidates according to the job requirements in seconds. They don't do parsing. jScore reads through the Job Descriptions and Resumes like a human being. They use MongoDB as our primary datastore and also for storing their big data stream which they use for analytics. Blazing fast reads help keep their environment snappy, and no-wait heavy writes help them keep our users working without waiting.
Mailgun_0: ".. image:: pd-images/mailgun.png"
Mailgun_1: `Mailgun<http://mailgun.com/>`_ uses MongoDB as its primary database, which they use for all non-relational data: accounts, stats, logs, DNS cache--everything. Every replica set they have runs with an average daily load of 5,000 queries per second using just a couple of servers without breaking a sweat. Mailgun is a set of powerful APIs that allow you to send, receive, track and store email effortlessly.
National_Register_of_Haunted_Places_0: ".. image:: pd-images/nrohporg-300x67.jpeg"
National_Register_of_Haunted_Places_1: The `National Register of Haunted Places<http://www.NRoHP.org>`_ uses MongoDB for everything, including storing and maintaining all data regarding the hundreds of thousands of historic and storied places stored in a fast-growing database. Others can embed and access this data, sharing the joy and speed of MongoDB.
4thex_Solutions_0: ".. image:: pd-images/camofish.png.png"
4thex_Solutions_1: `4thex Solutions<http://4thex.com/products/camofish/camofish.xhtml>`_ offer a security module/realm called Camofish for Glassfish, which uses MongoDB to persist users and password hashes.
PrivyTV_0: ".. image:: pd-images/PrivytvLogo.jpg"
PrivyTV_1: `PrivyTV<http://www.privytv.com/>`_ uses MongoDB via PHP and Node.js for Content Management, device management and logging for their products.Privytv enables users to create a personal TV channel. Once created, the user's channel name can be shared with friends, family and fans, so that they can tune into the user's channel from their internet-enabled television sets or set-top boxes.
Kookoja_0: ".. image:: pd-images/Kookoja.png"
Kookoja_1: `Kookoja<http://kookoja.com/>`_ is a social networking site that connects Persian speakers from around the world. Kookoja uses MongoDB as its primary data store and uses PHP to serve up pages to users.
J_Media_0: ".. image:: pd-images/logo-j-media.jpg"
J_Media_1: `J-Media<http://www.j-media.com/>`_ uses MongoDB to store an audit trail of user activity within their project management system
...