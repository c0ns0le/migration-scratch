.. http://www.mongodb.org/display/DOCS/Durability+Internals WRITING-184

.. _durability-internals:

====================
Durability Internals
====================

.. warning::

   The main durability page (not the internals page) is the `Journaling
   <http://docs.mongodb.org/manual/administration/journaling/>`_ page.

Files
-----

The data file format is unchanged. 

Journal files are placed in ``/data/db/journal/``.

Running
-------

Journaling is on by default. Run with ``--nojournal`` to disable
journaling/durable storage. Both :program:`mongod` and ``test`` support
this option.

Declaring Write Intent
----------------------

WHen writing :program:`mongod` kernel code, one must now declare an
intention to write. Declaration of the intent occurs before the actual
write. See :file:`db/dur.h`. The actual write must occur before
releasing the write lock.

When you do your actual writing, use the pointer that
``dur::writing()`` returns, rather than the original pointer.

.. code-block:: cpp

   Foo *foo; 
   getDur().writing(thing)->bar = something; 

   int *x; 
   getDur().writingInt(x) += 3; 

   DiskLoc &loc; 
   loc.writing() = newLoc; 

   void *p; 
   unsigned len; 
   memcpy( getDur().writingPtr(p,len), src, len ); 

Try to declare intent on as small a region as possible. That way less
information is journalled. For example:

.. code-block:: cpp

   BigStruct *b; 

   dur::writing(b)->x = 3; // less efficient 

   *dur::writing(&b->x) = 3; // more efficient 

However, there is some overhead for each intent declaration, so if many
members of a struct will be written, it is likely better to just
declare intent on the whole struct.

Tests
----- 

``jstests/dur/`` contains tests for durability. 

.. code-block:: sh

   mongo --nodb jstests/dur/<testname>.js 

Administrative
--------------

.. code-block:: sh

   # dump journal entries during any recover, and then start normally
   mongod --journal --durOptions 1

   # recover and terminate
   mongod --journal --durOptions 4

   # dump journal entries (doing nothing else) and then terminate
   mongod --journal --durOptions 7

   # extra checks that everything is correct (slow but good for qa)
   mongod --journal --durOptions 8

Diagrams
--------

- `diagram 1 - process steps
  <https://docs.google.com/drawings/edit?id=1TklsmZzm7ohIZkwgeK6rMvsdaR13KjtJYMsfLr175Zc&hl=en>`_

- `diagram 2 - journal file structure
  <https://docs.google.com/drawings/edit?id=1iXjXZGz_ru6n-ub3EWMPtXBS424rH623nsyMQx8x4mo&hl=en>`_
