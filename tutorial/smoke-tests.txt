.. http://www.mongodb.org/display/DOCS/Smoke+Tests

.. _smoke-tests:
===========
Smoke Tests
===========

Test Organization
-----------------

.. Should we mention that we're at the top-level directory of the
   MongoDB source:

.. is :file: a valid directive?

.. TODO 
   - :file:`src/mongo/dbtests/.*cpp`
   - :file:`jstests/slowNightly/*js` has tests that take longer and run only at night
   - :file:`jstests/slowWeekly/*.js` has tests that take even longer and run only once a week

* :file:`dbtests/.*cpp` has C++ unit tests
* :file:`jstests/*.js` has core tests
* :file:`jstests/repl*/*.js` has replication tests
* :file:`jstests/sharding/*.js` has sharding tests
* :file:`slowNightly/*js` has tests that take longer and run only at night
* :file:`slowWeekly/*.js` has tests that take even longer and run only once a week


Running all the tests
---------------------

.. TODO Some notes as I run through this:

.. 1) Prerequisite: scons, python

.. 2) sudo the scons commands since it needs to create /data directory.

.. 3a) SConscript.smoke has a smokeAll target. Could a user run 
       scons smoke smokeAll instead of all the individual tests below?
       I'm running that, succesfully ran 13, stopped w error in
       smokeSharding:
       /Users/kay/Mongo/mongodb-2.2.0-src/jstests/sharding/auth_slaveok_
       routing.js 253

.. 3b) If we can't just use scons smoke smokeAll but must run as below,
       - my run failed on first command since no target for startMongod --
         I don't think it is a smoke test target
       - noticed that we list smokeJS twice -- is one
         supposed to be smokeJsPerf? And do we need to include
         smokeJsSlowWeekly, smokeQuota, smokeAggregation, smokeMultiVersion,
         smokeResetFails.

.. code-block:: sh

   scons smoke smokeCppUnittests smokeDisk smokeTool smokeAuth startMongod smokeClient smokeJs
   scons startMongodSmallOplog smokeJs
   scons startMongod smokeJsSlowNightly
   scons smokeTool
   scons smokeReplSets
   scons smokeDur
   scons mongosTest smokeSharding
   scons smokeRepl smokeClone
   scons startMongod smokeParallel


smoke.py
--------

:file:`smoke.py` lets you run a subsets of the tests in :file:`jstests/`.
When it is running tests, it starts up an instance of mongod, runs the tests,
and then shuts it down again.
You can run it while running other instances of MongoDB on the same machine:
it uses ports in the 30000 range and its own data directories.

For the moment, :file:`smoke.py` must be run from the top-level directory
of a MongoDB source repository.
This directory must contain at least the :program:`mongo` and
:program:`mongod` binaries.
To run certain tests, you'll also need to build the tools and :program:`mongos`.
It's a good idea to run ``scons .`` before running the tests.

To run :file:`smoke.py` you'll need a recent version of
`PyMongo <http://api.mongodb.org/python/current/installation.html>`_.

To see the possible options, run:

.. TODO  break this block up so I don't need to use the $

.. code-block:: sh

   $ python buildscripts/smoke.py --help
   Usage: smoke.py [OPTIONS] ARGS*

   Options:
     -h, --help            show this help message and exit
     --mode=MODE           If "files", ARGS are filenames; if "suite", ARGS are
                           sets of tests (suite)
     --test-path=TEST_PATH
                           Path to the test executables to run, currently only
                           used for 'client' (none)
     --mongod=MONGOD_EXECUTABLE
                           Path to mongod to run (/Users/mike/10gen/mongo/mongod)
     --port=MONGOD_PORT    Port the mongod will bind to (32000)
     --mongo=SHELL_EXECUTABLE
                           Path to mongo, for .js test files
                           (/Users/mike/10gen/mongo/mongo)
     --continue-on-failure
                           If supplied, continue testing even after a test fails
     --from-file=FILE      Run tests/suites named in FILE, one test per line, '-'
                           means stdin
     --smoke-db-prefix=SMOKE_DB_PREFIX
                           Prefix to use for the mongods' dbpaths ('')
     --small-oplog         Run tests with master/slave replication & use a small
                           oplog

.. TODO we seem to be missing some options, if we're printing out what the screen shows

.. note::

   By default, :file:`smoke.py` will run tests that create data in :file:`/data/db`,
   which may interfere with other MongoDB instances you are running.
   To change the directory in which the smoke tests create databases, use
   ``--smoke-db-prefix=/some/other/path``

To run specific tests, use the :option:`--mode=files` option:

.. code-block:: sh

   python buildscripts/smoke.py --mode=files jstests/find1.js

You can specify as many files as you want.

You can also run a suite of tests.  Suites are predefined and include:

* `test`
* `all`
* `perf`
* `js`
* `quota`
* `jsPerf`
* `disk`
* `jsSlowNightly`
* `jsSlowWeekly`
* `parallel`
* `clone`
* `repl` (master/slave replication tests)
* `replSets` (replica set tests)
* `auth`
* `sharding`
* `tool`
* `client`
* `mongosTest`

To run a suite, specify the suite's name:

.. code-block:: sh

   python buildscripts/smoke.py js

Running a jstest manually
-------------------------

.. TODO change replsetarb3.js to replsetarb2.js since
   my current replsets directory doesn't have replsetarb3.js
   
.. sudo to access the data directory?

You can run a jstest directly from the shell, for example:

.. code-block:: sh

   mongo --nodb jstests/replsets/replsetarb3.js

Running the C++ unit tests
--------------------------

.. how are these unit test different from the
   :file:`src/mongo/dbtests/.*cpp`?

.. Should we mention you need to be at the top level directory to run
   scons to build and run as well as sudo?

The tests under ``jstests/`` folder are written in mongo shell javascript.
However there are a set of C++ unit tests also.  To run them:

.. code-block:: none

   scons test
   ./test

.. TODO  the parenthesis should be moved to previous paragraph
   since you build at the top level directory and it's confusing here
   - not to mention, missing end parenthesis)

Build the unit tests (in ``src/mongo/unittest/`` by running:

.. TODO  break this block up so I don't need to use the $

.. code-block:: sh

   $ scons build/unittests.txt
   /* build output */
   Generating build/unittests.txt
           build/linux2/dd/durableDefaultOff/mongo/platform/atomic_word_test
           ...
           build/linux2/dd/durableDefaultOff/mongo/bson_template_evaluator_test
           build/linux2/dd/durableDefaultOff/mongo/balancer_policy_test
   scons: done building targets.

Then use the line above to run the binary generated:

.. TODO  get rid of $ once the sentence above is fixed

.. code-block:: sh

   $ ./build/linux2/dd/durableDefaultOff/mongo/platform/atomic_word_test

.. seealso::

   * `scons <http://www.scons.org/>`_
